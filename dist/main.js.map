{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/common/GenericButton.js","webpack:///./src/common/ItemButton.js","webpack:///./src/common/StateTransitionButton.js","webpack:///./src/common/TitleText.js","webpack:///./src/common/constants.js","webpack:///./src/common/gitButton.js","webpack:///./src/index.js","webpack:///./src/states/about-state.js","webpack:///./src/states/asset-load-state.js","webpack:///./src/states/creatureConstants.js","webpack:///./src/states/entry-state.js","webpack:///./src/states/game-over-state.js","webpack:///./src/states/instructions-state.js","webpack:///./src/states/instructions-state2.js","webpack:///./src/states/instructions-state3.js","webpack:///./src/states/instructions-state4.js","webpack:///./src/states/play-state.js","webpack:///./src/states/storeMenu.js"],"names":["GenericButton","game","x","y","btnName","callback","genericButton","add","text","ButtonStyle","anchor","setTo","inputEnabled","events","onInputUp","onInputOver","alpha","onInputOut","ItemButton","itemButton","StateTransitionButton","state","length","i","start","titleStyle","BaseStyle","fontSize","align","TitleText","contents","set","FONT_COLOR","font","fill","DescriptionStyle","MARGIN","ITEM_MAP","icon","descr","cost","GitButton","link","window","open","Phaser","Game","AUTO","undefined","entryState","aboutState","instructionsState","instructionsState2","instructionsState3","instructionsState4","gameOverState","assetLoadState","textCrawlStyle","wordWrap","wordWrapWidth","width","textCrawl","create","aboutText","preload","load","image","spritesheet","audio","CREATURE_NAMES","DONKEY","FAIRY","GNOME","UNICORN","PHOENIX","IMP","GOBLIN","BASE_ENEMY","turnProb","knockbackVelocityX","knockbackVelocityY","flier","altitude","minDistance","name","price","baseSpeed","baseHealth","baseSpawnRate","CREATURE_LIST","CREATURE_NAME_MAP","forEach","creature","CreatureConstants","TITLE_Y","init","update","instructionsText","nextButton","generatedText","playState","BAG_X","BAG_Y","bagSprite","sprite","bagOverlaySprite","row","creatureProps","creatureName","height","fixedToCamera","COIN_Y","COIN_X","coinSprite","animations","play","HEART_Y","donkeySprite","frame","storeSprite","col","ICON_X","ICON_Y","Object","keys","itemName","itemProps","donkeyY","GRAVITY","BOUNCE","GROUND_LEVEL","HEALTH_BAR_X","HEALTH_BAR_Y","COIN_STAT_X","COIN_STAT_Y","STORE_X","STORE_Y","STORE_RADIUS","ITEM_X","ITEM_Y","level","cursors","groundPlatform","shrek","swampBubble","SHREK_BASE_SPEED","SHREK_BASE_JUMP_SPEED","SHREK_KNOCKBACK_TIME","SHREK_KNOCKBACK_SPEED","actionSprites","actionSpriteProps","speed","collisionCheckFunction","checkChopCollision","checkNetCollision","coinIcon","coinText","heartGroup","iconBag","creatureCountText","isShrekActing","doubleJumped","jumpKeyWasPressed","storeUI","choiceLabel","enemies","enemiesSold","timeSinceEnemySpawn","CAPTURABLE_DURATION","storePurchaseSound","storePurchaseDenied","netCaptureSound","bubbleGetSound","bubbleBounceSound","bubblePopSound","fartSound","hitSound","hitBigSound","loserFartSound","isShrekFacingLeft","bouncing","isStoreOpen","gold","inventory","inventoryDisplay","capturedCreatures","creatureCounts","health","SPACE_BAR","ACTION_KEY","NET_KEY","emitterManager","fairieDustEmitter","world","setBounds","stage","disableVisibilityChange","input","keyboard","createCursorKeys","addBackgroundScenery","getLevelFromEnemiesSold","addEnemies","addShrek","addActionSprites","physics","startSystem","Physics","ARCADE","camera","follow","Camera","FOLLOW_LOCKON","addStatOverlay","addKey","Keyboard","SPACEBAR","onUp","toggleStore","A","animateAction","S","createInventory","initSpawnTimeMap","updateShrek","updateEnemies","updateShrekAction","updateStatOverlay","actionName","items","group","enableBody","ground","body","immovable","store","scale","arcade","enable","bounce","gravity","collideWorldBounds","hitTimer","addSwampBubble","spriteName","spriteProps","actionSprite","animationName","actionAnim","onComplete","collidedEnemies","spawnEnemy","enemyTemplate","enemy","randomSpawnX","direction","template","pauseTimer","capturableTimer","push","rand","Math","random","denormalized","spawnX","addForegroundScenery","imageName","n","Date","getMilliseconds","treeX","treeY","treeImage","destroy","createStore","menuContainer","StoreMenu","sellButtonCoords","camera_izeCoordinates","sellButton","closeButtonCoords","closeButton","coords","itemDesc","itemCost","validatePurchase","itemDescr","item","coinCoords","heart","bagCoords","iconBagOverlay","children","getChildAt","visible","itemIcon","emitter","makeParticles","flow","collide","velocity","reanchorActionSprites","updateKnockedBackSprite","updateShrekNormal","getShrekRunSpeed","isOnGround","left","isDown","flipShrek","right","up","touching","down","currentDown","lastDown","overlap","onShrekHit","tint","updateCapturableEnemy","enemyName","timeSinceSpawn","enemyProps","destroyEnemy","getEnemySpeedFromLevel","flipSpriteDirection","actionSpriteName","anchorActionSprite","knockbackSprite","adversary","kbX","kbY","velocityX","velocityY","anim","armAnchor","getShrekActionAnchor","anchorX","anchorY","net","netSprite","includes","foundCollision","Rectangle","intersects","getBounds","isBigFist","chop","chopSprite","hadZeroHealth","damageDealt","splice","indexOf","bmd","bitmapData","ctx","beginPath","rect","fillStyle","bringToTop"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import {FONT_COLOR, ButtonStyle} from \"../common/constants\";\r\n\r\n// instance of the game, x coordinate, y coordinate, button display text, and state to move to\r\nconst GenericButton = (game, x, y, btnName, callback) => {\r\n    const genericButton = game.add.text(x, y, btnName, ButtonStyle);\r\n    genericButton.anchor.setTo(0,0);\r\n    genericButton.inputEnabled = true;\r\n    genericButton.events.onInputUp.add(callback);\r\n    genericButton.events.onInputOver.add((( ) => {\r\n        genericButton.alpha = .5;\r\n    }), this);\r\n    genericButton.events.onInputOut.add(() => {\r\n        genericButton.alpha = 1;\r\n    }, this);\r\n\r\n    return genericButton;\r\n};\r\n\r\nexport default GenericButton;","import {FONT_COLOR, ButtonStyle} from \"../common/constants\";\r\n\r\n// instance of the game, x coordinate, y coordinate, button display text, and state to move to\r\nconst ItemButton = (game, x, y, btnName, callback) => {\r\n    const itemButton = game.add.text(x, y, btnName, ButtonStyle);\r\n    /*itemButton.setTextBounds(x, y, 100, 100);\r\n    itemButton.style.align = \"left\";\r\n    itemButton.style.boundsAlignH = \"left\";\r\n    itemButton.style.boundsAlignV = \"top\";*/\r\n    itemButton.inputEnabled = true;\r\n    itemButton.events.onInputUp.add(callback);\r\n    itemButton.events.onInputOver.add((( ) => {\r\n        itemButton.alpha = .5;\r\n    }), this);\r\n    itemButton.events.onInputOut.add(() => {\r\n        itemButton.alpha = 1;\r\n    }, this);\r\n\r\n    return itemButton;\r\n};\r\n\r\nexport default ItemButton;","import {FONT_COLOR, ButtonStyle} from \"../common/constants\";\r\nimport GenericButton from \"./GenericButton\";\r\n\r\n// instance of the game, x coordinate, y coordinate, button display text, and state to move to\r\nconst StateTransitionButton = (game, x, y, btnName, ...state) => {\r\n    return GenericButton(game, x, y, btnName, () => {\r\n        if (state.length > 1) {\r\n            for(let i = 0; i < state.length; i++) {\r\n                game.state.start(state[i]);\r\n            }\r\n        } else {\r\n            game.state.start(state[0]);\r\n        }\r\n    });\r\n};\r\n\r\nexport default StateTransitionButton;","import {BaseStyle} from \"./constants\";\r\n\r\nlet titleStyle = {...BaseStyle, fontSize: '48px'};\r\ntitleStyle.align = 'center';\r\n\r\nexport default function TitleText(game, x, y, contents) {\r\n    let text = game.add.text(x, y, contents, titleStyle);\r\n    text.anchor.set(0.5);\r\n}","export const FONT_COLOR = \"#589b00\";\r\nexport const BaseStyle = {font: 'Comic Sans MS', fill: FONT_COLOR, align: 'left'};\r\nexport const ButtonStyle = { ...BaseStyle,  fontSize: '32px' };\r\nexport const DescriptionStyle = { ...BaseStyle, fontSize: '18px' };\r\nexport const MARGIN = 24;\r\nexport const ITEM_MAP = {\r\n    \"Speed\": {icon: \"speedIcon\" , descr: \"Doubles movement speed\", cost: 40},\r\n    \"Fart in a Jar\": {icon: \"fartJarIcon\" , descr: \"Adds double-jump ability\", cost: 80},\r\n    \"Swamp Bubble\": {icon: \"swampBubbleIcon\" , descr: \"Takes one free hit & adds bounce ability\", cost: 150},\r\n    \"Fairie Dust\": {icon: \"fairieDustIcon\" , descr: \"Slows fall speed\", cost: 220},\r\n    \"Big Fist\": {icon: \"bigFistIcon\" , descr: \"Higher damage and knock back\", cost: 300},\r\n};\r\n","import {FONT_COLOR, ButtonStyle} from \"../common/constants\";\r\nimport GenericButton from \"./GenericButton\";\r\n\r\nconst GitButton = (game, x, y, btnName, link) => {\r\n    GenericButton(game, x, y, btnName, () => {\r\n        window.open(link);\r\n    });\r\n};\r\n\r\nexport default GitButton;","import entryState from \"./states/entry-state\";\r\nimport aboutState from \"./states/about-state\";\r\nimport instructionsState from \"./states/instructions-state\";\r\nimport instructionsState2 from \"./states/instructions-state2\";\r\nimport instructionsState3 from \"./states/instructions-state3\";\r\nimport instructionsState4 from \"./states/instructions-state4\";\r\nimport gameOverState from \"./states/game-over-state\";\r\nimport assetLoadState from \"./states/asset-load-state\";\r\n\r\nvar game = new Phaser.Game(640, 512, Phaser.AUTO, Phaser.AUTO, 'game', undefined, undefined, false);\r\ngame.state.add(\"Entry\", entryState(game));\r\ngame.state.add(\"About\", aboutState(game));\r\ngame.state.add(\"Instructions\", instructionsState(game));\r\ngame.state.add(\"Instructions2\", instructionsState2(game));\r\ngame.state.add(\"Instructions3\", instructionsState3(game));\r\ngame.state.add(\"Instructions4\", instructionsState4(game));\r\ngame.state.add(\"GameOver\", gameOverState(game));\r\ngame.state.add(\"AssetLoad\", assetLoadState(game));\r\ngame.state.start(\"AssetLoad\");","import {FONT_COLOR} from \"../common/constants\";\r\nimport StateTransitionButton from \"../common/StateTransitionButton\";\r\nimport GitButton from \"../common/gitButton\";\r\nexport default function aboutState(game) {\r\n\r\n    let textCrawlStyle = { font: '15px Comic Sans MS', fill: FONT_COLOR, align: 'left', wordWrap: true, wordWrapWidth: game.width-60};\r\n    let textCrawl = 'About\\n\\n'\r\n                    + 'Original story, art, music, and gameplay developed by libjared, scottyseus, \\njronsomers, and endlessDreamHero  for'\r\n                    + ' Ludum Dare Jam 44.\\n\\n'\r\n                    + 'Check out the links below:\\n\\n';\r\n\r\n    return {\r\n        create: function() {\r\n            StateTransitionButton(game, 60, 30, '< Back', \"Entry\");\r\n            GitButton(game, 60, 250, '> scottyseus on GitHub <', \"https://github.com/scottyseus/due-process\");\r\n            GitButton(game, 60, 290, '> libjared on GitHub <', \"https://github.com/libjared\");\r\n            GitButton(game, 60, 330, \"> jronsomers GitHub\", \"https://github.com/jronSomers\");\r\n            GitButton(game, 60, 370, '> Ludum Dare page <', \"https://ldjam.com/events/ludum-dare/44/subs\");\r\n\r\n            const aboutText = game.add.text(60, 90, textCrawl, textCrawlStyle);\r\n        }\r\n    };\r\n};","export default function assetLoadState(game) {\r\n\r\n    function preload() {\r\n        game.load.image('ground', 'src/assets/ground.png');\r\n        game.load.image('groundTop', 'src/assets/groundTop.png');\r\n        game.load.spritesheet('shrek', 'src/assets/shrek.png', 126/3, 72);\r\n        game.load.spritesheet('donkey', 'src/assets/donkey.png', 192/4, 48);\r\n        game.load.spritesheet('unicorn', 'src/assets/unicorn.png', 92, 82);\r\n        game.load.spritesheet('gnome', 'src/assets/gnome.png', 30, 50);\r\n        game.load.spritesheet('fairy', 'src/assets/fairy.png', 56/4, 17);\r\n        game.load.spritesheet('phoenix', 'src/assets/phoenix.png', 56, 56);\r\n        game.load.spritesheet('imp', 'src/assets/imp.png', 32, 48);\r\n        game.load.spritesheet('goblinWarrior', 'src/assets/goblinWarrior.png', 52, 72);\r\n        game.load.image('tree1', 'src/assets/tree1.png');\r\n        game.load.image('tree2', 'src/assets/tree2.png');\r\n        game.load.image('tree3', 'src/assets/tree3.png');\r\n        game.load.image(\"berryBush\", \"src/assets/berryBush.png\");\r\n        game.load.image(\"store\", \"src/assets/store.png\");\r\n        game.load.image(\"forestBackground\", \"src/assets/forestBackground.png\");\r\n        game.load.image(\"storeBackground\", \"src/assets/storeBackground.png\");\r\n        game.load.spritesheet(\"chop\", \"src/assets/chop.png\", 120/3, 64);\r\n        game.load.spritesheet(\"bigfist\", \"src/assets/bigfist.png\", 192/3, 64);\r\n        game.load.spritesheet(\"net\", \"src/assets/net.png\", 288/3, 108);\r\n        game.load.image(\"sky\", \"src/assets/sky.png\");\r\n        game.load.image(\"heart\", \"src/assets/heart.png\");\r\n        game.load.spritesheet(\"coin\", \"src/assets/coin.png\", 128/8, 16);\r\n        game.load.image(\"swampBubble\", \"src/assets/swampBubble.png\");\r\n        game.load.image(\"fairieDust\", \"src/assets/fairieDust.png\");\r\n        \r\n\r\n        // icons\r\n        game.load.image(\"donkeyIcon\", \"src/assets/donkeyIcon.png\");\r\n        game.load.image(\"fairyIcon\", \"src/assets/fairyIcon.png\");\r\n        game.load.image(\"gnomeIcon\", \"src/assets/gnomeIcon.png\");\r\n        game.load.image(\"unicornIcon\", \"src/assets/unicornIcon.png\");\r\n        game.load.image(\"phoenixIcon\", \"src/assets/phoenixIcon.png\");\r\n        game.load.image(\"impIcon\", \"src/assets/impIcon.png\");\r\n        game.load.image(\"goblinWarriorIcon\", \"src/assets/goblinWarriorIcon.png\");\r\n        game.load.image(\"iconBag\", \"src/assets/iconBag.png\");\r\n        game.load.image(\"iconBagOverlay\", \"src/assets/iconBagOverlay.png\");\r\n\r\n        game.load.image(\"swampBubbleIcon\", \"src/assets/swampBubbleIcon.png\");\r\n        game.load.image(\"fairieDustIcon\", \"src/assets/fairieDustIcon.png\");\r\n        game.load.image(\"bigFistIcon\", \"src/assets/bigFistIcon.png\");\r\n        game.load.image(\"speedIcon\", \"src/assets/speedIcon.png\");\r\n        game.load.image(\"fartJarIcon\", \"src/assets/fartJarIcon.png\");\r\n\r\n        // sounds\r\n        game.load.audio(\"net\", \"src/assets/sound/net.wav\");\r\n        game.load.audio(\"purchase\", \"src/assets/sound/cashreg.wav\");\r\n        game.load.audio(\"denied\", \"src/assets/sound/denied.wav\");\r\n        game.load.audio(\"bubbleGet\", \"src/assets/sound/bubbleget.wav\");\r\n        game.load.audio(\"bubbleBounce\", \"src/assets/sound/bubblebounce.wav\");\r\n        game.load.audio(\"bubblePop\", \"src/assets/sound/bubblePop.wav\");\r\n        game.load.audio(\"fart\", \"src/assets/sound/fart.wav\");\r\n        game.load.audio(\"hit\", \"src/assets/sound/hit.wav\");\r\n        game.load.audio(\"hitBig\", \"src/assets/sound/hit2.wav\");\r\n        game.load.audio(\"loserFart\", \"src/assets/sound/loserFart.wav\"); \r\n    }\r\n\r\n    function create() {\r\n        game.state.start('Entry');\r\n    }\r\n\r\n    return {preload, create};\r\n\r\n}","const CREATURE_NAMES = {\r\n    DONKEY: \"donkey\",\r\n    FAIRY: \"fairy\",\r\n    GNOME: \"gnome\",\r\n    UNICORN: \"unicorn\",\r\n    PHOENIX: \"phoenix\",\r\n    IMP: \"imp\",\r\n    GOBLIN: \"goblinWarrior\"\r\n}\r\n\r\nlet BASE_ENEMY = {\r\n    turnProb: 0.02,\r\n    knockbackVelocityX: 200,\r\n    knockbackVelocityY: -200,\r\n    flier: false,\r\n    altitude: 0, // height above ground level\r\n    minDistance: 250, // minimum spawn distance from store\r\n};\r\n\r\nlet DONKEY = {\r\n    ...BASE_ENEMY,\r\n    name: CREATURE_NAMES.DONKEY,\r\n    price: 30,\r\n    baseSpeed: 200,\r\n    baseHealth: 3,\r\n    baseSpawnRate: 3600,\r\n    minDistance: 1200\r\n};\r\n\r\nlet FAIRY = {\r\n    ...BASE_ENEMY,\r\n    name: CREATURE_NAMES.FAIRY,\r\n    price: 10,\r\n    baseSpeed: 60,\r\n    baseHealth: 1,\r\n    baseSpawnRate: 2400,\r\n    flier: true,\r\n    altitude: 100,\r\n    knockbackVelocityY: 0,\r\n};\r\n\r\nlet UNICORN = {\r\n    ...BASE_ENEMY,\r\n    name: CREATURE_NAMES.UNICORN,\r\n    price: 60,\r\n    baseSpeed: 150,\r\n    baseHealth: 3,\r\n    baseSpawnRate: 4200,\r\n    minDistance: 2400\r\n};\r\n\r\nlet GNOME = {\r\n    ...BASE_ENEMY,\r\n    name: CREATURE_NAMES.GNOME,\r\n    price: 30,\r\n    baseSpeed: 100,\r\n    baseHealth: 2,\r\n    baseSpawnRate: 3600,\r\n    minDistance: 1200\r\n};\r\n\r\nlet PHOENIX = {\r\n    ...BASE_ENEMY,\r\n    name: CREATURE_NAMES.PHOENIX,\r\n    price: 100,\r\n    baseSpeed: 125,\r\n    baseHealth: 2,\r\n    baseSpawnRate: 4200,\r\n    altitude: 400,\r\n    flier: true,\r\n};\r\n\r\nlet IMP = {\r\n    ...BASE_ENEMY,\r\n    name: CREATURE_NAMES.IMP,\r\n    price: 10,\r\n    baseSpeed: 125,\r\n    baseHealth: 1,\r\n    baseSpawnRate: 2400,\r\n};\r\n\r\nlet GOBLIN = {\r\n    ...BASE_ENEMY,\r\n    name: CREATURE_NAMES.GOBLIN,\r\n    price: 60,\r\n    baseSpeed: 85,\r\n    baseHealth: 4,\r\n    baseSpawnRate: 4200,\r\n    minDistance: 2400\r\n};\r\n\r\nconst CREATURE_LIST = [DONKEY, FAIRY, GNOME, UNICORN, PHOENIX, IMP, GOBLIN];\r\nconst CREATURE_NAME_MAP = {};\r\n\r\nCREATURE_LIST.forEach((creature) => {\r\n    CREATURE_NAME_MAP[creature.name] = creature;\r\n});\r\n\r\nconst CreatureConstants = {\r\n    CREATURE_NAMES,\r\n    DONKEY,\r\n    UNICORN,\r\n    FAIRY,\r\n    GNOME,\r\n    PHOENIX,\r\n    IMP,\r\n    GOBLIN,\r\n    CREATURE_LIST,\r\n    CREATURE_NAME_MAP\r\n};\r\n\r\nexport default CreatureConstants;","import StateTransitionButton from \"../common/StateTransitionButton\";\r\nimport TitleText from '../common/TitleText';\r\nimport playState from \"./play-state\";\r\n\r\nconst TITLE_Y = 70;\r\n\r\nexport default function entryState(game) {\r\n    return {\r\n        preload: function() {\r\n        },\r\n\r\n        init: function() {\r\n        },\r\n \r\n        create: function() {\r\n            TitleText(game, game.width / 2, TITLE_Y, \"Shrek Unknown's\\nBattleSwamps\");\r\n\r\n            StateTransitionButton(game, 30,TITLE_Y + 72, \"Play\", \"Instructions\");\r\n            StateTransitionButton(game, 30, TITLE_Y + 72 * 2,'About', \"About\");\r\n        },\r\n\r\n        update: function() {\r\n            \r\n        }\r\n    }\r\n};","import { FONT_COLOR } from \"../common/constants\";\r\nimport StateTransitionButton from '../common/StateTransitionButton';\r\nimport TitleText from \"../common/TitleText\";\r\nexport default function gameOverState(game) {\r\n\r\n    function create() {\r\n        TitleText(game, game.width/2, game.width/2, 'Game Over');\r\n        StateTransitionButton(game, 60, 30, '< Back', \"Entry\");\r\n    }\r\n    \r\n    return {create};\r\n}","import StateTransitionButton from \"../common/StateTransitionButton\";\r\nimport {FONT_COLOR, ButtonStyle, DescriptionStyle} from \"../common/constants\";\r\nexport default function instructionsState(game) {\r\n    let instructionsText = '\\n\\n Shrek needs more gold to buy back his swamp!\\n\\n'\r\n                         + 'The Royal Guards are paying a pretty penny in exchange\\n for mythical Creatures...\\n\\n'\r\n                         + \"What's an Orge to do? Go to the would-be-king to talk?\\n\\n...Nah rounding up these things seems way easier.\\n\\n\";\r\n    return {\r\n        create: function () {\r\n            StateTransitionButton(game, 60, 30, '< Back', \"Entry\");\r\n            let nextButton = StateTransitionButton(game, game.width - 60, 30, 'Next >', \"Instructions2\");\r\n            nextButton.anchor.setTo(1, 0);\r\n            let generatedText = game.add.text(60, 90, instructionsText, DescriptionStyle);\r\n        }\r\n    };\r\n}","import StateTransitionButton from \"../common/StateTransitionButton\";\r\nimport {FONT_COLOR, ButtonStyle, DescriptionStyle} from \"../common/constants\";\r\nexport default function instructionsState2(game) {\r\n    let instructionsText = 'Controls:\\nMove left with left arrow key.\\nMove right with right arrow key.\\nJump with up arrow key.\\nFall fast* with down arrow key.\\n'\r\n                         + 'Attack creatures with \\\"A\\\" key.\\nUse net to catch creatures with \\\"S\\\" key.\\nOpen the Shoppe with Spacebar**.\\n\\nCreatures can not be caught utill they are weak enough.\\nHit creatures so that way they can be catchable.'\r\n                         + '\\n\\n*Swamp Bubble Power-up only.\\n**Shrek needs to be standing at the Shoppe.';\r\n    return {\r\n        create: function () {\r\n            StateTransitionButton(game, 60, 30, '< Back', \"Instructions\");\r\n            let nextButton = StateTransitionButton(game, game.width - 60, 30, 'Next >', \"Instructions3\");\r\n            nextButton.anchor.setTo(1, 0);\r\n            let generatedText = game.add.text(60, 90, instructionsText, DescriptionStyle);\r\n        }\r\n    };\r\n}","import StateTransitionButton from \"../common/StateTransitionButton\";\r\nimport {FONT_COLOR, ButtonStyle, DescriptionStyle} from \"../common/constants\";\r\nimport playState from \"./play-state\";\r\nimport CreatureConstants from \"./creatureConstants\";\r\nexport default function instructionsState3(game) {\r\n    return {\r\n        create: function () {\r\n            StateTransitionButton(game, 60, 30, '< Back', \"Instructions2\");\r\n            game.state.add('Play', playState(game));\r\n            let nextButton = StateTransitionButton(game, game.width - 60, 30, 'Next >', \"Instructions4\");\r\n            nextButton.anchor.setTo(1, 0);\r\n            \r\n\r\n            let BAG_X = 60;\r\n            let BAG_Y = 90;\r\n\r\n            let bagSprite = game.add.sprite(BAG_X,BAG_Y,\"iconBag\");\r\n            bagSprite.alpha = 0.5;\r\n            let bagOverlaySprite = game.add.sprite(BAG_X,BAG_Y,\"iconBagOverlay\");\r\n\r\n            let row = 0;\r\n            CreatureConstants.CREATURE_LIST.forEach((creatureProps) => {\r\n                let creatureName = creatureProps.name;\r\n                let y = BAG_Y + bagSprite.height - 16 - (row * 23);\r\n                let x = BAG_X + 6;\r\n                let icon = game.add.image(x,y, creatureName + 'Icon');\r\n                let text = game.add.text(x + 16, y, ' x ' + 0, {font: 'Comic Sans MS', fill: FONT_COLOR, align: 'left', fontSize: '12px'});\r\n                text.anchor.setTo(0, 0.5);\r\n                text.fixedToCamera = true;\r\n                icon.anchor.setTo(0, 0.5);\r\n                ++row;\r\n            });\r\n            game.add.text(180, 180, \"The bag to the left displays the number of\\ncreatures yet to be sold.\", DescriptionStyle);\r\n\r\n            let COIN_Y = 340\r\n            let COIN_X = 60;\r\n            let coinSprite = game.add.sprite(COIN_X, COIN_Y, \"coin\");\r\n            coinSprite.animations.add('rotate', [0,1,2,3,4,5,6,7], 14, true);\r\n            coinSprite.animations.play('rotate');\r\n            game.add.text(COIN_X + 20, COIN_Y, ' x ' + 0, {font: 'Comic Sans MS', fill: FONT_COLOR, align: 'left', fontSize: '12px'});\r\n            game.add.text(180, COIN_Y, \"The coin indicates your current amount of gold.\", DescriptionStyle);\r\n\r\n            let HEART_Y = 400;\r\n            game.add.sprite(60, HEART_Y, 'heart');\r\n            game.add.text(180, HEART_Y, \"Your health is equal to the number of hearts.\", DescriptionStyle);\r\n        }\r\n    };\r\n}","import StateTransitionButton from \"../common/StateTransitionButton\";\r\nimport {ITEM_MAP, FONT_COLOR, ButtonStyle, DescriptionStyle} from \"../common/constants\";\r\nimport playState from \"./play-state\";\r\nimport CreatureConstants from \"./creatureConstants\";\r\nexport default function instructionsState3(game) {\r\n    let donkeySprite;\r\n    let frame = 0;\r\n\r\n    return {\r\n        create: function () {\r\n            StateTransitionButton(game, 60, 30, '< Back', \"Instructions3\");\r\n            game.state.add('Play', playState(game));\r\n            let nextButton = StateTransitionButton(game, game.width - 60, 30, 'Play >', \"Play\");\r\n            nextButton.anchor.setTo(1, 0);\r\n            \r\n\r\n            let BAG_X = 60;\r\n            let BAG_Y = 90;\r\n\r\n            let storeSprite = game.add.sprite(BAG_X,BAG_Y,\"store\");\r\n            game.add.text(200, BAG_Y + storeSprite.height / 2, \"Press the space bar while standing in front\\n\" +\r\n                \"of the store to buy items and\\nsell creatures.\", DescriptionStyle);\r\n\r\n            let col = 0;\r\n            let ICON_X = 90;\r\n            let ICON_Y = BAG_Y + storeSprite.height +  80;\r\n            Object.keys(ITEM_MAP).forEach((itemName) => {\r\n                let itemProps = ITEM_MAP[itemName];\r\n                let y = ICON_Y;\r\n                let x = ICON_X + 18 * col;\r\n                let icon = game.add.image(x,y, itemProps.icon);\r\n                ++col;\r\n            });\r\n            game.add.text(200, ICON_Y, \"These icons at the top of your screen\\nindicate owned items. Except for Swamp Bubble, all\\nitems can only be bought once.\", DescriptionStyle);\r\n\r\n            let donkeyY = ICON_Y + 120;\r\n            donkeySprite = game.add.sprite(90, donkeyY, \"donkey\");\r\n            donkeySprite.animations.add(\"donkeyWalk\", [0, 1, 2, 0], 12, true);\r\n            game.add.text(200, donkeyY, \"Critically damaged enemies can be captured\\nwith the net. Enemies flash when\\ncritically damaged. Hitting a critically damaged\\nenemy destroys it.\", DescriptionStyle);\r\n        },\r\n        update: function() {\r\n            ++frame;\r\n            donkeySprite.alpha = frame % 4 >= 2 ? 0.1 : 1;\r\n            if(frame > 2000000000) {\r\n                frame = 0;\r\n            }\r\n        }\r\n    };\r\n}","import {ITEM_MAP, FONT_COLOR, MARGIN, DescriptionStyle} from \"../common/constants\";\r\nimport GenericButton from \"../common/GenericButton\";\r\nimport ItemButton from \"../common/ItemButton\";\r\nimport StoreMenu from \"./storeMenu\";\r\nimport CreatureConstants from \"./creatureConstants\";\r\n\r\nexport default function playState(game) {\r\n\r\n    const GRAVITY = 600*2;\r\n    const BOUNCE = 0;\r\n\r\n\r\n\r\n    // locations\r\n    let GROUND_LEVEL;\r\n    let HEALTH_BAR_X = 10;\r\n    let HEALTH_BAR_Y = 10;\r\n    let COIN_STAT_X = 224;\r\n    let COIN_STAT_Y = 10;\r\n    let STORE_X;\r\n    let STORE_Y;\r\n    let STORE_RADIUS = 180;\r\n\r\n    let BAG_X = game.width - 82;\r\n    let BAG_Y = 10;\r\n\r\n    let ITEM_X = 324;\r\n    let ITEM_Y = 10;\r\n\r\n    // game stats\r\n    let level = 0;\r\n\r\n    // groups\r\n    let cursors;\r\n    let groundPlatform;\r\n\r\n    // characters\r\n    let shrek, swampBubble;\r\n    const SHREK_BASE_SPEED = 150;\r\n    const SHREK_BASE_JUMP_SPEED = 525;\r\n    const SHREK_KNOCKBACK_TIME = 45;\r\n    const SHREK_KNOCKBACK_SPEED = 200;\r\n    let actionSprites = {};\r\n    let actionSpriteProps = {'chop': {\r\n            speed: 36,\r\n            collisionCheckFunction: () => { checkChopCollision(false); }\r\n        }, \r\n        'net': {\r\n            speed: 12,\r\n            collisionCheckFunction: checkNetCollision\r\n        }, \r\n        'bigfist': {\r\n            speed: 18,\r\n            collisionCheckFunction: () => { checkChopCollision(true); }\r\n        }\r\n    };\r\n    let coinIcon, coinText, heartGroup, iconBag;\r\n    let creatureCountText = {};\r\n    let isShrekActing = false;\r\n    let doubleJumped = false;\r\n    let jumpKeyWasPressed = false;\r\n\r\n    let storeUI;\r\n    let choiceLabel;\r\n    let enemies = [];\r\n    let enemiesSold = 0;\r\n    let timeSinceEnemySpawn = {};\r\n    const CAPTURABLE_DURATION = 360;\r\n\r\n    let storePurchaseSound;\r\n    let storePurchaseDenied;\r\n    let netCaptureSound;\r\n    let bubbleGetSound;\r\n    let bubbleBounceSound;\r\n    let bubblePopSound;\r\n    let fartSound;\r\n    let hitSound;\r\n    let hitBigSound;\r\n    let loserFartSound;\r\n\r\n    // flags\r\n    let isShrekFacingLeft = true;\r\n    let bouncing = false;\r\n    let isStoreOpen = false;\r\n\r\n    // player stats\r\n    let gold = 0;\r\n    let inventory = {};\r\n    let inventoryDisplay = {};\r\n    let capturedCreatures = [];\r\n    let creatureCounts = {};\r\n    let health = 10;\r\n\r\n    // keys\r\n    let SPACE_BAR;\r\n    let ACTION_KEY;\r\n    let NET_KEY;\r\n\r\n    let emitterManager;\r\n    let fairieDustEmitter;\r\n\r\n    function preload() {\r\n        \r\n    }\r\n    \r\n    function create() {\r\n        GROUND_LEVEL = game.world.height - 64;\r\n        STORE_X = 640 * 5 + 450;\r\n        STORE_Y = GROUND_LEVEL - 64;\r\n\r\n        game.world.setBounds(0, 0, 6400, 512);\r\n        game.stage.disableVisibilityChange = true;\r\n        cursors = game.input.keyboard.createCursorKeys();\r\n        addBackgroundScenery();\r\n        level = getLevelFromEnemiesSold();\r\n        addEnemies();\r\n        addShrek();\r\n        addActionSprites();\r\n\r\n        //  We're going to be using physics, so enable the Arcade Physics system\r\n        game.physics.startSystem(Phaser.Physics.ARCADE);\r\n        game.camera.follow(shrek, Phaser.Camera.FOLLOW_LOCKON);\r\n\r\n        CreatureConstants.CREATURE_LIST.forEach((creatureProps) => {\r\n            creatureCounts[creatureProps.name] = 0;\r\n        });\r\n        // addForegroundScenery();\r\n        addStatOverlay();\r\n\r\n        SPACE_BAR = game.input.keyboard.addKey(Phaser.Keyboard.SPACEBAR);\r\n        SPACE_BAR.onUp.add(toggleStore, this);\r\n\r\n        ACTION_KEY = game.input.keyboard.addKey(Phaser.Keyboard.A);\r\n        ACTION_KEY.onUp.add(() => {\r\n            if (inventory[\"Big Fist\"] === 1)\r\n                animateAction('bigfist');\r\n            else\r\n                animateAction('chop');\r\n        }, this);\r\n        NET_KEY = game.input.keyboard.addKey(Phaser.Keyboard.S);\r\n        NET_KEY.onUp.add(() => {animateAction('net')}, this);\r\n        createInventory();\r\n        storePurchaseSound = game.add.audio(\"purchase\");\r\n        storePurchaseDenied = game.add.audio(\"denied\");\r\n        netCaptureSound = game.add.audio(\"net\");\r\n        bubbleGetSound = game.add.audio(\"bubbleGet\");\r\n        bubbleBounceSound = game.add.audio(\"bubbleBounce\");\r\n        bubblePopSound = game.add.audio(\"bubblePop\");\r\n        fartSound = game.add.audio(\"fart\");\r\n        hitSound = game.add.audio(\"hit\");\r\n        hitBigSound = game.add.audio(\"hitBig\");\r\n        loserFartSound = game.add.audio(\"loserFart\");\r\n\r\n        initSpawnTimeMap();\r\n    }\r\n    \r\n    \r\n    function update() {\r\n        level = getLevelFromEnemiesSold();\r\n        updateShrek();\r\n        updateEnemies();\r\n        updateShrekAction();\r\n        updateStatOverlay();\r\n    }\r\n\r\n    function updateShrekAction() {\r\n        Object.keys(actionSpriteProps).forEach((actionName) => {\r\n            const sprite = actionSprites[actionName].sprite;\r\n            if (sprite.alpha > 0.5) {\r\n                actionSpriteProps[actionName].collisionCheckFunction();\r\n            }    \r\n        });\r\n\r\n    }\r\n\r\n    function createInventory() {\r\n        const items = Object.keys(ITEM_MAP);\r\n        for (let i = 0; i < items.length; i++){ \r\n            inventory[items[i]] = 0;\r\n        }\r\n    }\r\n\r\n    function addBackgroundScenery() {\r\n\r\n        //  The groundPlatform group contains the ground and the 2 ledges we can jump on\r\n        groundPlatform = game.add.group();\r\n            \r\n        //  We will enable physics for any object that is created in this group\r\n        if (groundPlatform) {\r\n            groundPlatform.enableBody = true;\r\n        }\r\n\r\n\r\n        // Here we create the ground.\r\n        for(var i = 0; i < 65; ++i) {\r\n            var x = i * 256;\r\n            var y = GROUND_LEVEL;\r\n            var ground = groundPlatform.create(x, y, 'ground');\r\n            game.add.sprite(x, y - 32, 'groundTop');\r\n            ground.body.immovable = true;\r\n        }\r\n\r\n        // add the forest background\r\n        for(var i = 0; i < 10; ++i) {\r\n            var x = i * 640;\r\n            var y = game.world.height - 64 - 12- 320;\r\n            game.add.sprite(x, 0, 'sky');\r\n            if(i == 5) {\r\n                game.add.sprite(x, y, 'storeBackground');\r\n            } else {\r\n                game.add.sprite(x, y, 'forestBackground');\r\n            }\r\n        }\r\n        \r\n        let store = game.add.sprite(STORE_X, STORE_Y, \"store\");\r\n        store.scale.setTo(2);\r\n        store.anchor.setTo(0.5, 0.5);\r\n    }\r\n\r\n    function addShrek() {\r\n        shrek = game.add.sprite(0,0,'shrek');\r\n        shrek.anchor.setTo(0.5, 1);\r\n        shrek.x = STORE_X;\r\n        shrek.y = GROUND_LEVEL;\r\n        game.physics.arcade.enable(shrek);\r\n        shrek.body.bounce.y = BOUNCE;\r\n        shrek.body.gravity.y = GRAVITY;\r\n        shrek.body.collideWorldBounds = true;\r\n        shrek.animations.add('shrekWalk', [0, 1, 2], 10, false);\r\n        shrek.hitTimer = 0;\r\n\r\n        addSwampBubble();\r\n    }\r\n\r\n    function addSwampBubble() {\r\n        swampBubble = game.add.image(shrek.x, shrek.y, \"swampBubble\");\r\n        swampBubble.alpha = 0;\r\n        swampBubble.anchor.setTo(0.5, 1);\r\n    }\r\n\r\n    function addActionSprites() {\r\n\r\n        Object.keys(actionSpriteProps).forEach((spriteName) => {\r\n            let spriteProps = actionSpriteProps[spriteName];\r\n            let actionSprite = game.add.sprite(0, 0, spriteName);\r\n            actionSprite.alpha = 0;\r\n            let animationName = spriteName + 'Anim';\r\n            let actionAnim = actionSprite.animations.add(animationName, [0, 1, 2, 2, 2], spriteProps.speed, false);\r\n            actionAnim.onComplete.add(() => {\r\n                actionSprite.alpha = 0; \r\n                actionSprites[spriteName].collidedEnemies = []\r\n            }, this);\r\n            actionSprites[spriteName] = {\r\n                sprite: actionSprite,\r\n                animationName: animationName,\r\n                name: spriteName,\r\n                collidedEnemies: []\r\n            };\r\n        });\r\n    }\r\n\r\n    function addEnemies() {\r\n        for (let i = 0; i < 10; i++) {\r\n            spawnEnemy(CreatureConstants.FAIRY);\r\n            spawnEnemy(CreatureConstants.IMP);\r\n        }\r\n    }\r\n\r\n    function initSpawnTimeMap() {\r\n        CreatureConstants.CREATURE_LIST.forEach((creatureProps) => {\r\n            timeSinceEnemySpawn[creatureProps.name] = 0;\r\n        });\r\n    }\r\n\r\n    function spawnEnemy(enemyTemplate) {\r\n        let enemy = game.add.sprite(0, 0, enemyTemplate.name);\r\n\r\n        enemy.anchor.setTo(0.5, 1);\r\n\r\n        enemy.x = randomSpawnX(enemyTemplate);\r\n        enemy.y = GROUND_LEVEL - enemyTemplate.altitude;\r\n        game.physics.arcade.enable(enemy);\r\n        enemy.body.bounce.y = BOUNCE;\r\n        enemy.body.gravity.y = enemyTemplate.flier ? 0 : GRAVITY;\r\n        enemy.body.collideWorldBounds = true;\r\n        enemy.animations.add(enemyTemplate.name + 'Walk', [0, 1, 2, 0], 12, false);\r\n        enemy.direction = -1; // custom state\r\n        enemy.health = enemyTemplate.baseHealth + level;\r\n        enemy.name = enemyTemplate.name\r\n        enemy.template = enemyTemplate;\r\n        enemy.pauseTimer = 0;\r\n        enemy.capturableTimer = 0;\r\n        enemies.push(enemy);\r\n    }\r\n\r\n    function randomSpawnX(enemyTemplate) {\r\n        let rand = Math.random();\r\n        let denormalized = rand * ((game.world.width /2) - STORE_RADIUS - enemyTemplate.minDistance - 250);\r\n        let spawnX = rand > 0.5 ? denormalized : game.world.width - denormalized;\r\n        return spawnX\r\n    }\r\n\r\n    function addForegroundScenery() {\r\n        for(var i = 0; i < 12; ++i) {\r\n            let rand = Math.random();\r\n            let imageName;\r\n            if(rand < 0.33) {\r\n                imageName = 'tree1';\r\n            } else if(rand < 0.66) {\r\n                imageName = 'tree2';\r\n            } else {\r\n                imageName = 'tree3';\r\n            }\r\n            var n = new Date().getMilliseconds();\r\n            \r\n            let treeX, treeY;\r\n            treeX = (i*6400/40)\r\n\r\n            if(n % 2 == 0) {\r\n                treeX -= 13;\r\n                treeY = GROUND_LEVEL + 35;\r\n            } else {\r\n                treeX += 13;\r\n                treeY = GROUND_LEVEL + 45;\r\n            }\r\n\r\n            let treeImage = game.add.image(treeX, treeY, imageName);\r\n            treeImage.alpha = 0.75;\r\n            treeImage.anchor.setTo(0.5, 1);\r\n        }\r\n        game.add.sprite(150, game.world.height - 215, 'tree1');\r\n        game.add.sprite(400, game.world.height - 115, \"berryBush\");\r\n        game.add.sprite(500, game.world.height - 270, 'tree2');\r\n        game.add.sprite(800, game.world.height - 284, 'tree3');\r\n        game.add.sprite(100, game.world.height - 125, \"berryBush\");\r\n    }\r\n\r\n    function toggleStore() {\r\n        if(isStoreOpen) {\r\n            storeUI.destroy();\r\n            isStoreOpen = false;\r\n            return;\r\n        }\r\n        if (shrek.x <= STORE_X + STORE_RADIUS && shrek.x >= STORE_X - STORE_RADIUS && !isStoreOpen) {\r\n            createStore();\r\n            isStoreOpen = true;\r\n        }\r\n    \r\n    }\r\n\r\n    function createStore() {\r\n        storeUI = game.add.group();\r\n\r\n        // Then add the menu\r\n        let menuContainer = StoreMenu(game);\r\n        storeUI.add(menuContainer);\r\n\r\n        let sellButtonCoords = camera_izeCoordinates(game.width - (MARGIN * 2),\r\n            game.height - (MARGIN * 2));\r\n        let sellButton = GenericButton(game, sellButtonCoords.x, \r\n            sellButtonCoords.y, 'SELL CREATURES', () => {\r\n                capturedCreatures.forEach((creature, i) => {\r\n                    let creatureName = creature.name;\r\n                    gold += creature.price;\r\n                    enemiesSold++;\r\n                    delete capturedCreatures[i];\r\n                    storePurchaseSound.play();\r\n                    creatureCounts[creatureName] = 0;\r\n                    \r\n                });\r\n                capturedCreatures = [];\r\n            });\r\n        sellButton.anchor.setTo(1, 0.5);\r\n        storeUI.add(sellButton);\r\n\r\n        let closeButtonCoords = camera_izeCoordinates(game.width - (MARGIN * 2), MARGIN * 2);\r\n        let closeButton = GenericButton(game, closeButtonCoords.x, \r\n            closeButtonCoords.y-32, 'X', () => {storeUI.destroy(); isStoreOpen = false;});\r\n        closeButton.anchor.setTo(0, 0);\r\n        storeUI.add(closeButton);\r\n        let y = MARGIN;\r\n        const items = Object.keys(ITEM_MAP);\r\n        let coords = camera_izeCoordinates(MARGIN * 2, y);\r\n        for(var i = 0; i < items.length; ++i) {\r\n            let itemName = items[i];\r\n            const itemDesc = ITEM_MAP[items[i]].descr;\r\n            let itemCost = ITEM_MAP[items[i]].cost;\r\n            let itemButton = ItemButton(game, coords.x, coords.y, itemName, () => {\r\n                // ensure player has enough currency to buy this item\r\n                if (validatePurchase(ITEM_MAP[itemName], itemName)) {\r\n                    inventory[itemName]+= 1;\r\n                    gold-= ITEM_MAP[itemName].cost;\r\n                    if (itemName === \"Swamp Bubble\") {\r\n                        bubbleGetSound.play();\r\n                    } else {\r\n                        storePurchaseSound.play();\r\n                    }\r\n                } else {\r\n                    storePurchaseDenied.play();\r\n                }\r\n            });\r\n            storeUI.add(itemButton);\r\n\r\n            let itemDescr = game.add.text(coords.x+25, coords.y+45, itemDesc + \" ($\" + itemCost  + \")\", DescriptionStyle);\r\n            storeUI.add(itemDescr);\r\n            coords.y += (MARGIN*3);\r\n        }\r\n    }\r\n\r\n    function validatePurchase(item, itemName) {\r\n        return item && item.cost <= gold && inventory[itemName] === 0;\r\n    }\r\n\r\n    function addStatOverlay() {\r\n        heartGroup = game.add.group();\r\n\r\n        // add coins\r\n        let coinCoords = camera_izeCoordinates(COIN_STAT_X, COIN_STAT_Y);\r\n        coinIcon = game.add.sprite(coinCoords.x, coinCoords.y,'coin');\r\n        coinIcon.animations.add('rotate', [0,1,2,3,4,5,6,7], 14, true);\r\n        coinIcon.animations.play('rotate');\r\n        coinIcon.anchor.setTo(0,0);\r\n        coinIcon.fixedToCamera = true;\r\n        \r\n        coinText = game.add.text(coinCoords.x + 20, coinCoords.y, ' x ' + gold, {font: 'Comic Sans MS', fill: FONT_COLOR, align: 'left', fontSize: '12px'});\r\n        coinText.fixedToCamera = true;\r\n\r\n        // add hearts\r\n        for(let i = 0; i < health; ++i) {\r\n            let coords = camera_izeCoordinates(HEALTH_BAR_X + 18 * i, HEALTH_BAR_Y);\r\n            let heart = game.add.sprite(coords.x, coords.y, 'heart');\r\n            heart.fixedToCamera = true;\r\n            heart.anchor.set(0,0);\r\n            heartGroup.add(heart);\r\n        }\r\n\r\n        // add captured creatures\r\n        let bagCoords = camera_izeCoordinates(BAG_X, BAG_Y)\r\n        iconBag = game.add.image(bagCoords.x, bagCoords.y, \"iconBag\");\r\n        iconBag.anchor.setTo(0,0);\r\n        iconBag.fixedToCamera = true;\r\n        iconBag.alpha = 0.7\r\n        let iconBagOverlay = game.add.image(bagCoords.x, bagCoords.y, \"iconBagOverlay\");\r\n        iconBagOverlay.anchor.setTo(0,0);\r\n        iconBagOverlay.fixedToCamera = true;\r\n        \r\n        let row = 0;\r\n        CreatureConstants.CREATURE_LIST.forEach((creatureProps) => {\r\n            let creatureName = creatureProps.name;\r\n            let y = BAG_Y + iconBag.height - 16 - (row * 23);\r\n            let x = BAG_X + 6;\r\n            let icon = game.add.image(x,y, creatureName + 'Icon');\r\n            let text = game.add.text(x + 16, y, ' x ' + creatureCounts[creatureName], {font: 'Comic Sans MS', fill: FONT_COLOR, align: 'left', fontSize: '12px'});\r\n            text.anchor.setTo(0, 0.5);\r\n            text.fixedToCamera = true;\r\n            creatureCountText[creatureName] = text;\r\n            icon.fixedToCamera = true;\r\n            icon.anchor.setTo(0, 0.5);\r\n            ++row;\r\n        });\r\n        \r\n    }\r\n\r\n    function updateStatOverlay() {\r\n        coinText.x = COIN_STAT_X + 20;\r\n        coinText.y = COIN_STAT_Y.y; \r\n        coinText.text = ' x ' + gold;\r\n\r\n        for(let i = 0; i < heartGroup.children.length; ++i) {\r\n            let heart = heartGroup.getChildAt(i);\r\n            if(i < health) {\r\n                heart.visible = true\r\n            } else {\r\n                heart.visible = false;\r\n            }\r\n        }\r\n\r\n        // creature count text\r\n        Object.keys(creatureCountText).forEach((creatureName) => {\r\n            creatureCountText[creatureName].text = ' x ' + creatureCounts[creatureName];\r\n        }); \r\n\r\n        // items\r\n        Object.keys(inventory).forEach((itemName) => {\r\n            if(inventory[itemName] < 1 || inventoryDisplay[itemName] || itemName === \"Swamp Bubble\") {\r\n                return;\r\n            }\r\n            let col = Object.keys(inventoryDisplay).length;\r\n            let itemIcon = game.add.image(ITEM_X + 18*col,ITEM_Y,ITEM_MAP[itemName].icon);\r\n            itemIcon.fixedToCamera = true;\r\n            itemIcon.anchor.setTo(0,0);\r\n            inventoryDisplay[itemName] = itemIcon;\r\n        });\r\n    }\r\n    \r\n    function updateShrek() {\r\n        if(inventory[\"Swamp Bubble\"] > 0) {\r\n            swampBubble.alpha = 0.6;\r\n        } else {\r\n            swampBubble.alpha = 0;\r\n        }\r\n\r\n        if(inventory[\"Fairie Dust\"] && !fairieDustEmitter) {\r\n            fairieDustEmitter = game.add.emitter(shrek.x, shrek.y-50, 200, 200);\r\n            fairieDustEmitter.makeParticles(\"fairieDust\");\r\n            fairieDustEmitter.flow(1000, 300, 1, -1);\r\n            fairieDustEmitter.alpha = .35;\r\n        }\r\n\r\n        if(isStoreOpen) {\r\n            game.physics.arcade.collide(shrek, groundPlatform);\r\n            shrek.body.velocity.x = 0;\r\n            return;\r\n        }\r\n        reanchorActionSprites();\r\n        if (shrek.hitTimer > 0) {\r\n            game.physics.arcade.collide(shrek, groundPlatform);\r\n            updateKnockedBackSprite(shrek);\r\n        } else {\r\n            updateShrekNormal();\r\n        }\r\n        swampBubble.x = shrek.x;\r\n        swampBubble.y = shrek.y;\r\n\r\n        if (fairieDustEmitter) {\r\n            fairieDustEmitter.x = shrek.x;\r\n            fairieDustEmitter.y = shrek.y-75;\r\n        }\r\n    }\r\n\r\n    function getShrekRunSpeed() {\r\n        return inventory[\"Speed\"] ? SHREK_BASE_SPEED * 2 : SHREK_BASE_SPEED;\r\n    }\r\n    \r\n\r\n\r\n    function updateShrekNormal() {\r\n\r\n        var isOnGround = game.physics.arcade.collide(shrek, groundPlatform);\r\n        //  Reset the players velocity (movement)\r\n        shrek.body.velocity.x = 0;\r\n        shrek.body.bounce.y = bouncing ? 0.7 : BOUNCE;\r\n\r\n        if (cursors.left.isDown)\r\n        {\r\n            if(!isShrekFacingLeft) {\r\n                flipShrek(); // flips shrek about the y axis\r\n                isShrekFacingLeft = true;\r\n            }\r\n            //  Move to the left\r\n            shrek.body.velocity.x = -getShrekRunSpeed();\r\n            shrek.animations.play('shrekWalk');\r\n        }\r\n        else if (cursors.right.isDown)\r\n        {\r\n            if(isShrekFacingLeft) {\r\n                flipShrek(); // flips shrek about the y axis\r\n                isShrekFacingLeft = false;\r\n            }\r\n            //  Move to the right\r\n            shrek.body.velocity.x = getShrekRunSpeed();\r\n            shrek.animations.play('shrekWalk');\r\n        } else {\r\n            shrek.frame = 0;\r\n        }\r\n\r\n        //  Allow the shrek to jump if they are touching the ground.\r\n        if (cursors.up.isDown) {\r\n            if(shrek.body.touching.down && isOnGround) {\r\n                shrek.body.velocity.y = -SHREK_BASE_JUMP_SPEED;\r\n            } else if(!doubleJumped && !jumpKeyWasPressed && inventory[\"Fart in a Jar\"] > 0) {\r\n                shrek.body.velocity.y = -SHREK_BASE_JUMP_SPEED;\r\n                doubleJumped = true;\r\n                fartSound.play();\r\n            }\r\n            jumpKeyWasPressed = true;\r\n        } else {\r\n            jumpKeyWasPressed = false;\r\n        }\r\n        // bounce logic\r\n        if (isOnGround) {\r\n            if (bouncing) {\r\n                bubbleBounceSound.play();\r\n            }\r\n            bouncing = false;\r\n            doubleJumped = false;\r\n        } else if(inventory[\"Fairie Dust\"]) {\r\n            shrek.body.gravity.y = GRAVITY / 2;\r\n        }\r\n        const currentDown = cursors.down.isDown;\r\n        if (currentDown && !lastDown && !isOnGround && bouncing === false && inventory[\"Swamp Bubble\"] === 1) {\r\n            shrek.body.velocity.y = 900*1.25;\r\n            bouncing = true;\r\n        }\r\n\r\n        enemies.forEach((enemy) => {\r\n            game.physics.arcade.overlap(shrek, enemy, onShrekHit, null, this);\r\n        });\r\n        lastDown = currentDown;\r\n    }\r\n\r\n    let lastDown = false;\r\n\r\n    function updateKnockedBackSprite(sprite) {\r\n        sprite.hitTimer--;\r\n        sprite.tint = sprite.hitTimer % 4 >= 2 ? '0xff6666' : '0xffffff';\r\n    }\r\n    \r\n    function updateCapturableEnemy(enemy) {\r\n        enemy.capturableTimer--;\r\n        enemy.alpha = enemy.capturableTimer % 4 >= 2 ? 0.1 : 1;\r\n    }\r\n\r\n    function updateEnemies() {\r\n        Object.keys(timeSinceEnemySpawn).forEach((enemyName) => {\r\n            let timeSinceSpawn = timeSinceEnemySpawn[enemyName]++;\r\n            let enemyProps = CreatureConstants.CREATURE_NAME_MAP[enemyName];\r\n            if(timeSinceSpawn > enemyProps.baseSpawnRate - (360 * level)) {\r\n                spawnEnemy(enemyProps);\r\n                timeSinceEnemySpawn[enemyName] = 0;\r\n            }\r\n        });\r\n        enemies.forEach((enemy) => {\r\n            var isOnGround = game.physics.arcade.collide(enemy, groundPlatform);\r\n\r\n            if(enemy.hitTimer > 0) {\r\n                updateKnockedBackSprite(enemy);\r\n                return;\r\n            }\r\n\r\n            if(enemy.health < 0 ) {\r\n                destroyEnemy(enemy);\r\n                return;\r\n            }\r\n\r\n            if(enemy.health === 0) {\r\n                updateCapturableEnemy(enemy);\r\n                // enemies are capturable only for a limited duration\r\n                if(enemy.capturableTimer === 0) {\r\n                    enemy.health = 1;\r\n                    enemy.alpha = 1;\r\n                }\r\n            }\r\n\r\n            if(enemy.pauseTimer > 0) {\r\n                enemy.pauseTimer--;\r\n                return;\r\n            }\r\n            let speed = getEnemySpeedFromLevel(enemy.template);\r\n            if(enemy.health === 0) {\r\n                speed /= 2;\r\n            }\r\n\r\n            if(enemy.x > STORE_X - STORE_RADIUS && enemy.x < STORE_X) {\r\n                enemy.body.velocity.x = -speed;\r\n                if(enemy.direction === 1) {\r\n                    flipSpriteDirection(enemy);\r\n                }\r\n                enemy.direction = -1;\r\n                return;\r\n            } else if(enemy.x < STORE_X + STORE_RADIUS && enemy.x > STORE_X) {\r\n                if(enemy.direction === -1) {\r\n                    flipSpriteDirection(enemy);\r\n                }\r\n                enemy.body.velocity.x = speed;\r\n                enemy.direction = 1;\r\n                return;\r\n            }\r\n\r\n            enemy.body.velocity.x = speed * enemy.direction;\r\n            enemy.animations.play(enemy.name + 'Walk');\r\n            if(Math.random() < enemy.template.turnProb) {\r\n                enemy.direction *= -1;\r\n                flipSpriteDirection(enemy);\r\n            }\r\n                //  Allow the enemy to jump if they are touching the ground.\r\n            if (enemy.body.touching.down && isOnGround) {\r\n                if(Math.random() * 1000 > 992) {\r\n                    enemy.body.velocity.y = -SHREK_BASE_JUMP_SPEED;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    function reanchorActionSprites() {\r\n        Object.keys(actionSprites).forEach(\r\n            (actionSpriteName) => anchorActionSprite(actionSprites[actionSpriteName].sprite));\r\n    }\r\n\r\n    function onShrekHit(shrek, enemy) {\r\n        enemy.body.velocity.x = 0;\r\n        enemy.body.velocity.y = 0;\r\n        enemy.pauseTimer = SHREK_KNOCKBACK_TIME / 2;\r\n        knockbackSprite(shrek, enemy);\r\n        if(inventory[\"Swamp Bubble\"] > 0) {\r\n            inventory[\"Swamp Bubble\"] = inventory[\"Swamp Bubble\"] - 1;\r\n            bubblePopSound.play();\r\n            return;\r\n        }\r\n        health--;\r\n        if(health < 1) {\r\n            loserFartSound.play();\r\n            game.state.start(\"GameOver\");\r\n        }\r\n    }\r\n\r\n    function knockbackSprite(sprite, adversary) {\r\n        sprite.hitTimer = SHREK_KNOCKBACK_TIME;\r\n        const template = sprite.template || {};\r\n        let kbX = template.knockbackVelocityX;\r\n        let kbY = template.knockbackVelocityY;\r\n        if (adversary === shrek && inventory[\"Big Fist\"] === 1) {\r\n            kbX *= 1;\r\n            kbY *= 5;\r\n        }\r\n        let velocityX = kbX !== undefined ? kbX : SHREK_KNOCKBACK_SPEED;\r\n        let velocityY = kbY !== undefined ? kbY : -SHREK_KNOCKBACK_SPEED;\r\n        sprite.body.velocity.x = (adversary.body.x > sprite.body.x ? -velocityX : velocityX);\r\n        sprite.body.velocity.y = velocityY;\r\n    }\r\n\r\n    function animateAction(actionSpriteName) {\r\n        if(isShrekActing) {\r\n            return;\r\n        }\r\n        isShrekActing = true;\r\n        let actionSprite = actionSprites[actionSpriteName].sprite;\r\n        let animationName = actionSprites[actionSpriteName].animationName;\r\n        actionSprite.alpha = 1;\r\n        actionSprite.anchor.setTo(1, 0.5);\r\n        anchorActionSprite(actionSprite);\r\n        let anim = actionSprite.animations.play(animationName);\r\n        anim.onComplete.add(() => {isShrekActing = false;});\r\n    }\r\n\r\n    // flips sprite about the y-axis\r\n    function flipSpriteDirection(sprite) {\r\n        sprite.scale.x *= -1\r\n    }\r\n    \r\n    function flipShrek() {\r\n        flipSpriteDirection(shrek);\r\n        Object.keys(actionSprites).forEach(\r\n            (actionSpriteName) => flipSpriteDirection(actionSprites[actionSpriteName].sprite));\r\n    }\r\n\r\n    function anchorActionSprite(actionSprite) {\r\n        let armAnchor = getShrekActionAnchor();\r\n        actionSprite.x = armAnchor.anchorX;\r\n        actionSprite.y = armAnchor.anchorY;\r\n    }\r\n\r\n    function getShrekActionAnchor() {\r\n        let anchorX = isShrekFacingLeft? shrek.x - 17 : shrek.x + 17;\r\n        let anchorY = shrek.y - 52;\r\n        return {anchorX, anchorY};\r\n    }\r\n\r\n    function camera_izeCoordinates(x,y) {\r\n        return {\r\n            x: game.camera.x + x,\r\n            y: game.camera.y +y\r\n        };\r\n    }\r\n\r\n    function getEnemySpeedFromLevel(enemyTemplate) {\r\n        return enemyTemplate.baseSpeed + 20 * level;\r\n    }\r\n\r\n    function checkNetCollision() {\r\n        const net = actionSprites['net'];\r\n        const netSprite = net.sprite;\r\n        enemies.forEach((enemy) => {\r\n            if (net.collidedEnemies.length >= 1 || Object.keys(capturedCreatures).includes(enemy.name) || enemy.health > 0) {\r\n                return;\r\n            }\r\n            const foundCollision = Phaser.Rectangle.intersects(enemy.getBounds(), netSprite.getBounds());\r\n            if (foundCollision) {\r\n                net.collidedEnemies.push(enemy);\r\n                creatureCounts[enemy.name] += 1;\r\n                capturedCreatures.push(enemy.template);\r\n                destroyEnemy(enemy)\r\n                netCaptureSound.play();\r\n            }\r\n        });\r\n        \r\n    }\r\n\r\n    const checkChopCollision = (isBigFist) => {\r\n        const chop = isBigFist ? actionSprites['bigfist'] : actionSprites['chop'];\r\n        const chopSprite = chop.sprite;\r\n\r\n        enemies.forEach((enemy) => {\r\n            if (chop.collidedEnemies.includes(enemy)) {\r\n                return;\r\n            }\r\n            const foundCollision = Phaser.Rectangle.intersects(enemy.getBounds(), chopSprite.getBounds());\r\n            if (foundCollision) {\r\n                isBigFist ? hitBigSound.play() : hitSound.play();\r\n                chop.collidedEnemies.push(enemy);\r\n                const hadZeroHealth = enemy.health === 0;\r\n                const damageDealt = isBigFist ? 4 : 1;\r\n                enemy.health -= damageDealt;\r\n                knockbackSprite(enemy, shrek);\r\n\r\n                // at least one hit needs to make enemy capturable\r\n                if (!hadZeroHealth && enemy.health < 0) { \r\n                    enemy.health = 0; \r\n                }\r\n                if (enemy.health === 0) {\r\n                    enemy.capturableTimer = CAPTURABLE_DURATION * (isBigFist ? 3 : 1);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    function destroyEnemy(enemy) {\r\n        enemies.splice(enemies.indexOf(enemy), 1);\r\n        enemy.destroy();\r\n    }\r\n\r\n    function getLevelFromEnemiesSold() {\r\n        if(enemiesSold < 10) {\r\n            return 0;\r\n        } else if(enemiesSold < 20) {\r\n            return 1;\r\n        } else if(enemiesSold < 30) {\r\n            return 2;\r\n        } else if(enemiesSold < 50) {\r\n            return 3;\r\n        } else {\r\n            return 4;\r\n        }\r\n    }\r\n\r\n    return {preload, create, update};\r\n}","import {MARGIN} from \"../common/constants\";\r\nexport default function StoreMenu(game) {\r\n\r\n    var menuContainer;\r\n    var width = game.width - MARGIN * 2 // example;\r\n    var height = game.height - MARGIN * 2 // example;\r\n\r\n    var bmd = game.add.bitmapData(width, height);\r\n     \r\n    bmd.ctx.beginPath();\r\n    bmd.ctx.rect(0, 0, width, height);\r\n    bmd.ctx.fillStyle = '#000000';\r\n    bmd.ctx.fill();\r\n    menuContainer = game.add.sprite(game.camera.x + (game.width/2), game.camera.y + (game.height/2), bmd);\r\n    menuContainer.anchor.setTo(0.5, 0.5);\r\n    menuContainer.bringToTop();\r\n    menuContainer.alpha = 0.75;  \r\n    return menuContainer;\r\n}"],"sourceRoot":""}