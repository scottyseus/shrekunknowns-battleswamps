{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///(webpack)/buildin/global.js","webpack:///./src/common/GenericButton.js","webpack:///./src/common/ItemButton.js","webpack:///./src/common/StateTransitionButton.js","webpack:///./src/common/TitleText.js","webpack:///./src/common/constants.js","webpack:///./src/common/gitButton.js","webpack:///./src/index.js","webpack:///./src/states/about-state.js","webpack:///./src/states/asset-load-state.js","webpack:///./src/states/creatureConstants.js","webpack:///./src/states/entry-state.js","webpack:///./src/states/font-load-state.js","webpack:///./src/states/game-over-state.js","webpack:///./src/states/instructions-state.js","webpack:///./src/states/instructions-state2.js","webpack:///./src/states/instructions-state3.js","webpack:///./src/states/instructions-state4.js","webpack:///./src/states/play-state.js","webpack:///./src/states/storeMenu.js","webpack:///./src/states/victory-state.js"],"names":["GenericButton","game","x","y","btnName","callback","genericButton","add","text","ButtonStyle","anchor","setTo","inputEnabled","events","onInputUp","onInputOver","alpha","onInputOut","ItemButton","itemButton","StateTransitionButton","state","length","i","start","titleStyle","BaseStyle","fontSize","align","TitleText","contents","set","FONT_COLOR","font","fill","DescriptionStyle","MARGIN","ITEM_MAP","icon","descr","cost","GitButton","link","window","open","Phaser","Game","AUTO","undefined","entryState","aboutState","instructionsState","instructionsState2","instructionsState3","instructionsState4","gameOverState","assetLoadState","fontLoadState","victoryState","textCrawlStyle","wordWrap","wordWrapWidth","width","textCrawl","create","aboutText","preload","load","image","spritesheet","audio","CREATURE_NAMES","DONKEY","FAIRY","GNOME","UNICORN","PHOENIX","IMP","GOBLIN","BASE_ENEMY","turnProb","knockbackVelocityX","knockbackVelocityY","flier","altitude","minDistance","name","price","baseSpeed","baseHealth","baseSpawnRate","CREATURE_LIST","CREATURE_NAME_MAP","forEach","creature","CreatureConstants","TITLE_Y","init","update","fontsLoaded","global","WebFontConfig","active","time","Timer","SECOND","google","families","script","instructionsText","nextButton","generatedText","donkeySprite","frame","keyDescriptionMap","Object","keys","key","donkeyY","sprite","animations","playState","BAG_X","BAG_Y","bagSprite","bagOverlaySprite","row","creatureProps","creatureName","height","fixedToCamera","COIN_Y","COIN_X","coinSprite","play","HEART_Y","storeSprite","col","ICON_X","ICON_Y","itemName","itemProps","GRAVITY","BOUNCE","GOLD_TO_WIN","hasBoughtBubble","GROUND_LEVEL","HEALTH_BAR_X","HEALTH_BAR_Y","COIN_STAT_X","COIN_STAT_Y","STORE_X","STORE_Y","STORE_RADIUS","ITEM_X","ITEM_Y","level","cursors","groundPlatform","shrek","swampBubble","SHREK_BASE_SPEED","SHREK_BASE_JUMP_SPEED","SHREK_KNOCKBACK_TIME","SHREK_KNOCKBACK_SPEED","actionSprites","actionArmFromRight","actionSpriteProps","speed","collisionCheckFunction","checkChopCollision","checkNetCollision","coinIcon","coinText","heartGroup","iconBag","creatureCountText","isShrekActing","doubleJumped","jumpKeyWasPressed","storeUI","choiceLabel","enemies","enemiesSold","timeSinceEnemySpawn","CAPTURABLE_DURATION","storePurchaseSound","storePurchaseDenied","netCaptureSound","bubbleGetSound","bubbleBounceSound","bubblePopSound","fartSound","hitSound","hitBigSound","loserFartSound","isShrekFacingLeft","bouncing","isStoreOpen","gold","inventory","inventoryDisplay","capturedCreatures","creatureCounts","health","SPACE_BAR","ACTION_KEY","NET_KEY","emitterManager","fairieDustEmitter","world","setBounds","stage","disableVisibilityChange","input","keyboard","createCursorKeys","addBackgroundScenery","getLevelFromEnemiesSold","addEnemies","addShrek","addActionSprites","physics","startSystem","Physics","ARCADE","camera","follow","Camera","FOLLOW_LOCKON","addStatOverlay","addKey","Keyboard","SPACEBAR","onUp","toggleStore","A","animateAction","S","createInventory","initSpawnTimeMap","updateShrek","updateEnemies","updateShrekAction","updateStatOverlay","actionName","items","group","enableBody","ground","body","immovable","store","scale","arcade","enable","bounce","gravity","collideWorldBounds","hitTimer","addSwampBubble","spriteName","spriteProps","actionSprite","animationName","actionAnim","onComplete","collidedEnemies","spawnEnemy","enemyTemplate","enemy","randomSpawnX","direction","template","pauseTimer","capturableTimer","push","rand","Math","random","denormalized","spawnX","addForegroundScenery","imageName","n","Date","getMilliseconds","treeX","treeY","treeImage","destroy","createStore","menuContainer","StoreMenu","sellButtonCoords","camera_izeCoordinates","sellButton","hasBoughtAllItems","closeButtonCoords","closeButton","coords","itemDesc","itemCost","validatePurchase","itemDescr","item","coinCoords","heart","bagCoords","iconBagOverlay","children","getChildAt","visible","itemIcon","emitter","makeParticles","flow","collide","velocity","reanchorActionSprites","updateKnockedBackSprite","updateShrekNormal","getShrekRunSpeed","isOnGround","left","isDown","flipShrek","right","up","touching","down","currentDown","lastDown","overlap","onShrekHit","tint","updateCapturableEnemy","enemyName","timeSinceSpawn","enemyProps","destroyEnemy","getEnemySpeedFromLevel","flipSpriteDirection","actionSpriteName","anchorActionSprite","knockbackSprite","adversary","kbX","kbY","velocityX","velocityY","frameWidth","currentFrame","xPercent","anim","armAnchor","getShrekActionAnchor","anchorX","anchorY","net","netSprite","includes","foundCollision","Rectangle","intersects","getBounds","isBigFist","chop","chopSprite","hadZeroHealth","damageDealt","splice","indexOf","bmd","bitmapData","ctx","beginPath","rect","fillStyle","bringToTop"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;;;;;;;;;;CCjBA;;AACA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAOC,CAAP,EAAUC,CAAV,EAAaC,OAAb,EAAsBC,QAAtB,EAAmC;AACrD,MAAMC,aAAa,GAAGL,IAAI,CAACM,GAAL,CAASC,IAAT,CAAcN,CAAd,EAAiBC,CAAjB,EAAoBC,OAApB,EAA6BK,6DAA7B,CAAtB;AACAH,eAAa,CAACI,MAAd,CAAqBC,KAArB,CAA2B,CAA3B,EAA6B,CAA7B;AACAL,eAAa,CAACM,YAAd,GAA6B,IAA7B;AACAN,eAAa,CAACO,MAAd,CAAqBC,SAArB,CAA+BP,GAA/B,CAAmCF,QAAnC;AACAC,eAAa,CAACO,MAAd,CAAqBE,WAArB,CAAiCR,GAAjC,CAAsC,YAAO;AACzCD,iBAAa,CAACU,KAAd,GAAsB,EAAtB;AACH,GAFD,EAEI,KAFJ;AAGAV,eAAa,CAACO,MAAd,CAAqBI,UAArB,CAAgCV,GAAhC,CAAoC,YAAM;AACtCD,iBAAa,CAACU,KAAd,GAAsB,CAAtB;AACH,GAFD,EAEG,KAFH;AAIA,SAAOV,aAAP;AACH,CAbD;;AAeeN,4EAAf,E;;;;;;;;;;;;;;;;CChBA;;AACA,IAAMkB,UAAU,GAAG,SAAbA,UAAa,CAACjB,IAAD,EAAOC,CAAP,EAAUC,CAAV,EAAaC,OAAb,EAAsBC,QAAtB,EAAmC;AAClD,MAAMc,UAAU,GAAGlB,IAAI,CAACM,GAAL,CAASC,IAAT,CAAcN,CAAd,EAAiBC,CAAjB,EAAoBC,OAApB,EAA6BK,6DAA7B,CAAnB;AACA;;;;;AAIAU,YAAU,CAACP,YAAX,GAA0B,IAA1B;AACAO,YAAU,CAACN,MAAX,CAAkBC,SAAlB,CAA4BP,GAA5B,CAAgCF,QAAhC;AACAc,YAAU,CAACN,MAAX,CAAkBE,WAAlB,CAA8BR,GAA9B,CAAmC,YAAO;AACtCY,cAAU,CAACH,KAAX,GAAmB,EAAnB;AACH,GAFD,EAEI,KAFJ;AAGAG,YAAU,CAACN,MAAX,CAAkBI,UAAlB,CAA6BV,GAA7B,CAAiC,YAAM;AACnCY,cAAU,CAACH,KAAX,GAAmB,CAAnB;AACH,GAFD,EAEG,KAFH;AAIA,SAAOG,UAAP;AACH,CAhBD;;AAkBeD,yEAAf,E;;;;;;;;;;;;ACrBA;AAAA;AAAA;AAAA;CAGA;;AACA,IAAME,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACnB,IAAD,EAAOC,CAAP,EAAUC,CAAV,EAAaC,OAAb,EAAmC;AAAA,oCAAViB,KAAU;AAAVA,SAAU;AAAA;;AAC7D,SAAOrB,8DAAa,CAACC,IAAD,EAAOC,CAAP,EAAUC,CAAV,EAAaC,OAAb,EAAsB,YAAM;AAC5C,QAAIiB,KAAK,CAACC,MAAN,GAAe,CAAnB,EAAsB;AAClB,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,KAAK,CAACC,MAAzB,EAAiCC,CAAC,EAAlC,EAAsC;AAClCtB,YAAI,CAACoB,KAAL,CAAWG,KAAX,CAAiBH,KAAK,CAACE,CAAD,CAAtB;AACH;AACJ,KAJD,MAIO;AACHtB,UAAI,CAACoB,KAAL,CAAWG,KAAX,CAAiBH,KAAK,CAAC,CAAD,CAAtB;AACH;AACJ,GARmB,CAApB;AASH,CAVD;;AAYeD,oFAAf,E;;;;;;;;;;;;;;;;;;;AChBA;;AAEA,IAAIK,UAAU,qBAAOC,oDAAP;AAAkBC,UAAQ,EAAE;AAA5B,EAAd;;AACAF,UAAU,CAACG,KAAX,GAAmB,QAAnB;AAEe,SAASC,SAAT,CAAmB5B,IAAnB,EAAyBC,CAAzB,EAA4BC,CAA5B,EAA+B2B,QAA/B,EAAyC;AACpD,MAAItB,IAAI,GAAGP,IAAI,CAACM,GAAL,CAASC,IAAT,CAAcN,CAAd,EAAiBC,CAAjB,EAAoB2B,QAApB,EAA8BL,UAA9B,CAAX;AACAjB,MAAI,CAACE,MAAL,CAAYqB,GAAZ,CAAgB,GAAhB;AACH,C;;;;;;;;;;;;;;;;;;;;;;;ACRM,IAAMC,UAAU,GAAG,SAAnB;AACA,IAAMN,SAAS,GAAG;AAACO,MAAI,EAAE,mBAAP;AAA4BC,MAAI,EAAEF,UAAlC;AAA8CJ,OAAK,EAAE;AAArD,CAAlB;AACA,IAAMnB,WAAW,qBAAQiB,SAAR;AAAoBC,UAAQ,EAAE;AAA9B,EAAjB;AACA,IAAMQ,gBAAgB,qBAAQT,SAAR;AAAmBC,UAAQ,EAAE;AAA7B,EAAtB;AACA,IAAMS,MAAM,GAAG,EAAf;AACA,IAAMC,QAAQ,GAAG;AACpB,WAAS;AAACC,QAAI,EAAE,WAAP;AAAqBC,SAAK,EAAE,wBAA5B;AAAsDC,QAAI,EAAE;AAA5D,GADW;AAEpB,kBAAgB;AAACF,QAAI,EAAE,iBAAP;AAA2BC,SAAK,EAAE,0CAAlC;AAA8EC,QAAI,EAAE;AAApF,GAFI;AAGpB,mBAAiB;AAACF,QAAI,EAAE,aAAP;AAAuBC,SAAK,EAAE,0BAA9B;AAA0DC,QAAI,EAAE;AAAhE,GAHG;AAIpB,eAAa;AAACF,QAAI,EAAE,aAAP;AAAuBC,SAAK,EAAE,8BAA9B;AAA8DC,QAAI,EAAE;AAApE,GAJO;AAKpB,iBAAe;AAACF,QAAI,EAAE,gBAAP;AAA0BC,SAAK,EAAE,kBAAjC;AAAqDC,QAAI,EAAE;AAA3D;AALK,CAAjB,C;;;;;;;;;;;;ACLP;AAAA;AAAA;AAAA;AACA;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACxC,IAAD,EAAOC,CAAP,EAAUC,CAAV,EAAaC,OAAb,EAAsBsC,IAAtB,EAA+B;AAC7C1C,gEAAa,CAACC,IAAD,EAAOC,CAAP,EAAUC,CAAV,EAAaC,OAAb,EAAsB,YAAM;AACrCuC,UAAM,CAACC,IAAP,CAAYF,IAAZ;AACH,GAFY,CAAb;AAGH,CAJD;;AAMeD,wEAAf,E;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIxC,IAAI,GAAG,IAAI4C,MAAM,CAACC,IAAX,CAAgB,GAAhB,EAAqB,GAArB,EAA0BD,MAAM,CAACE,IAAjC,EAAuCF,MAAM,CAACE,IAA9C,EAAoD,MAApD,EAA4DC,SAA5D,EAAuEA,SAAvE,EAAkF,KAAlF,CAAX;AACA/C,IAAI,CAACoB,KAAL,CAAWd,GAAX,CAAe,OAAf,EAAwB0C,mEAAU,CAAChD,IAAD,CAAlC;AACAA,IAAI,CAACoB,KAAL,CAAWd,GAAX,CAAe,OAAf,EAAwB2C,mEAAU,CAACjD,IAAD,CAAlC;AACAA,IAAI,CAACoB,KAAL,CAAWd,GAAX,CAAe,cAAf,EAA+B4C,0EAAiB,CAAClD,IAAD,CAAhD;AACAA,IAAI,CAACoB,KAAL,CAAWd,GAAX,CAAe,eAAf,EAAgC6C,2EAAkB,CAACnD,IAAD,CAAlD;AACAA,IAAI,CAACoB,KAAL,CAAWd,GAAX,CAAe,eAAf,EAAgC8C,2EAAkB,CAACpD,IAAD,CAAlD;AACAA,IAAI,CAACoB,KAAL,CAAWd,GAAX,CAAe,eAAf,EAAgC+C,2EAAkB,CAACrD,IAAD,CAAlD;AACAA,IAAI,CAACoB,KAAL,CAAWd,GAAX,CAAe,UAAf,EAA2BgD,uEAAa,CAACtD,IAAD,CAAxC;AACAA,IAAI,CAACoB,KAAL,CAAWd,GAAX,CAAe,WAAf,EAA4BiD,wEAAc,CAACvD,IAAD,CAA1C;AACAA,IAAI,CAACoB,KAAL,CAAWd,GAAX,CAAe,UAAf,EAA2BkD,uEAAa,CAACxD,IAAD,CAAxC;AACAA,IAAI,CAACoB,KAAL,CAAWd,GAAX,CAAe,SAAf,EAA0BmD,qEAAY,CAACzD,IAAD,CAAtC;AACAA,IAAI,CAACoB,KAAL,CAAWG,KAAX,CAAiB,UAAjB,E;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACe,SAAS0B,UAAT,CAAoBjD,IAApB,EAA0B;AAErC,MAAI0D,cAAc,GAAG;AAAE1B,QAAI,EAAE,wBAAR;AAAkCC,QAAI,EAAEF,4DAAxC;AAAoDJ,SAAK,EAAE,MAA3D;AAAmEgC,YAAQ,EAAE,IAA7E;AAAmFC,iBAAa,EAAE5D,IAAI,CAAC6D,KAAL,GAAW;AAA7G,GAArB;AACA,MAAIC,SAAS,GAAG,cACE,qHADF,GAEE,yBAFF,GAGE,gCAHlB;AAKA,SAAO;AACHC,UAAM,EAAE,kBAAW;AACf5C,mFAAqB,CAACnB,IAAD,EAAO,EAAP,EAAW,EAAX,EAAe,QAAf,EAAyB,OAAzB,CAArB;AACAwC,uEAAS,CAACxC,IAAD,EAAO,EAAP,EAAW,GAAX,EAAgB,0BAAhB,EAA4C,2CAA5C,CAAT;AACAwC,uEAAS,CAACxC,IAAD,EAAO,EAAP,EAAW,GAAX,EAAgB,wBAAhB,EAA0C,6BAA1C,CAAT;AACAwC,uEAAS,CAACxC,IAAD,EAAO,EAAP,EAAW,GAAX,EAAgB,qBAAhB,EAAuC,+BAAvC,CAAT;AACAwC,uEAAS,CAACxC,IAAD,EAAO,EAAP,EAAW,GAAX,EAAgB,qBAAhB,EAAuC,6CAAvC,CAAT;AAEA,UAAMgE,SAAS,GAAGhE,IAAI,CAACM,GAAL,CAASC,IAAT,CAAc,EAAd,EAAkB,EAAlB,EAAsBuD,SAAtB,EAAiCJ,cAAjC,CAAlB;AACH;AATE,GAAP;AAWH;AAAA,C;;;;;;;;;;;;ACtBD;AAAA;AAAe,SAASH,cAAT,CAAwBvD,IAAxB,EAA8B;AAEzC,WAASiE,OAAT,GAAmB;AACfjE,QAAI,CAACkE,IAAL,CAAUC,KAAV,CAAgB,QAAhB,EAA0B,uBAA1B;AACAnE,QAAI,CAACkE,IAAL,CAAUC,KAAV,CAAgB,WAAhB,EAA6B,0BAA7B;AACAnE,QAAI,CAACkE,IAAL,CAAUE,WAAV,CAAsB,OAAtB,EAA+B,sBAA/B,EAAuD,MAAI,CAA3D,EAA8D,EAA9D;AACApE,QAAI,CAACkE,IAAL,CAAUE,WAAV,CAAsB,QAAtB,EAAgC,uBAAhC,EAAyD,MAAI,CAA7D,EAAgE,EAAhE;AACApE,QAAI,CAACkE,IAAL,CAAUE,WAAV,CAAsB,SAAtB,EAAiC,wBAAjC,EAA2D,EAA3D,EAA+D,EAA/D;AACApE,QAAI,CAACkE,IAAL,CAAUE,WAAV,CAAsB,OAAtB,EAA+B,sBAA/B,EAAuD,EAAvD,EAA2D,EAA3D;AACApE,QAAI,CAACkE,IAAL,CAAUE,WAAV,CAAsB,OAAtB,EAA+B,sBAA/B,EAAuD,KAAG,CAA1D,EAA6D,EAA7D;AACApE,QAAI,CAACkE,IAAL,CAAUE,WAAV,CAAsB,SAAtB,EAAiC,wBAAjC,EAA2D,EAA3D,EAA+D,EAA/D;AACApE,QAAI,CAACkE,IAAL,CAAUE,WAAV,CAAsB,KAAtB,EAA6B,oBAA7B,EAAmD,EAAnD,EAAuD,EAAvD;AACApE,QAAI,CAACkE,IAAL,CAAUE,WAAV,CAAsB,eAAtB,EAAuC,8BAAvC,EAAuE,EAAvE,EAA2E,EAA3E;AACApE,QAAI,CAACkE,IAAL,CAAUC,KAAV,CAAgB,OAAhB,EAAyB,sBAAzB;AACAnE,QAAI,CAACkE,IAAL,CAAUC,KAAV,CAAgB,OAAhB,EAAyB,sBAAzB;AACAnE,QAAI,CAACkE,IAAL,CAAUC,KAAV,CAAgB,OAAhB,EAAyB,sBAAzB;AACAnE,QAAI,CAACkE,IAAL,CAAUC,KAAV,CAAgB,WAAhB,EAA6B,0BAA7B;AACAnE,QAAI,CAACkE,IAAL,CAAUC,KAAV,CAAgB,OAAhB,EAAyB,sBAAzB;AACAnE,QAAI,CAACkE,IAAL,CAAUC,KAAV,CAAgB,kBAAhB,EAAoC,iCAApC;AACAnE,QAAI,CAACkE,IAAL,CAAUC,KAAV,CAAgB,iBAAhB,EAAmC,gCAAnC;AACAnE,QAAI,CAACkE,IAAL,CAAUE,WAAV,CAAsB,MAAtB,EAA8B,qBAA9B,EAAqD,EAArD,EAAyD,EAAzD;AACApE,QAAI,CAACkE,IAAL,CAAUE,WAAV,CAAsB,SAAtB,EAAiC,wBAAjC,EAA2D,EAA3D,EAA+D,GAA/D;AACApE,QAAI,CAACkE,IAAL,CAAUE,WAAV,CAAsB,KAAtB,EAA6B,oBAA7B,EAAmD,GAAnD,EAAwD,GAAxD;AACApE,QAAI,CAACkE,IAAL,CAAUC,KAAV,CAAgB,KAAhB,EAAuB,oBAAvB;AACAnE,QAAI,CAACkE,IAAL,CAAUC,KAAV,CAAgB,OAAhB,EAAyB,sBAAzB;AACAnE,QAAI,CAACkE,IAAL,CAAUE,WAAV,CAAsB,MAAtB,EAA8B,qBAA9B,EAAqD,MAAI,CAAzD,EAA4D,EAA5D;AACApE,QAAI,CAACkE,IAAL,CAAUC,KAAV,CAAgB,aAAhB,EAA+B,4BAA/B;AACAnE,QAAI,CAACkE,IAAL,CAAUC,KAAV,CAAgB,YAAhB,EAA8B,2BAA9B,EAzBe,CA4Bf;;AACAnE,QAAI,CAACkE,IAAL,CAAUC,KAAV,CAAgB,YAAhB,EAA8B,2BAA9B;AACAnE,QAAI,CAACkE,IAAL,CAAUC,KAAV,CAAgB,WAAhB,EAA6B,0BAA7B;AACAnE,QAAI,CAACkE,IAAL,CAAUC,KAAV,CAAgB,WAAhB,EAA6B,0BAA7B;AACAnE,QAAI,CAACkE,IAAL,CAAUC,KAAV,CAAgB,aAAhB,EAA+B,4BAA/B;AACAnE,QAAI,CAACkE,IAAL,CAAUC,KAAV,CAAgB,aAAhB,EAA+B,4BAA/B;AACAnE,QAAI,CAACkE,IAAL,CAAUC,KAAV,CAAgB,SAAhB,EAA2B,wBAA3B;AACAnE,QAAI,CAACkE,IAAL,CAAUC,KAAV,CAAgB,mBAAhB,EAAqC,kCAArC;AACAnE,QAAI,CAACkE,IAAL,CAAUC,KAAV,CAAgB,SAAhB,EAA2B,wBAA3B;AACAnE,QAAI,CAACkE,IAAL,CAAUC,KAAV,CAAgB,gBAAhB,EAAkC,+BAAlC;AAEAnE,QAAI,CAACkE,IAAL,CAAUC,KAAV,CAAgB,iBAAhB,EAAmC,gCAAnC;AACAnE,QAAI,CAACkE,IAAL,CAAUC,KAAV,CAAgB,gBAAhB,EAAkC,+BAAlC;AACAnE,QAAI,CAACkE,IAAL,CAAUC,KAAV,CAAgB,aAAhB,EAA+B,4BAA/B;AACAnE,QAAI,CAACkE,IAAL,CAAUC,KAAV,CAAgB,WAAhB,EAA6B,0BAA7B;AACAnE,QAAI,CAACkE,IAAL,CAAUC,KAAV,CAAgB,aAAhB,EAA+B,4BAA/B,EA3Ce,CA6Cf;;AACAnE,QAAI,CAACkE,IAAL,CAAUG,KAAV,CAAgB,KAAhB,EAAuB,0BAAvB;AACArE,QAAI,CAACkE,IAAL,CAAUG,KAAV,CAAgB,UAAhB,EAA4B,8BAA5B;AACArE,QAAI,CAACkE,IAAL,CAAUG,KAAV,CAAgB,QAAhB,EAA0B,6BAA1B;AACArE,QAAI,CAACkE,IAAL,CAAUG,KAAV,CAAgB,WAAhB,EAA6B,gCAA7B;AACArE,QAAI,CAACkE,IAAL,CAAUG,KAAV,CAAgB,cAAhB,EAAgC,mCAAhC;AACArE,QAAI,CAACkE,IAAL,CAAUG,KAAV,CAAgB,WAAhB,EAA6B,gCAA7B;AACArE,QAAI,CAACkE,IAAL,CAAUG,KAAV,CAAgB,MAAhB,EAAwB,2BAAxB;AACArE,QAAI,CAACkE,IAAL,CAAUG,KAAV,CAAgB,KAAhB,EAAuB,0BAAvB;AACArE,QAAI,CAACkE,IAAL,CAAUG,KAAV,CAAgB,QAAhB,EAA0B,2BAA1B;AACArE,QAAI,CAACkE,IAAL,CAAUG,KAAV,CAAgB,WAAhB,EAA6B,gCAA7B;AACH;;AAED,WAASN,MAAT,GAAkB;AACd/D,QAAI,CAACoB,KAAL,CAAWG,KAAX,CAAiB,OAAjB;AACH;;AAED,SAAO;AAAC0C,WAAO,EAAPA,OAAD;AAAUF,UAAM,EAANA;AAAV,GAAP;AAEH,C;;;;;;;;;;;;;;;;;AClED,IAAMO,cAAc,GAAG;AACnBC,QAAM,EAAE,QADW;AAEnBC,OAAK,EAAE,OAFY;AAGnBC,OAAK,EAAE,OAHY;AAInBC,SAAO,EAAE,SAJU;AAKnBC,SAAO,EAAE,SALU;AAMnBC,KAAG,EAAE,KANc;AAOnBC,QAAM,EAAE;AAPW,CAAvB;AAUA,IAAIC,UAAU,GAAG;AACbC,UAAQ,EAAE,IADG;AAEbC,oBAAkB,EAAE,GAFP;AAGbC,oBAAkB,EAAE,CAAC,GAHR;AAIbC,OAAK,EAAE,KAJM;AAKbC,UAAQ,EAAE,CALG;AAKA;AACbC,aAAW,EAAE,GANA,CAMK;;AANL,CAAjB;;AASA,IAAIb,MAAM,qBACHO,UADG;AAENO,MAAI,EAAEf,cAAc,CAACC,MAFf;AAGNe,OAAK,EAAE,EAHD;AAINC,WAAS,EAAE,GAJL;AAKNC,YAAU,EAAE,CALN;AAMNC,eAAa,EAAE,IANT;AAONL,aAAW,EAAE;AAPP,EAAV;;AAUA,IAAIZ,KAAK,qBACFM,UADE;AAELO,MAAI,EAAEf,cAAc,CAACE,KAFhB;AAGLc,OAAK,EAAE,EAHF;AAILC,WAAS,EAAE,EAJN;AAKLC,YAAU,EAAE,CALP;AAMLC,eAAa,EAAE,IANV;AAOLP,OAAK,EAAE,IAPF;AAQLC,UAAQ,EAAE,GARL;AASLF,oBAAkB,EAAE;AATf,EAAT;;AAYA,IAAIP,OAAO,qBACJI,UADI;AAEPO,MAAI,EAAEf,cAAc,CAACI,OAFd;AAGPY,OAAK,EAAE,EAHA;AAIPC,WAAS,EAAE,GAJJ;AAKPC,YAAU,EAAE,CALL;AAMPC,eAAa,EAAE,IANR;AAOPL,aAAW,EAAE;AAPN,EAAX;;AAUA,IAAIX,KAAK,qBACFK,UADE;AAELO,MAAI,EAAEf,cAAc,CAACG,KAFhB;AAGLa,OAAK,EAAE,EAHF;AAILC,WAAS,EAAE,GAJN;AAKLC,YAAU,EAAE,CALP;AAMLC,eAAa,EAAE,IANV;AAOLL,aAAW,EAAE;AAPR,EAAT;;AAUA,IAAIT,OAAO,qBACJG,UADI;AAEPO,MAAI,EAAEf,cAAc,CAACK,OAFd;AAGPW,OAAK,EAAE,EAHA;AAIPC,WAAS,EAAE,GAJJ;AAKPC,YAAU,EAAE,CALL;AAMPC,eAAa,EAAE,IANR;AAOPN,UAAQ,EAAE,GAPH;AAQPD,OAAK,EAAE;AARA,EAAX;;AAWA,IAAIN,GAAG,qBACAE,UADA;AAEHO,MAAI,EAAEf,cAAc,CAACM,GAFlB;AAGHU,OAAK,EAAE,EAHJ;AAIHC,WAAS,EAAE,GAJR;AAKHC,YAAU,EAAE,CALT;AAMHC,eAAa,EAAE;AANZ,EAAP;;AASA,IAAIZ,MAAM,qBACHC,UADG;AAENO,MAAI,EAAEf,cAAc,CAACO,MAFf;AAGNS,OAAK,EAAE,EAHD;AAINC,WAAS,EAAE,EAJL;AAKNC,YAAU,EAAE,CALN;AAMNC,eAAa,EAAE,IANT;AAONL,aAAW,EAAE;AAPP,EAAV;;AAUA,IAAMM,aAAa,GAAG,CAACnB,MAAD,EAASC,KAAT,EAAgBC,KAAhB,EAAuBC,OAAvB,EAAgCC,OAAhC,EAAyCC,GAAzC,EAA8CC,MAA9C,CAAtB;AACA,IAAMc,iBAAiB,GAAG,EAA1B;AAEAD,aAAa,CAACE,OAAd,CAAsB,UAACC,QAAD,EAAc;AAChCF,mBAAiB,CAACE,QAAQ,CAACR,IAAV,CAAjB,GAAmCQ,QAAnC;AACH,CAFD;AAIA,IAAMC,iBAAiB,GAAG;AACtBxB,gBAAc,EAAdA,cADsB;AAEtBC,QAAM,EAANA,MAFsB;AAGtBG,SAAO,EAAPA,OAHsB;AAItBF,OAAK,EAALA,KAJsB;AAKtBC,OAAK,EAALA,KALsB;AAMtBE,SAAO,EAAPA,OANsB;AAOtBC,KAAG,EAAHA,GAPsB;AAQtBC,QAAM,EAANA,MARsB;AAStBa,eAAa,EAAbA,aATsB;AAUtBC,mBAAiB,EAAjBA;AAVsB,CAA1B;AAaeG,gFAAf,E;;;;;;;;;;;;AC/GA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA,IAAMC,OAAO,GAAG,EAAhB;AAEe,SAAS/C,UAAT,CAAoBhD,IAApB,EAA0B;AACrC,SAAO;AACHiE,WAAO,EAAE,mBAAW,CACnB,CAFE;AAIH+B,QAAI,EAAE,gBAAW,CAChB,CALE;AAOHjC,UAAM,EAAE,kBAAW;AACfnC,uEAAS,CAAC5B,IAAD,EAAOA,IAAI,CAAC6D,KAAL,GAAa,CAApB,EAAuBkC,OAAvB,EAAgC,+BAAhC,CAAT;AAEA5E,mFAAqB,CAACnB,IAAD,EAAO,EAAP,EAAU+F,OAAO,GAAG,EAApB,EAAwB,MAAxB,EAAgC,cAAhC,CAArB;AACA5E,mFAAqB,CAACnB,IAAD,EAAO,EAAP,EAAW+F,OAAO,GAAG,KAAK,CAA1B,EAA4B,OAA5B,EAAqC,OAArC,CAArB;AACH,KAZE;AAcHE,UAAM,EAAE,kBAAW,CAElB;AAhBE,GAAP;AAkBH;AAAA,C;;;;;;;;;;;;ACzBD;AAAA;AAAe,SAASzC,aAAT,CAAuBxD,IAAvB,EAA6B;AAExC0C,QAAM,CAACwD,WAAP,GAAqB,YAAW;AAC5BlG,QAAI,CAACoB,KAAL,CAAWG,KAAX,CAAiB,WAAjB;AACH,GAFD;;AAIA,SAAO;AACH0C,WAAO,EAAE,mBAAW;AAChB;AACAkC,YAAM,CAACC,aAAP,GAAuB;AAEnB;AACA;AACA;AACAC,cAAM,EAAE,kBAAW;AACfrG,cAAI,CAACsG,IAAL,CAAU1F,MAAV,CAAiBN,GAAjB,CAAqBsC,MAAM,CAAC2D,KAAP,CAAaC,MAAlC,EAA0CN,WAA1C,EAAuD,IAAvD;AACH,SAPkB;AASnB;AACAO,cAAM,EAAE;AACJC,kBAAQ,EAAE,CAAC,mBAAD;AADN;AAVW,OAAvB,CAFgB,CAiBhB;;AACA1G,UAAI,CAACkE,IAAL,CAAUyC,MAAV,CAAiB,SAAjB,EAA4B,0DAA5B;AACH;AApBE,GAAP;AAuBH,C;;;;;;;;;;;;;AC7BD;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACe,SAASrD,aAAT,CAAuBtD,IAAvB,EAA6B;AAExC,WAAS+D,MAAT,GAAkB;AACdnC,qEAAS,CAAC5B,IAAD,EAAOA,IAAI,CAAC6D,KAAL,GAAW,CAAlB,EAAqB7D,IAAI,CAAC6D,KAAL,GAAW,CAAhC,EAAmC,WAAnC,CAAT;AACA1C,iFAAqB,CAACnB,IAAD,EAAO,EAAP,EAAW,EAAX,EAAe,QAAf,EAAyB,OAAzB,CAArB;AACH;;AAED,SAAO;AAAC+D,UAAM,EAANA;AAAD,GAAP;AACH,C;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAA;AAAA;AACA;AACe,SAASb,iBAAT,CAA2BlD,IAA3B,EAAiC;AAC5C,MAAI4G,gBAAgB,GAAG,0DACA,wFADA,GAEA,iHAFvB;AAGA,SAAO;AACH7C,UAAM,EAAE,kBAAY;AAChB5C,mFAAqB,CAACnB,IAAD,EAAO,EAAP,EAAW,EAAX,EAAe,QAAf,EAAyB,OAAzB,CAArB;AACA,UAAI6G,UAAU,GAAG1F,6EAAqB,CAACnB,IAAD,EAAOA,IAAI,CAAC6D,KAAL,GAAa,EAApB,EAAwB,EAAxB,EAA4B,QAA5B,EAAsC,eAAtC,CAAtC;AACAgD,gBAAU,CAACpG,MAAX,CAAkBC,KAAlB,CAAwB,CAAxB,EAA2B,CAA3B;AACA,UAAIoG,aAAa,GAAG9G,IAAI,CAACM,GAAL,CAASC,IAAT,CAAc,EAAd,EAAkB,EAAlB,EAAsBqG,gBAAtB,EAAwC1E,kEAAxC,CAApB;AACH;AANE,GAAP;AAQH,C;;;;;;;;;;;;ACdD;AAAA;AAAA;AAAA;AAAA;AACA;AACe,SAASiB,kBAAT,CAA4BnD,IAA5B,EAAkC;AAE7C,MAAI+G,YAAJ;AACA,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAIC,iBAAiB,GAAG;AACpB,kBAAc,YADM;AAEpB,SAAK,mBAFe;AAGpB,SAAK,oBAHe;AAIpB,gBAAY;AAJQ,GAAxB;AAQA,MAAIL,gBAAgB,GAAG,8HAAvB;AACA,SAAO;AACH7C,UAAM,EAAE,kBAAY;AAChB5C,mFAAqB,CAACnB,IAAD,EAAO,EAAP,EAAW,EAAX,EAAe,QAAf,EAAyB,cAAzB,CAArB;AACA,UAAI6G,UAAU,GAAG1F,6EAAqB,CAACnB,IAAD,EAAOA,IAAI,CAAC6D,KAAL,GAAa,EAApB,EAAwB,EAAxB,EAA4B,QAA5B,EAAsC,eAAtC,CAAtC;AACAgD,gBAAU,CAACpG,MAAX,CAAkBC,KAAlB,CAAwB,CAAxB,EAA2B,CAA3B;AAEAV,UAAI,CAACM,GAAL,CAASC,IAAT,CAAc,EAAd,EAAkB,EAAlB,EAAsB,WAAtB,EAAmC2B,kEAAnC;AACAgF,YAAM,CAACC,IAAP,CAAYF,iBAAZ,EAA+BrB,OAA/B,CAAuC,UAACwB,GAAD,EAAM9F,CAAN,EAAY;AAC/CtB,YAAI,CAACM,GAAL,CAASC,IAAT,CAAc,EAAd,EAAkB,MAAOe,CAAC,GAAG,EAA7B,EAAkC8F,GAAlC,EAAuClF,kEAAvC;AACAlC,YAAI,CAACM,GAAL,CAASC,IAAT,CAAc,GAAd,EAAmB,MAAOe,CAAC,GAAG,EAA9B,EAAmC2F,iBAAiB,CAACG,GAAD,CAApD,EAA2DlF,kEAA3D;AACH,OAHD;AAIAlC,UAAI,CAACM,GAAL,CAASC,IAAT,CAAc,EAAd,EAAkB,GAAlB,EAAuBqG,gBAAvB,EAAyC1E,kEAAzC;AAEAlC,UAAI,CAACM,GAAL,CAASC,IAAT,CAAc,EAAd,EAAkB,GAAlB,EAAuB,SAAvB,EAAkC2B,kEAAlC;AACA,UAAImF,OAAO,GAAG,GAAd;AACAN,kBAAY,GAAG/G,IAAI,CAACM,GAAL,CAASgH,MAAT,CAAgB,EAAhB,EAAoBD,OAApB,EAA6B,QAA7B,CAAf;AACAN,kBAAY,CAACQ,UAAb,CAAwBjH,GAAxB,CAA4B,YAA5B,EAA0C,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAA1C,EAAwD,EAAxD,EAA4D,IAA5D;AACAN,UAAI,CAACM,GAAL,CAASC,IAAT,CAAc,GAAd,EAAmB8G,OAAnB,EAA4B,mDACA,8CADA,GAEA,iDAFA,GAGA,gCAHA,GAIA,uBAJ5B,EAIqDnF,kEAJrD;AAKH,KAtBE;AAuBH+D,UAAM,EAAE,kBAAW;AACf,QAAEe,KAAF;AACAD,kBAAY,CAAChG,KAAb,GAAqBiG,KAAK,GAAG,CAAR,IAAa,CAAb,GAAiB,GAAjB,GAAuB,CAA5C;;AACA,UAAGA,KAAK,GAAG,UAAX,EAAuB;AACnBA,aAAK,GAAG,CAAR;AACH;AACJ;AA7BE,GAAP;AA+BH,C;;;;;;;;;;;;AC9CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACe,SAAS5D,kBAAT,CAA4BpD,IAA5B,EAAkC;AAC7C,SAAO;AACH+D,UAAM,EAAE,kBAAY;AAChB5C,mFAAqB,CAACnB,IAAD,EAAO,EAAP,EAAW,EAAX,EAAe,QAAf,EAAyB,eAAzB,CAArB;AACAA,UAAI,CAACoB,KAAL,CAAWd,GAAX,CAAe,MAAf,EAAuBkH,2DAAS,CAACxH,IAAD,CAAhC;AACA,UAAI6G,UAAU,GAAG1F,6EAAqB,CAACnB,IAAD,EAAOA,IAAI,CAAC6D,KAAL,GAAa,EAApB,EAAwB,EAAxB,EAA4B,QAA5B,EAAsC,eAAtC,CAAtC;AACAgD,gBAAU,CAACpG,MAAX,CAAkBC,KAAlB,CAAwB,CAAxB,EAA2B,CAA3B;AAGA,UAAI+G,KAAK,GAAG,EAAZ;AACA,UAAIC,KAAK,GAAG,EAAZ;AAEA,UAAIC,SAAS,GAAG3H,IAAI,CAACM,GAAL,CAASgH,MAAT,CAAgBG,KAAhB,EAAsBC,KAAtB,EAA4B,SAA5B,CAAhB;AACAC,eAAS,CAAC5G,KAAV,GAAkB,GAAlB;AACA,UAAI6G,gBAAgB,GAAG5H,IAAI,CAACM,GAAL,CAASgH,MAAT,CAAgBG,KAAhB,EAAsBC,KAAtB,EAA4B,gBAA5B,CAAvB;AAEA,UAAIG,GAAG,GAAG,CAAV;AACA/B,gEAAiB,CAACJ,aAAlB,CAAgCE,OAAhC,CAAwC,UAACkC,aAAD,EAAmB;AACvD,YAAIC,YAAY,GAAGD,aAAa,CAACzC,IAAjC;AACA,YAAInF,CAAC,GAAGwH,KAAK,GAAGC,SAAS,CAACK,MAAlB,GAA2B,EAA3B,GAAiCH,GAAG,GAAG,EAA/C;AACA,YAAI5H,CAAC,GAAGwH,KAAK,GAAG,CAAhB;AACA,YAAIpF,IAAI,GAAGrC,IAAI,CAACM,GAAL,CAAS6D,KAAT,CAAelE,CAAf,EAAiBC,CAAjB,EAAoB6H,YAAY,GAAG,MAAnC,CAAX;AACA,YAAIxH,IAAI,GAAGP,IAAI,CAACM,GAAL,CAASC,IAAT,CAAcN,CAAC,GAAG,EAAlB,EAAsBC,CAAtB,EAAyB,QAAQ,CAAjC,EAAoC;AAAC8B,cAAI,EAAE,mBAAP;AAA4BC,cAAI,EAAEF,4DAAlC;AAA8CJ,eAAK,EAAE,MAArD;AAA6DD,kBAAQ,EAAE;AAAvE,SAApC,CAAX;AACAnB,YAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqB,GAArB;AACAH,YAAI,CAAC0H,aAAL,GAAqB,IAArB;AACA5F,YAAI,CAAC5B,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqB,GAArB;AACA,UAAEmH,GAAF;AACH,OAVD;AAWA7H,UAAI,CAACM,GAAL,CAASC,IAAT,CAAc,GAAd,EAAmB,GAAnB,EAAwB,2DAAxB,EAAqF2B,kEAArF;AAEA,UAAIgG,MAAM,GAAG,GAAb;AACA,UAAIC,MAAM,GAAG,EAAb;AACA,UAAIC,UAAU,GAAGpI,IAAI,CAACM,GAAL,CAASgH,MAAT,CAAgBa,MAAhB,EAAwBD,MAAxB,EAAgC,MAAhC,CAAjB;AACAE,gBAAU,CAACb,UAAX,CAAsBjH,GAAtB,CAA0B,QAA1B,EAAoC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,CAApC,EAAuD,EAAvD,EAA2D,IAA3D;AACA8H,gBAAU,CAACb,UAAX,CAAsBc,IAAtB,CAA2B,QAA3B;AACArI,UAAI,CAACM,GAAL,CAASC,IAAT,CAAc4H,MAAM,GAAG,EAAvB,EAA2BD,MAA3B,EAAmC,QAAQ,CAA3C,EAA8C;AAAClG,YAAI,EAAE,mBAAP;AAA4BC,YAAI,EAAEF,4DAAlC;AAA8CJ,aAAK,EAAE,MAArD;AAA6DD,gBAAQ,EAAE;AAAvE,OAA9C;AACA1B,UAAI,CAACM,GAAL,CAASC,IAAT,CAAc,GAAd,EAAmB2H,MAAnB,EAA2B,iDAA3B,EAA8EhG,kEAA9E;AAEA,UAAIoG,OAAO,GAAG,GAAd;AACAtI,UAAI,CAACM,GAAL,CAASgH,MAAT,CAAgB,EAAhB,EAAoBgB,OAApB,EAA6B,OAA7B;AACAtI,UAAI,CAACM,GAAL,CAASC,IAAT,CAAc,GAAd,EAAmB+H,OAAnB,EAA4B,+CAA5B,EAA6EpG,kEAA7E;AACH;AAxCE,GAAP;AA0CH,C;;;;;;;;;;;;AC/CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACe,SAASkB,kBAAT,CAA4BpD,IAA5B,EAAkC;AAE7C,SAAO;AACH+D,UAAM,EAAE,kBAAY;AAChB5C,mFAAqB,CAACnB,IAAD,EAAO,EAAP,EAAW,EAAX,EAAe,QAAf,EAAyB,eAAzB,CAArB;AACAA,UAAI,CAACoB,KAAL,CAAWd,GAAX,CAAe,MAAf,EAAuBkH,2DAAS,CAACxH,IAAD,CAAhC;AACA,UAAI6G,UAAU,GAAG1F,6EAAqB,CAACnB,IAAD,EAAOA,IAAI,CAAC6D,KAAL,GAAa,EAApB,EAAwB,EAAxB,EAA4B,QAA5B,EAAsC,MAAtC,CAAtC;AACAgD,gBAAU,CAACpG,MAAX,CAAkBC,KAAlB,CAAwB,CAAxB,EAA2B,CAA3B;AAGA,UAAI+G,KAAK,GAAG,EAAZ;AACA,UAAIC,KAAK,GAAG,EAAZ;AAEA,UAAIa,WAAW,GAAGvI,IAAI,CAACM,GAAL,CAASgH,MAAT,CAAgBG,KAAhB,EAAsBC,KAAtB,EAA4B,OAA5B,CAAlB;AACA1H,UAAI,CAACM,GAAL,CAASC,IAAT,CAAc,GAAd,EAAmBmH,KAAK,GAAGa,WAAW,CAACP,MAAZ,GAAqB,CAAhD,EAAmD,kDAC/C,gDADJ,EACsD9F,kEADtD;AAGA,UAAIsG,GAAG,GAAG,CAAV;AACA,UAAIC,MAAM,GAAG,EAAb;AACA,UAAIC,MAAM,GAAGhB,KAAK,GAAGa,WAAW,CAACP,MAApB,GAA8B,EAA3C;AACAd,YAAM,CAACC,IAAP,CAAY/E,0DAAZ,EAAsBwD,OAAtB,CAA8B,UAAC+C,QAAD,EAAc;AACxC,YAAIC,SAAS,GAAGxG,0DAAQ,CAACuG,QAAD,CAAxB;AACA,YAAIzI,CAAC,GAAGwI,MAAR;AACA,YAAIzI,CAAC,GAAGwI,MAAM,GAAG,KAAKD,GAAtB;AACA,YAAInG,IAAI,GAAGrC,IAAI,CAACM,GAAL,CAAS6D,KAAT,CAAelE,CAAf,EAAiBC,CAAjB,EAAoB0I,SAAS,CAACvG,IAA9B,CAAX;AACA,UAAEmG,GAAF;AACH,OAND;AAOAxI,UAAI,CAACM,GAAL,CAASC,IAAT,CAAc,GAAd,EAAmBmI,MAAnB,EAA2B,2HAA3B,EAAwJxG,kEAAxJ;AACH;AA1BE,GAAP;AA4BH,C;;;;;;;;;;;;AClCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEe,SAASsF,SAAT,CAAmBxH,IAAnB,EAAyB;AAEpC,MAAM6I,OAAO,GAAG,MAAI,CAApB;AACA,MAAMC,MAAM,GAAG,CAAf;AAEA,MAAMC,WAAW,GAAG,GAApB;AACA,MAAIC,eAAe,GAAG,KAAtB,CANoC,CAQpC;;AACA,MAAIC,YAAJ;AACA,MAAIC,YAAY,GAAG,EAAnB;AACA,MAAIC,YAAY,GAAG,EAAnB;AACA,MAAIC,WAAW,GAAG,GAAlB;AACA,MAAIC,WAAW,GAAG,EAAlB;AACA,MAAIC,OAAJ;AACA,MAAIC,OAAJ;AACA,MAAIC,YAAY,GAAG,GAAnB;AAEA,MAAI/B,KAAK,GAAGzH,IAAI,CAAC6D,KAAL,GAAa,EAAzB;AACA,MAAI6D,KAAK,GAAG,EAAZ;AAEA,MAAI+B,MAAM,GAAG,GAAb;AACA,MAAIC,MAAM,GAAG,EAAb,CAtBoC,CAwBpC;;AACA,MAAIC,KAAK,GAAG,CAAZ,CAzBoC,CA2BpC;;AACA,MAAIC,OAAJ;AACA,MAAIC,cAAJ,CA7BoC,CA+BpC;;AACA,MAAIC,KAAJ,EAAWC,WAAX;AACA,MAAMC,gBAAgB,GAAG,GAAzB;AACA,MAAMC,qBAAqB,GAAG,GAA9B;AACA,MAAMC,oBAAoB,GAAG,EAA7B;AACA,MAAMC,qBAAqB,GAAG,GAA9B;AACA,MAAIC,aAAa,GAAG,EAApB;AACA,MAAIC,kBAAkB,GAAG,EAAzB,CAtCoC,CAsCP;;AAC7B,MAAIC,iBAAiB,GAAG;AAAC,YAAQ;AACzBC,WAAK,EAAE,EADkB;AAEzBC,4BAAsB,EAAE,kCAAM;AAAEC,0BAAkB,CAAC,KAAD,CAAlB;AAA4B;AAFnC,KAAT;AAIpB,WAAO;AACHF,WAAK,EAAE,EADJ;AAEHC,4BAAsB,EAAEE;AAFrB,KAJa;AAQpB,eAAW;AACPH,WAAK,EAAE,EADA;AAEPC,4BAAsB,EAAE,kCAAM;AAAEC,0BAAkB,CAAC,IAAD,CAAlB;AAA2B;AAFpD;AARS,GAAxB;AAaA,MAAIE,QAAJ,EAAcC,QAAd,EAAwBC,UAAxB,EAAoCC,OAApC;AACA,MAAIC,iBAAiB,GAAG,EAAxB;AACA,MAAIC,aAAa,GAAG,KAApB;AACA,MAAIC,YAAY,GAAG,KAAnB;AACA,MAAIC,iBAAiB,GAAG,KAAxB;AAEA,MAAIC,OAAJ;AACA,MAAIC,WAAJ;AACA,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,WAAW,GAAG,CAAlB;AACA,MAAIC,mBAAmB,GAAG,EAA1B;AACA,MAAMC,mBAAmB,GAAG,GAA5B;AAEA,MAAIC,kBAAJ;AACA,MAAIC,mBAAJ;AACA,MAAIC,eAAJ;AACA,MAAIC,cAAJ;AACA,MAAIC,iBAAJ;AACA,MAAIC,cAAJ;AACA,MAAIC,SAAJ;AACA,MAAIC,QAAJ;AACA,MAAIC,WAAJ;AACA,MAAIC,cAAJ,CA1EoC,CA4EpC;;AACA,MAAIC,iBAAiB,GAAG,IAAxB;AACA,MAAIC,QAAQ,GAAG,KAAf;AACA,MAAIC,WAAW,GAAG,KAAlB,CA/EoC,CAiFpC;;AACA,MAAIC,IAAI,GAAG,CAAX;AACA,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,gBAAgB,GAAG,EAAvB;AACA,MAAIC,iBAAiB,GAAG,EAAxB;AACA,MAAIC,cAAc,GAAG,EAArB;AACA,MAAIC,MAAM,GAAG,EAAb,CAvFoC,CAyFpC;;AACA,MAAIC,SAAJ;AACA,MAAIC,UAAJ;AACA,MAAIC,OAAJ;AAEA,MAAIC,cAAJ;AACA,MAAIC,iBAAJ;;AAEA,WAAS/I,OAAT,GAAmB,CAElB;;AAED,WAASF,MAAT,GAAkB;AACdkF,gBAAY,GAAGjJ,IAAI,CAACiN,KAAL,CAAWjF,MAAX,GAAoB,EAAnC;AACAsB,WAAO,GAAG,MAAM,CAAN,GAAU,GAApB;AACAC,WAAO,GAAGN,YAAY,GAAG,EAAzB;AAEAjJ,QAAI,CAACiN,KAAL,CAAWC,SAAX,CAAqB,CAArB,EAAwB,CAAxB,EAA2B,IAA3B,EAAiC,GAAjC;AACAlN,QAAI,CAACmN,KAAL,CAAWC,uBAAX,GAAqC,IAArC;AACAxD,WAAO,GAAG5J,IAAI,CAACqN,KAAL,CAAWC,QAAX,CAAoBC,gBAApB,EAAV;AACAC,wBAAoB;AACpB7D,SAAK,GAAG8D,uBAAuB,EAA/B;AACAC,cAAU;AACVC,YAAQ;AACRC,oBAAgB,GAZF,CAcd;;AACA5N,QAAI,CAAC6N,OAAL,CAAaC,WAAb,CAAyBlL,MAAM,CAACmL,OAAP,CAAeC,MAAxC;AACAhO,QAAI,CAACiO,MAAL,CAAYC,MAAZ,CAAmBpE,KAAnB,EAA0BlH,MAAM,CAACuL,MAAP,CAAcC,aAAxC;AAEAtI,8DAAiB,CAACJ,aAAlB,CAAgCE,OAAhC,CAAwC,UAACkC,aAAD,EAAmB;AACvD4E,oBAAc,CAAC5E,aAAa,CAACzC,IAAf,CAAd,GAAqC,CAArC;AACH,KAFD,EAlBc,CAqBd;;AACAgJ,kBAAc;AAEdzB,aAAS,GAAG5M,IAAI,CAACqN,KAAL,CAAWC,QAAX,CAAoBgB,MAApB,CAA2B1L,MAAM,CAAC2L,QAAP,CAAgBC,QAA3C,CAAZ;AACA5B,aAAS,CAAC6B,IAAV,CAAenO,GAAf,CAAmBoO,WAAnB,EAAgC,IAAhC;AAEA7B,cAAU,GAAG7M,IAAI,CAACqN,KAAL,CAAWC,QAAX,CAAoBgB,MAApB,CAA2B1L,MAAM,CAAC2L,QAAP,CAAgBI,CAA3C,CAAb;AACA9B,cAAU,CAAC4B,IAAX,CAAgBnO,GAAhB,CAAoB,YAAM;AACtB,UAAIiM,SAAS,CAAC,WAAD,CAAT,KAA2B,CAA/B,EACIqC,aAAa,CAAC,SAAD,CAAb,CADJ,KAGIA,aAAa,CAAC,MAAD,CAAb;AACP,KALD,EAKG,IALH;AAMA9B,WAAO,GAAG9M,IAAI,CAACqN,KAAL,CAAWC,QAAX,CAAoBgB,MAApB,CAA2B1L,MAAM,CAAC2L,QAAP,CAAgBM,CAA3C,CAAV;AACA/B,WAAO,CAAC2B,IAAR,CAAanO,GAAb,CAAiB,YAAM;AAACsO,mBAAa,CAAC,KAAD,CAAb;AAAqB,KAA7C,EAA+C,IAA/C;AACAE,mBAAe;AACfrD,sBAAkB,GAAGzL,IAAI,CAACM,GAAL,CAAS+D,KAAT,CAAe,UAAf,CAArB;AACAqH,uBAAmB,GAAG1L,IAAI,CAACM,GAAL,CAAS+D,KAAT,CAAe,QAAf,CAAtB;AACAsH,mBAAe,GAAG3L,IAAI,CAACM,GAAL,CAAS+D,KAAT,CAAe,KAAf,CAAlB;AACAuH,kBAAc,GAAG5L,IAAI,CAACM,GAAL,CAAS+D,KAAT,CAAe,WAAf,CAAjB;AACAwH,qBAAiB,GAAG7L,IAAI,CAACM,GAAL,CAAS+D,KAAT,CAAe,cAAf,CAApB;AACAyH,kBAAc,GAAG9L,IAAI,CAACM,GAAL,CAAS+D,KAAT,CAAe,WAAf,CAAjB;AACA0H,aAAS,GAAG/L,IAAI,CAACM,GAAL,CAAS+D,KAAT,CAAe,MAAf,CAAZ;AACA2H,YAAQ,GAAGhM,IAAI,CAACM,GAAL,CAAS+D,KAAT,CAAe,KAAf,CAAX;AACA4H,eAAW,GAAGjM,IAAI,CAACM,GAAL,CAAS+D,KAAT,CAAe,QAAf,CAAd;AACA6H,kBAAc,GAAGlM,IAAI,CAACM,GAAL,CAAS+D,KAAT,CAAe,WAAf,CAAjB;AAEA0K,oBAAgB;AACnB;;AAGD,WAAS9I,MAAT,GAAkB;AACd0D,SAAK,GAAG8D,uBAAuB,EAA/B;AACAuB,eAAW;AACXC,iBAAa;AACbC,qBAAiB;AACjBC,qBAAiB;AACpB;;AAED,WAASD,iBAAT,GAA6B;AACzBhI,UAAM,CAACC,IAAP,CAAYmD,iBAAZ,EAA+B1E,OAA/B,CAAuC,UAACwJ,UAAD,EAAgB;AACnD,UAAM9H,MAAM,GAAG8C,aAAa,CAACgF,UAAD,CAAb,CAA0B9H,MAAzC;;AACA,UAAIA,MAAM,CAACvG,KAAP,GAAe,GAAnB,EAAwB;AACpBuJ,yBAAiB,CAAC8E,UAAD,CAAjB,CAA8B5E,sBAA9B;AACH;AACJ,KALD;AAOH;;AAED,WAASsE,eAAT,GAA2B;AACvB,QAAMO,KAAK,GAAGnI,MAAM,CAACC,IAAP,CAAY/E,0DAAZ,CAAd;;AACA,SAAK,IAAId,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+N,KAAK,CAAChO,MAA1B,EAAkCC,CAAC,EAAnC,EAAsC;AAClCiL,eAAS,CAAC8C,KAAK,CAAC/N,CAAD,CAAN,CAAT,GAAsB,CAAtB;AACH;AACJ;;AAED,WAASkM,oBAAT,GAAgC;AAE5B;AACA3D,kBAAc,GAAG7J,IAAI,CAACM,GAAL,CAASgP,KAAT,EAAjB,CAH4B,CAK5B;;AACA,QAAIzF,cAAJ,EAAoB;AAChBA,oBAAc,CAAC0F,UAAf,GAA4B,IAA5B;AACH,KAR2B,CAW5B;;;AACA,SAAI,IAAIjO,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuB,EAAEA,CAAzB,EAA4B;AACxB,UAAIrB,CAAC,GAAGqB,CAAC,GAAG,GAAZ;AACA,UAAIpB,CAAC,GAAG+I,YAAR;AACA,UAAIuG,MAAM,GAAG3F,cAAc,CAAC9F,MAAf,CAAsB9D,CAAtB,EAAyBC,CAAzB,EAA4B,QAA5B,CAAb;AACAF,UAAI,CAACM,GAAL,CAASgH,MAAT,CAAgBrH,CAAhB,EAAmBC,CAAC,GAAG,EAAvB,EAA2B,WAA3B;AACAsP,YAAM,CAACC,IAAP,CAAYC,SAAZ,GAAwB,IAAxB;AACH,KAlB2B,CAoB5B;;;AACA,SAAI,IAAIpO,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuB,EAAEA,CAAzB,EAA4B;AACxB,UAAIrB,CAAC,GAAGqB,CAAC,GAAG,GAAZ;AACA,UAAIpB,CAAC,GAAGF,IAAI,CAACiN,KAAL,CAAWjF,MAAX,GAAoB,EAApB,GAAyB,EAAzB,GAA6B,GAArC;AACAhI,UAAI,CAACM,GAAL,CAASgH,MAAT,CAAgBrH,CAAhB,EAAmB,CAAnB,EAAsB,KAAtB;;AACA,UAAGqB,CAAC,IAAI,CAAR,EAAW;AACPtB,YAAI,CAACM,GAAL,CAASgH,MAAT,CAAgBrH,CAAhB,EAAmBC,CAAnB,EAAsB,iBAAtB;AACH,OAFD,MAEO;AACHF,YAAI,CAACM,GAAL,CAASgH,MAAT,CAAgBrH,CAAhB,EAAmBC,CAAnB,EAAsB,kBAAtB;AACH;AACJ;;AAED,QAAIyP,KAAK,GAAG3P,IAAI,CAACM,GAAL,CAASgH,MAAT,CAAgBgC,OAAhB,EAAyBC,OAAzB,EAAkC,OAAlC,CAAZ;AACAoG,SAAK,CAACC,KAAN,CAAYlP,KAAZ,CAAkB,CAAlB;AACAiP,SAAK,CAAClP,MAAN,CAAaC,KAAb,CAAmB,GAAnB,EAAwB,GAAxB;AACH;;AAED,WAASiN,QAAT,GAAoB;AAChB7D,SAAK,GAAG9J,IAAI,CAACM,GAAL,CAASgH,MAAT,CAAgB,CAAhB,EAAkB,CAAlB,EAAoB,OAApB,CAAR;AACAwC,SAAK,CAACrJ,MAAN,CAAaC,KAAb,CAAmB,GAAnB,EAAwB,CAAxB;AACAoJ,SAAK,CAAC7J,CAAN,GAAUqJ,OAAV;AACAQ,SAAK,CAAC5J,CAAN,GAAU+I,YAAV;AACAjJ,QAAI,CAAC6N,OAAL,CAAagC,MAAb,CAAoBC,MAApB,CAA2BhG,KAA3B;AACAA,SAAK,CAAC2F,IAAN,CAAWM,MAAX,CAAkB7P,CAAlB,GAAsB4I,MAAtB;AACAgB,SAAK,CAAC2F,IAAN,CAAWO,OAAX,CAAmB9P,CAAnB,GAAuB2I,OAAvB;AACAiB,SAAK,CAAC2F,IAAN,CAAWQ,kBAAX,GAAgC,IAAhC;AACAnG,SAAK,CAACvC,UAAN,CAAiBjH,GAAjB,CAAqB,WAArB,EAAkC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAlC,EAA6C,EAA7C,EAAiD,KAAjD;AACAwJ,SAAK,CAACoG,QAAN,GAAiB,CAAjB;AAEAC,kBAAc;AACjB;;AAED,WAASA,cAAT,GAA0B;AACtBpG,eAAW,GAAG/J,IAAI,CAACM,GAAL,CAAS6D,KAAT,CAAe2F,KAAK,CAAC7J,CAArB,EAAwB6J,KAAK,CAAC5J,CAA9B,EAAiC,aAAjC,CAAd;AACA6J,eAAW,CAAChJ,KAAZ,GAAoB,CAApB;AACAgJ,eAAW,CAACtJ,MAAZ,CAAmBC,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B;AACH;;AAED,WAASkN,gBAAT,GAA4B;AAAA;;AAExB1G,UAAM,CAACC,IAAP,CAAYmD,iBAAZ,EAA+B1E,OAA/B,CAAuC,UAACwK,UAAD,EAAgB;AACnD,UAAIC,WAAW,GAAG/F,iBAAiB,CAAC8F,UAAD,CAAnC;AACA,UAAIE,YAAY,GAAGtQ,IAAI,CAACM,GAAL,CAASgH,MAAT,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB8I,UAAtB,CAAnB;AACAE,kBAAY,CAACvP,KAAb,GAAqB,CAArB;AACA,UAAIwP,aAAa,GAAGH,UAAU,GAAG,MAAjC;AACA,UAAII,UAAU,GAAGF,YAAY,CAAC/I,UAAb,CAAwBjH,GAAxB,CAA4BiQ,aAA5B,EAA2C,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAA3C,EAA4DF,WAAW,CAAC9F,KAAxE,EAA+E,KAA/E,CAAjB;AACAiG,gBAAU,CAACC,UAAX,CAAsBnQ,GAAtB,CAA0B,YAAM;AAC5BgQ,oBAAY,CAACvP,KAAb,GAAqB,CAArB;AACAqJ,qBAAa,CAACgG,UAAD,CAAb,CAA0BM,eAA1B,GAA4C,EAA5C;AACH,OAHD,EAGG,KAHH;AAIAtG,mBAAa,CAACgG,UAAD,CAAb,GAA4B;AACxB9I,cAAM,EAAEgJ,YADgB;AAExBC,qBAAa,EAAEA,aAFS;AAGxBlL,YAAI,EAAE+K,UAHkB;AAIxBM,uBAAe,EAAE;AAJO,OAA5B;AAMH,KAhBD;AAiBH;;AAED,WAAShD,UAAT,GAAsB;AAClB,SAAK,IAAIpM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzBqP,gBAAU,CAAC7K,0DAAiB,CAACtB,KAAnB,CAAV;AACAmM,gBAAU,CAAC7K,0DAAiB,CAAClB,GAAnB,CAAV;AACH;AACJ;;AAED,WAASmK,gBAAT,GAA4B;AACxBjJ,8DAAiB,CAACJ,aAAlB,CAAgCE,OAAhC,CAAwC,UAACkC,aAAD,EAAmB;AACvDyD,yBAAmB,CAACzD,aAAa,CAACzC,IAAf,CAAnB,GAA0C,CAA1C;AACH,KAFD;AAGH;;AAED,WAASsL,UAAT,CAAoBC,aAApB,EAAmC;AAC/B,QAAIC,KAAK,GAAG7Q,IAAI,CAACM,GAAL,CAASgH,MAAT,CAAgB,CAAhB,EAAmB,CAAnB,EAAsBsJ,aAAa,CAACvL,IAApC,CAAZ;AAEAwL,SAAK,CAACpQ,MAAN,CAAaC,KAAb,CAAmB,GAAnB,EAAwB,CAAxB;AAEAmQ,SAAK,CAAC5Q,CAAN,GAAU6Q,YAAY,CAACF,aAAD,CAAtB;AACAC,SAAK,CAAC3Q,CAAN,GAAU+I,YAAY,GAAG2H,aAAa,CAACzL,QAAvC;AACAnF,QAAI,CAAC6N,OAAL,CAAagC,MAAb,CAAoBC,MAApB,CAA2Be,KAA3B;AACAA,SAAK,CAACpB,IAAN,CAAWM,MAAX,CAAkB7P,CAAlB,GAAsB4I,MAAtB;AACA+H,SAAK,CAACpB,IAAN,CAAWO,OAAX,CAAmB9P,CAAnB,GAAuB0Q,aAAa,CAAC1L,KAAd,GAAsB,CAAtB,GAA0B2D,OAAjD;AACAgI,SAAK,CAACpB,IAAN,CAAWQ,kBAAX,GAAgC,IAAhC;AACAY,SAAK,CAACtJ,UAAN,CAAiBjH,GAAjB,CAAqBsQ,aAAa,CAACvL,IAAd,GAAqB,MAA1C,EAAkD,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAlD,EAAgE,EAAhE,EAAoE,KAApE;AACAwL,SAAK,CAACE,SAAN,GAAkB,CAAC,CAAnB,CAZ+B,CAYT;;AACtBF,SAAK,CAAClE,MAAN,GAAeiE,aAAa,CAACpL,UAAd,GAA2BmE,KAA1C;AACAkH,SAAK,CAACxL,IAAN,GAAauL,aAAa,CAACvL,IAA3B;AACAwL,SAAK,CAACG,QAAN,GAAiBJ,aAAjB;AACAC,SAAK,CAACI,UAAN,GAAmB,CAAnB;AACAJ,SAAK,CAACK,eAAN,GAAwB,CAAxB;AACA7F,WAAO,CAAC8F,IAAR,CAAaN,KAAb;AACH;;AAED,WAASC,YAAT,CAAsBF,aAAtB,EAAqC;AACjC,QAAIQ,IAAI,GAAGC,IAAI,CAACC,MAAL,EAAX;AACA,QAAIC,YAAY,GAAGH,IAAI,IAAKpR,IAAI,CAACiN,KAAL,CAAWpJ,KAAX,GAAkB,CAAnB,GAAwB2F,YAAxB,GAAuCoH,aAAa,CAACxL,WAArD,GAAmE,GAAvE,CAAvB;AACA,QAAIoM,MAAM,GAAGJ,IAAI,GAAG,GAAP,GAAaG,YAAb,GAA4BvR,IAAI,CAACiN,KAAL,CAAWpJ,KAAX,GAAmB0N,YAA5D;AACA,WAAOC,MAAP;AACH;;AAED,WAASC,oBAAT,GAAgC;AAC5B,SAAI,IAAInQ,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuB,EAAEA,CAAzB,EAA4B;AACxB,UAAI8P,IAAI,GAAGC,IAAI,CAACC,MAAL,EAAX;AACA,UAAII,SAAS,SAAb;;AACA,UAAGN,IAAI,GAAG,IAAV,EAAgB;AACZM,iBAAS,GAAG,OAAZ;AACH,OAFD,MAEO,IAAGN,IAAI,GAAG,IAAV,EAAgB;AACnBM,iBAAS,GAAG,OAAZ;AACH,OAFM,MAEA;AACHA,iBAAS,GAAG,OAAZ;AACH;;AACD,UAAIC,CAAC,GAAG,IAAIC,IAAJ,GAAWC,eAAX,EAAR;AAEA,UAAIC,KAAK,SAAT;AAAA,UAAWC,KAAK,SAAhB;AACAD,WAAK,GAAIxQ,CAAC,GAAC,IAAF,GAAO,EAAhB;;AAEA,UAAGqQ,CAAC,GAAG,CAAJ,IAAS,CAAZ,EAAe;AACXG,aAAK,IAAI,EAAT;AACAC,aAAK,GAAG9I,YAAY,GAAG,EAAvB;AACH,OAHD,MAGO;AACH6I,aAAK,IAAI,EAAT;AACAC,aAAK,GAAG9I,YAAY,GAAG,EAAvB;AACH;;AAED,UAAI+I,SAAS,GAAGhS,IAAI,CAACM,GAAL,CAAS6D,KAAT,CAAe2N,KAAf,EAAsBC,KAAtB,EAA6BL,SAA7B,CAAhB;AACAM,eAAS,CAACjR,KAAV,GAAkB,IAAlB;AACAiR,eAAS,CAACvR,MAAV,CAAiBC,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B;AACH;;AACDV,QAAI,CAACM,GAAL,CAASgH,MAAT,CAAgB,GAAhB,EAAqBtH,IAAI,CAACiN,KAAL,CAAWjF,MAAX,GAAoB,GAAzC,EAA8C,OAA9C;AACAhI,QAAI,CAACM,GAAL,CAASgH,MAAT,CAAgB,GAAhB,EAAqBtH,IAAI,CAACiN,KAAL,CAAWjF,MAAX,GAAoB,GAAzC,EAA8C,WAA9C;AACAhI,QAAI,CAACM,GAAL,CAASgH,MAAT,CAAgB,GAAhB,EAAqBtH,IAAI,CAACiN,KAAL,CAAWjF,MAAX,GAAoB,GAAzC,EAA8C,OAA9C;AACAhI,QAAI,CAACM,GAAL,CAASgH,MAAT,CAAgB,GAAhB,EAAqBtH,IAAI,CAACiN,KAAL,CAAWjF,MAAX,GAAoB,GAAzC,EAA8C,OAA9C;AACAhI,QAAI,CAACM,GAAL,CAASgH,MAAT,CAAgB,GAAhB,EAAqBtH,IAAI,CAACiN,KAAL,CAAWjF,MAAX,GAAoB,GAAzC,EAA8C,WAA9C;AACH;;AAED,WAAS0G,WAAT,GAAuB;AACnB,QAAGrC,WAAH,EAAgB;AACZlB,aAAO,CAAC8G,OAAR;AACA5F,iBAAW,GAAG,KAAd;AACA;AACH;;AACD,QAAIvC,KAAK,CAAC7J,CAAN,IAAWqJ,OAAO,GAAGE,YAArB,IAAqCM,KAAK,CAAC7J,CAAN,IAAWqJ,OAAO,GAAGE,YAA1D,IAA0E,CAAC6C,WAA/E,EAA4F;AACxF6F,iBAAW;AACX7F,iBAAW,GAAG,IAAd;AACH;AAEJ;;AAED,WAAS6F,WAAT,GAAuB;AACnB/G,WAAO,GAAGnL,IAAI,CAACM,GAAL,CAASgP,KAAT,EAAV,CADmB,CAGnB;;AACA,QAAI6C,aAAa,GAAGC,0DAAS,CAACpS,IAAD,CAA7B;AACAmL,WAAO,CAAC7K,GAAR,CAAY6R,aAAZ;AAEA,QAAIE,gBAAgB,GAAGC,qBAAqB,CAACtS,IAAI,CAAC6D,KAAL,GAAc1B,wDAAM,GAAG,CAAxB,EACxCnC,IAAI,CAACgI,MAAL,GAAe7F,wDAAM,GAAG,CADgB,CAA5C;AAEA,QAAIoQ,UAAU,GAAGxS,qEAAa,CAACC,IAAD,EAAOqS,gBAAgB,CAACpS,CAAxB,EAC1BoS,gBAAgB,CAACnS,CADS,EACN,gBADM,EACY,YAAM;AACxCuM,uBAAiB,CAAC7G,OAAlB,CAA0B,UAACC,QAAD,EAAWvE,CAAX,EAAiB;AACvC,YAAIyG,YAAY,GAAGlC,QAAQ,CAACR,IAA5B;AACAiH,YAAI,IAAIzG,QAAQ,CAACP,KAAjB;AACAgG,mBAAW;AACX,eAAOmB,iBAAiB,CAACnL,CAAD,CAAxB;AACAmK,0BAAkB,CAACpD,IAAnB;AACAqE,sBAAc,CAAC3E,YAAD,CAAd,GAA+B,CAA/B;;AACA,YAAGuE,IAAI,IAAIvD,WAAR,IAAuByJ,iBAAiB,EAA3C,EAA+C;AAC3CxS,cAAI,CAACoB,KAAL,CAAWG,KAAX,CAAiB,SAAjB;AACH;AACJ,OAVD;AAWAkL,uBAAiB,GAAG,EAApB;AACH,KAdyB,CAA9B;AAeA8F,cAAU,CAAC9R,MAAX,CAAkBC,KAAlB,CAAwB,CAAxB,EAA2B,GAA3B;AACAyK,WAAO,CAAC7K,GAAR,CAAYiS,UAAZ;AAEA,QAAIE,iBAAiB,GAAGH,qBAAqB,CAACtS,IAAI,CAAC6D,KAAL,GAAc1B,wDAAM,GAAG,CAAxB,EAA4BA,wDAAM,GAAG,CAArC,CAA7C;AACA,QAAIuQ,WAAW,GAAG3S,qEAAa,CAACC,IAAD,EAAOyS,iBAAiB,CAACxS,CAAzB,EAC3BwS,iBAAiB,CAACvS,CAAlB,GAAoB,EADO,EACH,GADG,EACE,YAAM;AAACiL,aAAO,CAAC8G,OAAR;AAAmB5F,iBAAW,GAAG,KAAd;AAAqB,KADjD,CAA/B;AAEAqG,eAAW,CAACjS,MAAZ,CAAmBC,KAAnB,CAAyB,CAAzB,EAA4B,CAA5B;AACAyK,WAAO,CAAC7K,GAAR,CAAYoS,WAAZ;AACA,QAAIxS,CAAC,GAAGiC,wDAAR;AACA,QAAMkN,KAAK,GAAGnI,MAAM,CAACC,IAAP,CAAY/E,0DAAZ,CAAd;AACA,QAAIuQ,MAAM,GAAGL,qBAAqB,CAACnQ,wDAAM,GAAG,CAAV,EAAajC,CAAb,CAAlC;;AAlCmB;AAoCf,UAAIyI,QAAQ,GAAG0G,KAAK,CAAC/N,CAAD,CAApB;AACA,UAAMsR,QAAQ,GAAGxQ,0DAAQ,CAACiN,KAAK,CAAC/N,CAAD,CAAN,CAAR,CAAmBgB,KAApC;AACA,UAAIuQ,QAAQ,GAAGzQ,0DAAQ,CAACiN,KAAK,CAAC/N,CAAD,CAAN,CAAR,CAAmBiB,IAAlC;AACA,UAAIrB,UAAU,GAAGD,kEAAU,CAACjB,IAAD,EAAO2S,MAAM,CAAC1S,CAAd,EAAiB0S,MAAM,CAACzS,CAAxB,EAA2ByI,QAA3B,EAAqC,YAAM;AAClE;AACA,YAAImK,gBAAgB,CAAC1Q,0DAAQ,CAACuG,QAAD,CAAT,EAAqBA,QAArB,CAApB,EAAoD;AAChD4D,mBAAS,CAAC5D,QAAD,CAAT,IAAsB,CAAtB;AACA2D,cAAI,IAAGlK,0DAAQ,CAACuG,QAAD,CAAR,CAAmBpG,IAA1B;;AACA,cAAIoG,QAAQ,KAAK,cAAjB,EAAiC;AAC7BiD,0BAAc,CAACvD,IAAf;AACAW,2BAAe,GAAG,IAAlB;AACH,WAHD,MAGO;AACHyC,8BAAkB,CAACpD,IAAnB;AACH;AACJ,SATD,MASO;AACHqD,6BAAmB,CAACrD,IAApB;AACH;AACJ,OAd0B,CAA3B;AAeA8C,aAAO,CAAC7K,GAAR,CAAYY,UAAZ;AAEA,UAAI6R,SAAS,GAAG/S,IAAI,CAACM,GAAL,CAASC,IAAT,CAAcoS,MAAM,CAAC1S,CAAP,GAAS,EAAvB,EAA2B0S,MAAM,CAACzS,CAAP,GAAS,EAApC,EAAwC0S,QAAQ,GAAG,KAAX,GAAmBC,QAAnB,GAA+B,GAAvE,EAA4E3Q,kEAA5E,CAAhB;AACAiJ,aAAO,CAAC7K,GAAR,CAAYyS,SAAZ;AACAJ,YAAM,CAACzS,CAAP,IAAaiC,wDAAM,GAAC,CAApB;AA1De;;AAmCnB,SAAI,IAAIb,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG+N,KAAK,CAAChO,MAAzB,EAAiC,EAAEC,CAAnC,EAAsC;AAAA;AAwBrC;AACJ;;AAED,WAASwR,gBAAT,CAA0BE,IAA1B,EAAgCrK,QAAhC,EAA0C;AACtC,WAAOqK,IAAI,IAAIA,IAAI,CAACzQ,IAAL,IAAa+J,IAArB,IAA6BC,SAAS,CAAC5D,QAAD,CAAT,KAAwB,CAA5D;AACH;;AAED,WAAS0F,cAAT,GAA0B;AACtBxD,cAAU,GAAG7K,IAAI,CAACM,GAAL,CAASgP,KAAT,EAAb,CADsB,CAGtB;;AACA,QAAI2D,UAAU,GAAGX,qBAAqB,CAAClJ,WAAD,EAAcC,WAAd,CAAtC;AACAsB,YAAQ,GAAG3K,IAAI,CAACM,GAAL,CAASgH,MAAT,CAAgB2L,UAAU,CAAChT,CAA3B,EAA8BgT,UAAU,CAAC/S,CAAzC,EAA2C,MAA3C,CAAX;AACAyK,YAAQ,CAACpD,UAAT,CAAoBjH,GAApB,CAAwB,QAAxB,EAAkC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,CAAlC,EAAqD,EAArD,EAAyD,IAAzD;AACAqK,YAAQ,CAACpD,UAAT,CAAoBc,IAApB,CAAyB,QAAzB;AACAsC,YAAQ,CAAClK,MAAT,CAAgBC,KAAhB,CAAsB,CAAtB,EAAwB,CAAxB;AACAiK,YAAQ,CAAC1C,aAAT,GAAyB,IAAzB;AAEA2C,YAAQ,GAAG5K,IAAI,CAACM,GAAL,CAASC,IAAT,CAAc0S,UAAU,CAAChT,CAAX,GAAe,EAA7B,EAAiCgT,UAAU,CAAC/S,CAA5C,EAA+C,QAAQoM,IAAR,GAAe,GAAf,GAAqBvD,WAApE,EAAiF;AAAC/G,UAAI,EAAE,mBAAP;AAA4BC,UAAI,EAAEF,4DAAlC;AAA8CJ,WAAK,EAAE,MAArD;AAA6DD,cAAQ,EAAE;AAAvE,KAAjF,CAAX;AACAkJ,YAAQ,CAAC3C,aAAT,GAAyB,IAAzB,CAZsB,CActB;;AACA,SAAI,IAAI3G,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGqL,MAAnB,EAA2B,EAAErL,CAA7B,EAAgC;AAC5B,UAAIqR,MAAM,GAAGL,qBAAqB,CAACpJ,YAAY,GAAG,KAAK5H,CAArB,EAAwB6H,YAAxB,CAAlC;AACA,UAAI+J,KAAK,GAAGlT,IAAI,CAACM,GAAL,CAASgH,MAAT,CAAgBqL,MAAM,CAAC1S,CAAvB,EAA0B0S,MAAM,CAACzS,CAAjC,EAAoC,OAApC,CAAZ;AACAgT,WAAK,CAACjL,aAAN,GAAsB,IAAtB;AACAiL,WAAK,CAACzS,MAAN,CAAaqB,GAAb,CAAiB,CAAjB,EAAmB,CAAnB;AACA+I,gBAAU,CAACvK,GAAX,CAAe4S,KAAf;AACH,KArBqB,CAuBtB;;;AACA,QAAIC,SAAS,GAAGb,qBAAqB,CAAC7K,KAAD,EAAQC,KAAR,CAArC;AACAoD,WAAO,GAAG9K,IAAI,CAACM,GAAL,CAAS6D,KAAT,CAAegP,SAAS,CAAClT,CAAzB,EAA4BkT,SAAS,CAACjT,CAAtC,EAAyC,SAAzC,CAAV;AACA4K,WAAO,CAACrK,MAAR,CAAeC,KAAf,CAAqB,CAArB,EAAuB,CAAvB;AACAoK,WAAO,CAAC7C,aAAR,GAAwB,IAAxB;AACA6C,WAAO,CAAC/J,KAAR,GAAgB,GAAhB;AACA,QAAIqS,cAAc,GAAGpT,IAAI,CAACM,GAAL,CAAS6D,KAAT,CAAegP,SAAS,CAAClT,CAAzB,EAA4BkT,SAAS,CAACjT,CAAtC,EAAyC,gBAAzC,CAArB;AACAkT,kBAAc,CAAC3S,MAAf,CAAsBC,KAAtB,CAA4B,CAA5B,EAA8B,CAA9B;AACA0S,kBAAc,CAACnL,aAAf,GAA+B,IAA/B;AAEA,QAAIJ,GAAG,GAAG,CAAV;AACA/B,8DAAiB,CAACJ,aAAlB,CAAgCE,OAAhC,CAAwC,UAACkC,aAAD,EAAmB;AACvD,UAAIC,YAAY,GAAGD,aAAa,CAACzC,IAAjC;AACA,UAAInF,CAAC,GAAGwH,KAAK,GAAGoD,OAAO,CAAC9C,MAAhB,GAAyB,EAAzB,GAA+BH,GAAG,GAAG,EAA7C;AACA,UAAI5H,CAAC,GAAGwH,KAAK,GAAG,CAAhB;AACA,UAAIpF,IAAI,GAAGrC,IAAI,CAACM,GAAL,CAAS6D,KAAT,CAAelE,CAAf,EAAiBC,CAAjB,EAAoB6H,YAAY,GAAG,MAAnC,CAAX;AACA,UAAIxH,IAAI,GAAGP,IAAI,CAACM,GAAL,CAASC,IAAT,CAAcN,CAAC,GAAG,EAAlB,EAAsBC,CAAtB,EAAyB,QAAQwM,cAAc,CAAC3E,YAAD,CAA/C,EAA+D;AAAC/F,YAAI,EAAE,mBAAP;AAA4BC,YAAI,EAAEF,4DAAlC;AAA8CJ,aAAK,EAAE,MAArD;AAA6DD,gBAAQ,EAAE;AAAvE,OAA/D,CAAX;AACAnB,UAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqB,GAArB;AACAH,UAAI,CAAC0H,aAAL,GAAqB,IAArB;AACA8C,uBAAiB,CAAChD,YAAD,CAAjB,GAAkCxH,IAAlC;AACA8B,UAAI,CAAC4F,aAAL,GAAqB,IAArB;AACA5F,UAAI,CAAC5B,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqB,GAArB;AACA,QAAEmH,GAAF;AACH,KAZD;AAcH;;AAED,WAASsH,iBAAT,GAA6B;AACzBvE,YAAQ,CAAC3K,CAAT,GAAamJ,WAAW,GAAG,EAA3B;AACAwB,YAAQ,CAAC1K,CAAT,GAAamJ,WAAW,CAACnJ,CAAzB;AACA0K,YAAQ,CAACrK,IAAT,GAAgB,QAAQ+L,IAAR,GAAe,GAAf,GAAqBvD,WAArC;;AAEA,SAAI,IAAIzH,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGuJ,UAAU,CAACwI,QAAX,CAAoBhS,MAAvC,EAA+C,EAAEC,CAAjD,EAAoD;AAChD,UAAI4R,KAAK,GAAGrI,UAAU,CAACyI,UAAX,CAAsBhS,CAAtB,CAAZ;;AACA,UAAGA,CAAC,GAAGqL,MAAP,EAAe;AACXuG,aAAK,CAACK,OAAN,GAAgB,IAAhB;AACH,OAFD,MAEO;AACHL,aAAK,CAACK,OAAN,GAAgB,KAAhB;AACH;AACJ,KAZwB,CAczB;;;AACArM,UAAM,CAACC,IAAP,CAAY4D,iBAAZ,EAA+BnF,OAA/B,CAAuC,UAACmC,YAAD,EAAkB;AACrDgD,uBAAiB,CAAChD,YAAD,CAAjB,CAAgCxH,IAAhC,GAAuC,QAAQmM,cAAc,CAAC3E,YAAD,CAA7D;AACH,KAFD,EAfyB,CAmBzB;;AACAb,UAAM,CAACC,IAAP,CAAYoF,SAAZ,EAAuB3G,OAAvB,CAA+B,UAAC+C,QAAD,EAAc;AACzC,UAAG4D,SAAS,CAAC5D,QAAD,CAAT,GAAsB,CAAtB,IAA2B6D,gBAAgB,CAAC7D,QAAD,CAA3C,IAAyDA,QAAQ,KAAK,cAAzE,EAAyF;AACrF;AACH;;AACD,UAAIH,GAAG,GAAGtB,MAAM,CAACC,IAAP,CAAYqF,gBAAZ,EAA8BnL,MAAxC;AACA,UAAImS,QAAQ,GAAGxT,IAAI,CAACM,GAAL,CAAS6D,KAAT,CAAesF,MAAM,GAAG,KAAGjB,GAA3B,EAA+BkB,MAA/B,EAAsCtH,0DAAQ,CAACuG,QAAD,CAAR,CAAmBtG,IAAzD,CAAf;AACAmR,cAAQ,CAACvL,aAAT,GAAyB,IAAzB;AACAuL,cAAQ,CAAC/S,MAAT,CAAgBC,KAAhB,CAAsB,CAAtB,EAAwB,CAAxB;AACA8L,sBAAgB,CAAC7D,QAAD,CAAhB,GAA6B6K,QAA7B;AACH,KATD;AAUH;;AAED,WAASxE,WAAT,GAAuB;AACnB,QAAGzC,SAAS,CAAC,cAAD,CAAT,GAA4B,CAA/B,EAAkC;AAC9BxC,iBAAW,CAAChJ,KAAZ,GAAoB,GAApB;AACH,KAFD,MAEO;AACHgJ,iBAAW,CAAChJ,KAAZ,GAAoB,CAApB;AACH;;AAED,QAAGwL,SAAS,CAAC,aAAD,CAAT,IAA4B,CAACS,iBAAhC,EAAmD;AAC/CA,uBAAiB,GAAGhN,IAAI,CAACM,GAAL,CAASmT,OAAT,CAAiB3J,KAAK,CAAC7J,CAAvB,EAA0B6J,KAAK,CAAC5J,CAAN,GAAQ,EAAlC,EAAsC,GAAtC,EAA2C,GAA3C,CAApB;AACA8M,uBAAiB,CAAC0G,aAAlB,CAAgC,YAAhC;AACA1G,uBAAiB,CAAC2G,IAAlB,CAAuB,IAAvB,EAA6B,GAA7B,EAAkC,CAAlC,EAAqC,CAAC,CAAtC;AACA3G,uBAAiB,CAACjM,KAAlB,GAA0B,GAA1B;AACH;;AAED,QAAGsL,WAAH,EAAgB;AACZrM,UAAI,CAAC6N,OAAL,CAAagC,MAAb,CAAoB+D,OAApB,CAA4B9J,KAA5B,EAAmCD,cAAnC;AACAC,WAAK,CAAC2F,IAAN,CAAWoE,QAAX,CAAoB5T,CAApB,GAAwB,CAAxB;AACA;AACH;;AACD6T,yBAAqB;;AACrB,QAAIhK,KAAK,CAACoG,QAAN,GAAiB,CAArB,EAAwB;AACpBlQ,UAAI,CAAC6N,OAAL,CAAagC,MAAb,CAAoB+D,OAApB,CAA4B9J,KAA5B,EAAmCD,cAAnC;AACAkK,6BAAuB,CAACjK,KAAD,CAAvB;AACH,KAHD,MAGO;AACHkK,uBAAiB;AACpB;;AACDjK,eAAW,CAAC9J,CAAZ,GAAgB6J,KAAK,CAAC7J,CAAtB;AACA8J,eAAW,CAAC7J,CAAZ,GAAgB4J,KAAK,CAAC5J,CAAtB;;AAEA,QAAI8M,iBAAJ,EAAuB;AACnBA,uBAAiB,CAAC/M,CAAlB,GAAsB6J,KAAK,CAAC7J,CAA5B;AACA+M,uBAAiB,CAAC9M,CAAlB,GAAsB4J,KAAK,CAAC5J,CAAN,GAAQ,EAA9B;AACH;AACJ;;AAED,WAAS+T,gBAAT,GAA4B;AACxB,WAAO1H,SAAS,CAAC,OAAD,CAAT,GAAqBvC,gBAAgB,GAAG,CAAxC,GAA4CA,gBAAnD;AACH;;AAID,WAASgK,iBAAT,GAA6B;AAAA;;AAEzB,QAAIE,UAAU,GAAGlU,IAAI,CAAC6N,OAAL,CAAagC,MAAb,CAAoB+D,OAApB,CAA4B9J,KAA5B,EAAmCD,cAAnC,CAAjB,CAFyB,CAGzB;;AACAC,SAAK,CAAC2F,IAAN,CAAWoE,QAAX,CAAoB5T,CAApB,GAAwB,CAAxB;AACA6J,SAAK,CAAC2F,IAAN,CAAWM,MAAX,CAAkB7P,CAAlB,GAAsBkM,QAAQ,GAAG,GAAH,GAAStD,MAAvC;;AAEA,QAAIc,OAAO,CAACuK,IAAR,CAAaC,MAAjB,EACA;AACI,UAAG,CAACjI,iBAAJ,EAAuB;AACnBkI,iBAAS,GADU,CACN;;AACblI,yBAAiB,GAAG,IAApB;AACH,OAJL,CAKI;;;AACArC,WAAK,CAAC2F,IAAN,CAAWoE,QAAX,CAAoB5T,CAApB,GAAwB,CAACgU,gBAAgB,EAAzC;AACAnK,WAAK,CAACvC,UAAN,CAAiBc,IAAjB,CAAsB,WAAtB;AACH,KATD,MAUK,IAAIuB,OAAO,CAAC0K,KAAR,CAAcF,MAAlB,EACL;AACI,UAAGjI,iBAAH,EAAsB;AAClBkI,iBAAS,GADS,CACL;;AACblI,yBAAiB,GAAG,KAApB;AACH,OAJL,CAKI;;;AACArC,WAAK,CAAC2F,IAAN,CAAWoE,QAAX,CAAoB5T,CAApB,GAAwBgU,gBAAgB,EAAxC;AACAnK,WAAK,CAACvC,UAAN,CAAiBc,IAAjB,CAAsB,WAAtB;AACH,KATI,MASE;AACHyB,WAAK,CAAC9C,KAAN,GAAc,CAAd;AACH,KA5BwB,CA8BzB;;;AACA,QAAI4C,OAAO,CAAC2K,EAAR,CAAWH,MAAf,EAAuB;AACnB,UAAGtK,KAAK,CAAC2F,IAAN,CAAW+E,QAAX,CAAoBC,IAApB,IAA4BP,UAA/B,EAA2C;AACvCpK,aAAK,CAAC2F,IAAN,CAAWoE,QAAX,CAAoB3T,CAApB,GAAwB,CAAC+J,qBAAzB;AACH,OAFD,MAEO,IAAG,CAACgB,YAAD,IAAiB,CAACC,iBAAlB,IAAuCqB,SAAS,CAAC,eAAD,CAAT,GAA6B,CAAvE,EAA0E;AAC7EzC,aAAK,CAAC2F,IAAN,CAAWoE,QAAX,CAAoB3T,CAApB,GAAwB,CAAC+J,qBAAzB;AACAgB,oBAAY,GAAG,IAAf;AACAc,iBAAS,CAAC1D,IAAV;AACH;;AACD6C,uBAAiB,GAAG,IAApB;AACH,KATD,MASO;AACHA,uBAAiB,GAAG,KAApB;AACH,KA1CwB,CA2CzB;;;AACA,QAAIgJ,UAAJ,EAAgB;AACZ,UAAI9H,QAAJ,EAAc;AACVP,yBAAiB,CAACxD,IAAlB;AACH;;AACD+D,cAAQ,GAAG,KAAX;AACAnB,kBAAY,GAAG,KAAf;AACH,KAND,MAMO,IAAGsB,SAAS,CAAC,aAAD,CAAZ,EAA6B;AAChCzC,WAAK,CAAC2F,IAAN,CAAWO,OAAX,CAAmB9P,CAAnB,GAAuB2I,OAAO,GAAG,CAAjC;AACH;;AACD,QAAM6L,WAAW,GAAG9K,OAAO,CAAC6K,IAAR,CAAaL,MAAjC;;AACA,QAAIM,WAAW,IAAI,CAACC,QAAhB,IAA4B,CAACT,UAA7B,IAA2C9H,QAAQ,KAAK,KAAxD,IAAiEG,SAAS,CAAC,cAAD,CAAT,KAA8B,CAAnG,EAAsG;AAClGzC,WAAK,CAAC2F,IAAN,CAAWoE,QAAX,CAAoB3T,CAApB,GAAwB,MAAI,IAA5B;AACAkM,cAAQ,GAAG,IAAX;AACH;;AAEDf,WAAO,CAACzF,OAAR,CAAgB,UAACiL,KAAD,EAAW;AACvB7Q,UAAI,CAAC6N,OAAL,CAAagC,MAAb,CAAoB+E,OAApB,CAA4B9K,KAA5B,EAAmC+G,KAAnC,EAA0CgE,UAA1C,EAAsD,IAAtD,EAA4D,MAA5D;AACH,KAFD;AAGAF,YAAQ,GAAGD,WAAX;AACH;;AAED,MAAIC,QAAQ,GAAG,KAAf;;AAEA,WAASZ,uBAAT,CAAiCzM,MAAjC,EAAyC;AACrCA,UAAM,CAAC4I,QAAP;AACA5I,UAAM,CAACwN,IAAP,GAAcxN,MAAM,CAAC4I,QAAP,GAAkB,CAAlB,IAAuB,CAAvB,GAA2B,UAA3B,GAAwC,UAAtD;AACH;;AAED,WAAS6E,qBAAT,CAA+BlE,KAA/B,EAAsC;AAClCA,SAAK,CAACK,eAAN;AACAL,SAAK,CAAC9P,KAAN,GAAc8P,KAAK,CAACK,eAAN,GAAwB,CAAxB,IAA6B,CAA7B,GAAiC,GAAjC,GAAuC,CAArD;AACH;;AAED,WAASjC,aAAT,GAAyB;AACrB/H,UAAM,CAACC,IAAP,CAAYoE,mBAAZ,EAAiC3F,OAAjC,CAAyC,UAACoP,SAAD,EAAe;AACpD,UAAIC,cAAc,GAAG1J,mBAAmB,CAACyJ,SAAD,CAAnB,EAArB;AACA,UAAIE,UAAU,GAAGpP,0DAAiB,CAACH,iBAAlB,CAAoCqP,SAApC,CAAjB;;AACA,UAAGC,cAAc,GAAGC,UAAU,CAACzP,aAAX,GAA4B,MAAMkE,KAAtD,EAA8D;AAC1DgH,kBAAU,CAACuE,UAAD,CAAV;AACA3J,2BAAmB,CAACyJ,SAAD,CAAnB,GAAiC,CAAjC;AACH;AACJ,KAPD;AAQA3J,WAAO,CAACzF,OAAR,CAAgB,UAACiL,KAAD,EAAW;AACvB,UAAIqD,UAAU,GAAGlU,IAAI,CAAC6N,OAAL,CAAagC,MAAb,CAAoB+D,OAApB,CAA4B/C,KAA5B,EAAmChH,cAAnC,CAAjB;;AAEA,UAAGgH,KAAK,CAACX,QAAN,GAAiB,CAApB,EAAuB;AACnB6D,+BAAuB,CAAClD,KAAD,CAAvB;AACA;AACH;;AAED,UAAGA,KAAK,CAAClE,MAAN,GAAe,CAAlB,EAAsB;AAClBwI,oBAAY,CAACtE,KAAD,CAAZ;AACA;AACH;;AAED,UAAGA,KAAK,CAAClE,MAAN,KAAiB,CAApB,EAAuB;AACnBoI,6BAAqB,CAAClE,KAAD,CAArB,CADmB,CAEnB;;AACA,YAAGA,KAAK,CAACK,eAAN,KAA0B,CAA7B,EAAgC;AAC5BL,eAAK,CAAClE,MAAN,GAAe,CAAf;AACAkE,eAAK,CAAC9P,KAAN,GAAc,CAAd;AACH;AACJ;;AAED,UAAG8P,KAAK,CAACI,UAAN,GAAmB,CAAtB,EAAyB;AACrBJ,aAAK,CAACI,UAAN;AACA;AACH;;AACD,UAAI1G,KAAK,GAAG6K,sBAAsB,CAACvE,KAAK,CAACG,QAAP,CAAlC;;AACA,UAAGH,KAAK,CAAClE,MAAN,KAAiB,CAApB,EAAuB;AACnBpC,aAAK,IAAI,CAAT;AACH;;AAED,UAAGsG,KAAK,CAAC5Q,CAAN,GAAUqJ,OAAO,GAAGE,YAApB,IAAoCqH,KAAK,CAAC5Q,CAAN,GAAUqJ,OAAjD,EAA0D;AACtDuH,aAAK,CAACpB,IAAN,CAAWoE,QAAX,CAAoB5T,CAApB,GAAwB,CAACsK,KAAzB;;AACA,YAAGsG,KAAK,CAACE,SAAN,KAAoB,CAAvB,EAA0B;AACtBsE,6BAAmB,CAACxE,KAAD,CAAnB;AACH;;AACDA,aAAK,CAACE,SAAN,GAAkB,CAAC,CAAnB;AACA;AACH,OAPD,MAOO,IAAGF,KAAK,CAAC5Q,CAAN,GAAUqJ,OAAO,GAAGE,YAApB,IAAoCqH,KAAK,CAAC5Q,CAAN,GAAUqJ,OAAjD,EAA0D;AAC7D,YAAGuH,KAAK,CAACE,SAAN,KAAoB,CAAC,CAAxB,EAA2B;AACvBsE,6BAAmB,CAACxE,KAAD,CAAnB;AACH;;AACDA,aAAK,CAACpB,IAAN,CAAWoE,QAAX,CAAoB5T,CAApB,GAAwBsK,KAAxB;AACAsG,aAAK,CAACE,SAAN,GAAkB,CAAlB;AACA;AACH;;AAEDF,WAAK,CAACpB,IAAN,CAAWoE,QAAX,CAAoB5T,CAApB,GAAwBsK,KAAK,GAAGsG,KAAK,CAACE,SAAtC;AACAF,WAAK,CAACtJ,UAAN,CAAiBc,IAAjB,CAAsBwI,KAAK,CAACxL,IAAN,GAAa,MAAnC;;AACA,UAAGgM,IAAI,CAACC,MAAL,KAAgBT,KAAK,CAACG,QAAN,CAAejM,QAAlC,EAA4C;AACxC8L,aAAK,CAACE,SAAN,IAAmB,CAAC,CAApB;AACAsE,2BAAmB,CAACxE,KAAD,CAAnB;AACH,OApDsB,CAqDnB;;;AACJ,UAAIA,KAAK,CAACpB,IAAN,CAAW+E,QAAX,CAAoBC,IAApB,IAA4BP,UAAhC,EAA4C;AACxC,YAAG7C,IAAI,CAACC,MAAL,KAAgB,IAAhB,GAAuB,GAA1B,EAA+B;AAC3BT,eAAK,CAACpB,IAAN,CAAWoE,QAAX,CAAoB3T,CAApB,GAAwB,CAAC+J,qBAAzB;AACH;AACJ;AACJ,KA3DD;AA4DH;;AAED,WAAS6J,qBAAT,GAAiC;AAC7B5M,UAAM,CAACC,IAAP,CAAYiD,aAAZ,EAA2BxE,OAA3B,CACI,UAAC0P,gBAAD;AAAA,aAAsBC,kBAAkB,CAACnL,aAAa,CAACkL,gBAAD,CAAb,CAAgChO,MAAjC,CAAxC;AAAA,KADJ;AAEH;;AAED,WAASuN,UAAT,CAAoB/K,KAApB,EAA2B+G,KAA3B,EAAkC;AAC9BA,SAAK,CAACpB,IAAN,CAAWoE,QAAX,CAAoB5T,CAApB,GAAwB,CAAxB;AACA4Q,SAAK,CAACpB,IAAN,CAAWoE,QAAX,CAAoB3T,CAApB,GAAwB,CAAxB;AACA2Q,SAAK,CAACI,UAAN,GAAmB/G,oBAAoB,GAAG,CAA1C;AACAsL,mBAAe,CAAC1L,KAAD,EAAQ+G,KAAR,CAAf;;AACA,QAAGtE,SAAS,CAAC,cAAD,CAAT,GAA4B,CAA/B,EAAkC;AAC9BA,eAAS,CAAC,cAAD,CAAT,GAA4BA,SAAS,CAAC,cAAD,CAAT,GAA4B,CAAxD;AACAT,oBAAc,CAACzD,IAAf;AACA;AACH;;AACDsE,UAAM;;AACN,QAAGA,MAAM,GAAG,CAAZ,EAAe;AACXT,oBAAc,CAAC7D,IAAf;AACArI,UAAI,CAACoB,KAAL,CAAWG,KAAX,CAAiB,UAAjB;AACH;AACJ;;AAED,WAASiU,eAAT,CAAyBlO,MAAzB,EAAiCmO,SAAjC,EAA4C;AACxCnO,UAAM,CAAC4I,QAAP,GAAkBhG,oBAAlB;AACA,QAAM8G,QAAQ,GAAG1J,MAAM,CAAC0J,QAAP,IAAmB,EAApC;AACA,QAAI0E,GAAG,GAAG1E,QAAQ,CAAChM,kBAAnB;AACA,QAAI2Q,GAAG,GAAG3E,QAAQ,CAAC/L,kBAAnB;;AACA,QAAIwQ,SAAS,KAAK3L,KAAd,IAAuByC,SAAS,CAAC,WAAD,CAAT,KAA2B,CAAtD,EAAyD;AACrDmJ,SAAG,IAAI,CAAP;AACAC,SAAG,IAAI,CAAP;AACH;;AACD,QAAIC,SAAS,GAAGF,GAAG,KAAK3S,SAAR,GAAoB2S,GAApB,GAA0BvL,qBAA1C;AACA,QAAI0L,SAAS,GAAGF,GAAG,KAAK5S,SAAR,GAAoB4S,GAApB,GAA0B,CAACxL,qBAA3C;AACA7C,UAAM,CAACmI,IAAP,CAAYoE,QAAZ,CAAqB5T,CAArB,GAA0BwV,SAAS,CAAChG,IAAV,CAAexP,CAAf,GAAmBqH,MAAM,CAACmI,IAAP,CAAYxP,CAA/B,GAAmC,CAAC2V,SAApC,GAAgDA,SAA1E;AACAtO,UAAM,CAACmI,IAAP,CAAYoE,QAAZ,CAAqB3T,CAArB,GAAyB2V,SAAzB;AACH;;AAED,WAASjH,aAAT,CAAuB0G,gBAAvB,EAAyC;AACrC,QAAGtK,aAAH,EAAkB;AACd;AACH;;AACDA,iBAAa,GAAG,IAAhB;AACA,QAAIsF,YAAY,GAAGlG,aAAa,CAACkL,gBAAD,CAAb,CAAgChO,MAAnD;AACA,QAAIiJ,aAAa,GAAGnG,aAAa,CAACkL,gBAAD,CAAb,CAAgC/E,aAApD;AACAD,gBAAY,CAACvP,KAAb,GAAqB,CAArB;AACA,QAAI+U,UAAU,GAAGxF,YAAY,CAAC/I,UAAb,CAAwBwO,YAAxB,CAAqClS,KAAtD;AACA,QAAImS,QAAQ,GAAG,CAAEF,UAAD,GAAezL,kBAAhB,IAAuCyL,UAAtD;AACAxF,gBAAY,CAAC7P,MAAb,CAAoBC,KAApB,CAA0BsV,QAA1B,EAAoC,GAApC;AACAT,sBAAkB,CAACjF,YAAD,CAAlB;AACA,QAAI2F,IAAI,GAAG3F,YAAY,CAAC/I,UAAb,CAAwBc,IAAxB,CAA6BkI,aAA7B,CAAX;AACA0F,QAAI,CAACxF,UAAL,CAAgBnQ,GAAhB,CAAoB,YAAM;AAAC0K,mBAAa,GAAG,KAAhB;AAAuB,KAAlD;AACH,GA9tBmC,CAguBpC;;;AACA,WAASqK,mBAAT,CAA6B/N,MAA7B,EAAqC;AACjCA,UAAM,CAACsI,KAAP,CAAa3P,CAAb,IAAkB,CAAC,CAAnB;AACH;;AAED,WAASoU,SAAT,GAAqB;AACjBgB,uBAAmB,CAACvL,KAAD,CAAnB;AACA5C,UAAM,CAACC,IAAP,CAAYiD,aAAZ,EAA2BxE,OAA3B,CACI,UAAC0P,gBAAD;AAAA,aAAsBD,mBAAmB,CAACjL,aAAa,CAACkL,gBAAD,CAAb,CAAgChO,MAAjC,CAAzC;AAAA,KADJ;AAEH;;AAED,WAASiO,kBAAT,CAA4BjF,YAA5B,EAA0C;AACtC,QAAI4F,SAAS,GAAGC,oBAAoB,EAApC;AACA7F,gBAAY,CAACrQ,CAAb,GAAiBiW,SAAS,CAACE,OAA3B;AACA9F,gBAAY,CAACpQ,CAAb,GAAiBgW,SAAS,CAACG,OAA3B;AACH;;AAED,WAASF,oBAAT,GAAgC;AAC5B,QAAIC,OAAO,GAAGjK,iBAAiB,GAAErC,KAAK,CAAC7J,CAAN,GAAU,EAAZ,GAAiB6J,KAAK,CAAC7J,CAAN,GAAU,EAA1D;AACA,QAAIoW,OAAO,GAAGvM,KAAK,CAAC5J,CAAN,GAAU,EAAxB;AACA,WAAO;AAACkW,aAAO,EAAPA,OAAD;AAAUC,aAAO,EAAPA;AAAV,KAAP;AACH;;AAED,WAAS/D,qBAAT,CAA+BrS,CAA/B,EAAiCC,CAAjC,EAAoC;AAChC,WAAO;AACHD,OAAC,EAAED,IAAI,CAACiO,MAAL,CAAYhO,CAAZ,GAAgBA,CADhB;AAEHC,OAAC,EAAEF,IAAI,CAACiO,MAAL,CAAY/N,CAAZ,GAAeA;AAFf,KAAP;AAIH;;AAED,WAASkV,sBAAT,CAAgCxE,aAAhC,EAA+C;AAC3C,WAAOA,aAAa,CAACrL,SAAd,GAA0B,KAAKoE,KAAtC;AACH;;AAED,WAASe,iBAAT,GAA6B;AACzB,QAAM4L,GAAG,GAAGlM,aAAa,CAAC,KAAD,CAAzB;AACA,QAAMmM,SAAS,GAAGD,GAAG,CAAChP,MAAtB;AACA+D,WAAO,CAACzF,OAAR,CAAgB,UAACiL,KAAD,EAAW;AACvB,UAAIyF,GAAG,CAAC5F,eAAJ,CAAoBrP,MAApB,IAA8B,CAA9B,IAAmC6F,MAAM,CAACC,IAAP,CAAYsF,iBAAZ,EAA+B+J,QAA/B,CAAwC3F,KAAK,CAACxL,IAA9C,CAAnC,IAA0FwL,KAAK,CAAClE,MAAN,GAAe,CAA7G,EAAgH;AAC5G;AACH;;AACD,UAAM8J,cAAc,GAAG7T,MAAM,CAAC8T,SAAP,CAAiBC,UAAjB,CAA4B9F,KAAK,CAAC+F,SAAN,EAA5B,EAA+CL,SAAS,CAACK,SAAV,EAA/C,CAAvB;;AACA,UAAIH,cAAJ,EAAoB;AAChBH,WAAG,CAAC5F,eAAJ,CAAoBS,IAApB,CAAyBN,KAAzB;AACAnE,sBAAc,CAACmE,KAAK,CAACxL,IAAP,CAAd,IAA8B,CAA9B;AACAoH,yBAAiB,CAAC0E,IAAlB,CAAuBN,KAAK,CAACG,QAA7B;AACAmE,oBAAY,CAACtE,KAAD,CAAZ;AACAlF,uBAAe,CAACtD,IAAhB;AACH;AACJ,KAZD;AAcH;;AAED,MAAMoC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACoM,SAAD,EAAe;AACtC,QAAMC,IAAI,GAAGD,SAAS,GAAGzM,aAAa,CAAC,SAAD,CAAhB,GAA8BA,aAAa,CAAC,MAAD,CAAjE;AACA,QAAM2M,UAAU,GAAGD,IAAI,CAACxP,MAAxB;AAEA+D,WAAO,CAACzF,OAAR,CAAgB,UAACiL,KAAD,EAAW;AACvB,UAAIiG,IAAI,CAACpG,eAAL,CAAqB8F,QAArB,CAA8B3F,KAA9B,CAAJ,EAA0C;AACtC;AACH;;AACD,UAAM4F,cAAc,GAAG7T,MAAM,CAAC8T,SAAP,CAAiBC,UAAjB,CAA4B9F,KAAK,CAAC+F,SAAN,EAA5B,EAA+CG,UAAU,CAACH,SAAX,EAA/C,CAAvB;;AACA,UAAIH,cAAJ,EAAoB;AAChBI,iBAAS,GAAG5K,WAAW,CAAC5D,IAAZ,EAAH,GAAwB2D,QAAQ,CAAC3D,IAAT,EAAjC;AACAyO,YAAI,CAACpG,eAAL,CAAqBS,IAArB,CAA0BN,KAA1B;AACA,YAAMmG,aAAa,GAAGnG,KAAK,CAAClE,MAAN,KAAiB,CAAvC;AACA,YAAMsK,WAAW,GAAGJ,SAAS,GAAG,CAAH,GAAO,CAApC;AACAhG,aAAK,CAAClE,MAAN,IAAgBsK,WAAhB;AACAzB,uBAAe,CAAC3E,KAAD,EAAQ/G,KAAR,CAAf,CANgB,CAQhB;;AACA,YAAI,CAACkN,aAAD,IAAkBnG,KAAK,CAAClE,MAAN,GAAe,CAArC,EAAwC;AACpCkE,eAAK,CAAClE,MAAN,GAAe,CAAf;AACH;;AACD,YAAIkE,KAAK,CAAClE,MAAN,KAAiB,CAArB,EAAwB;AACpBkE,eAAK,CAACK,eAAN,GAAwB1F,mBAAmB,IAAIqL,SAAS,GAAG,CAAH,GAAO,CAApB,CAA3C;AACH;AACJ;AACJ,KArBD;AAsBH,GA1BD;;AA4BA,WAAS1B,YAAT,CAAsBtE,KAAtB,EAA6B;AACzBxF,WAAO,CAAC6L,MAAR,CAAe7L,OAAO,CAAC8L,OAAR,CAAgBtG,KAAhB,CAAf,EAAuC,CAAvC;AACAA,SAAK,CAACoB,OAAN;AACH;;AAED,WAASxE,uBAAT,GAAmC;AAC/B,QAAGnC,WAAW,GAAG,EAAjB,EAAqB;AACjB,aAAO,CAAP;AACH,KAFD,MAEO,IAAGA,WAAW,GAAG,EAAjB,EAAqB;AACxB,aAAO,CAAP;AACH,KAFM,MAEA,IAAGA,WAAW,GAAG,EAAjB,EAAqB;AACxB,aAAO,CAAP;AACH,KAFM,MAEA,IAAGA,WAAW,GAAG,EAAjB,EAAqB;AACxB,aAAO,CAAP;AACH,KAFM,MAEA;AACH,aAAO,CAAP;AACH;AACJ;;AAED,WAASkH,iBAAT,GAA6B;AACzB,SAAI,IAAIlR,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG4F,MAAM,CAACC,IAAP,CAAYoF,SAAZ,EAAuBlL,MAA1C,EAAkD,EAAEC,CAApD,EAAuD;AACnD,UAAIqH,QAAQ,GAAGzB,MAAM,CAACC,IAAP,CAAYoF,SAAZ,EAAuBjL,CAAvB,CAAf;;AACA,UAAGqH,QAAQ,KAAK,cAAhB,EAAgC;AAC5B,YAAG,CAACK,eAAJ,EAAqB;AACjB,iBAAO,KAAP;AACH;AACJ,OAJD,MAIO,IAAGuD,SAAS,CAAC5D,QAAD,CAAT,GAAsB,CAAzB,EAA4B;AAC/B,eAAO,KAAP;AACH;AACJ;;AACD,WAAO,IAAP;AACH;;AAED,SAAO;AAAC1E,WAAO,EAAPA,OAAD;AAAUF,UAAM,EAANA,MAAV;AAAkBkC,UAAM,EAANA;AAAlB,GAAP;AACH,C;;;;;;;;;;;;ACz1BD;AAAA;AAAA;AAAA;AACe,SAASmM,SAAT,CAAmBpS,IAAnB,EAAyB;AAEpC,MAAImS,aAAJ;AACA,MAAItO,KAAK,GAAG7D,IAAI,CAAC6D,KAAL,GAAa1B,wDAAM,GAAG,CAAlC,CAHoC,CAGA;;AACpC,MAAI6F,MAAM,GAAGhI,IAAI,CAACgI,MAAL,GAAc7F,wDAAM,GAAG,CAApC,CAJoC,CAIE;;AAEtC,MAAIiV,GAAG,GAAGpX,IAAI,CAACM,GAAL,CAAS+W,UAAT,CAAoBxT,KAApB,EAA2BmE,MAA3B,CAAV;AAEAoP,KAAG,CAACE,GAAJ,CAAQC,SAAR;AACAH,KAAG,CAACE,GAAJ,CAAQE,IAAR,CAAa,CAAb,EAAgB,CAAhB,EAAmB3T,KAAnB,EAA0BmE,MAA1B;AACAoP,KAAG,CAACE,GAAJ,CAAQG,SAAR,GAAoB,SAApB;AACAL,KAAG,CAACE,GAAJ,CAAQrV,IAAR;AACAkQ,eAAa,GAAGnS,IAAI,CAACM,GAAL,CAASgH,MAAT,CAAgBtH,IAAI,CAACiO,MAAL,CAAYhO,CAAZ,GAAiBD,IAAI,CAAC6D,KAAL,GAAW,CAA5C,EAAgD7D,IAAI,CAACiO,MAAL,CAAY/N,CAAZ,GAAiBF,IAAI,CAACgI,MAAL,GAAY,CAA7E,EAAiFoP,GAAjF,CAAhB;AACAjF,eAAa,CAAC1R,MAAd,CAAqBC,KAArB,CAA2B,GAA3B,EAAgC,GAAhC;AACAyR,eAAa,CAACuF,UAAd;AACAvF,eAAa,CAACpR,KAAd,GAAsB,IAAtB;AACA,SAAOoR,aAAP;AACH,C;;;;;;;;;;;;AClBD;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACe,SAAS1O,YAAT,CAAsBzD,IAAtB,EAA4B;AAEvC,WAAS+D,MAAT,GAAkB;AACdnC,qEAAS,CAAC5B,IAAD,EAAOA,IAAI,CAAC6D,KAAL,GAAW,CAAlB,EAAqB,EAArB,EAAyB,UAAzB,CAAT;AACA1C,iFAAqB,CAACnB,IAAD,EAAO,EAAP,EAAW,EAAX,EAAe,QAAf,EAAyB,OAAzB,CAArB;AACAA,QAAI,CAACM,GAAL,CAASC,IAAT,CAAc,EAAd,EAAkB,GAAlB,EAAuB,4FAAvB,EAAqH2B,kEAArH;AACH;;AAED,SAAO;AAAC6B,UAAM,EAANA;AAAD,GAAP;AACH,C","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import {FONT_COLOR, ButtonStyle} from \"../common/constants\";\r\n\r\n// instance of the game, x coordinate, y coordinate, button display text, and state to move to\r\nconst GenericButton = (game, x, y, btnName, callback) => {\r\n    const genericButton = game.add.text(x, y, btnName, ButtonStyle);\r\n    genericButton.anchor.setTo(0,0);\r\n    genericButton.inputEnabled = true;\r\n    genericButton.events.onInputUp.add(callback);\r\n    genericButton.events.onInputOver.add((( ) => {\r\n        genericButton.alpha = .5;\r\n    }), this);\r\n    genericButton.events.onInputOut.add(() => {\r\n        genericButton.alpha = 1;\r\n    }, this);\r\n\r\n    return genericButton;\r\n};\r\n\r\nexport default GenericButton;","import {FONT_COLOR, ButtonStyle} from \"../common/constants\";\r\n\r\n// instance of the game, x coordinate, y coordinate, button display text, and state to move to\r\nconst ItemButton = (game, x, y, btnName, callback) => {\r\n    const itemButton = game.add.text(x, y, btnName, ButtonStyle);\r\n    /*itemButton.setTextBounds(x, y, 100, 100);\r\n    itemButton.style.align = \"left\";\r\n    itemButton.style.boundsAlignH = \"left\";\r\n    itemButton.style.boundsAlignV = \"top\";*/\r\n    itemButton.inputEnabled = true;\r\n    itemButton.events.onInputUp.add(callback);\r\n    itemButton.events.onInputOver.add((( ) => {\r\n        itemButton.alpha = .5;\r\n    }), this);\r\n    itemButton.events.onInputOut.add(() => {\r\n        itemButton.alpha = 1;\r\n    }, this);\r\n\r\n    return itemButton;\r\n};\r\n\r\nexport default ItemButton;","import {FONT_COLOR, ButtonStyle} from \"../common/constants\";\r\nimport GenericButton from \"./GenericButton\";\r\n\r\n// instance of the game, x coordinate, y coordinate, button display text, and state to move to\r\nconst StateTransitionButton = (game, x, y, btnName, ...state) => {\r\n    return GenericButton(game, x, y, btnName, () => {\r\n        if (state.length > 1) {\r\n            for(let i = 0; i < state.length; i++) {\r\n                game.state.start(state[i]);\r\n            }\r\n        } else {\r\n            game.state.start(state[0]);\r\n        }\r\n    });\r\n};\r\n\r\nexport default StateTransitionButton;","import {BaseStyle} from \"./constants\";\r\n\r\nlet titleStyle = {...BaseStyle, fontSize: '48px'};\r\ntitleStyle.align = 'center';\r\n\r\nexport default function TitleText(game, x, y, contents) {\r\n    let text = game.add.text(x, y, contents, titleStyle);\r\n    text.anchor.set(0.5);\r\n}","export const FONT_COLOR = \"#589b00\";\r\nexport const BaseStyle = {font: 'Gloria Hallelujah', fill: FONT_COLOR, align: 'left'};\r\nexport const ButtonStyle = { ...BaseStyle,  fontSize: '32px' };\r\nexport const DescriptionStyle = { ...BaseStyle, fontSize: '18px' };\r\nexport const MARGIN = 24;\r\nexport const ITEM_MAP = {\r\n    \"Speed\": {icon: \"speedIcon\" , descr: \"Doubles movement speed\", cost: 40},\r\n    \"Swamp Bubble\": {icon: \"swampBubbleIcon\" , descr: \"Takes one free hit & adds bounce ability\", cost: 40},\r\n    \"Fart in a Jar\": {icon: \"fartJarIcon\" , descr: \"Adds double-jump ability\", cost: 60},\r\n    \"Big Onion\": {icon: \"bigFistIcon\" , descr: \"Higher damage and knock back\", cost: 80},\r\n    \"Fairie Dust\": {icon: \"fairieDustIcon\" , descr: \"Slows fall speed\", cost: 100},\r\n};\r\n","import {FONT_COLOR, ButtonStyle} from \"../common/constants\";\r\nimport GenericButton from \"./GenericButton\";\r\n\r\nconst GitButton = (game, x, y, btnName, link) => {\r\n    GenericButton(game, x, y, btnName, () => {\r\n        window.open(link);\r\n    });\r\n};\r\n\r\nexport default GitButton;","import entryState from \"./states/entry-state\";\r\nimport aboutState from \"./states/about-state\";\r\nimport instructionsState from \"./states/instructions-state\";\r\nimport instructionsState2 from \"./states/instructions-state2\";\r\nimport instructionsState3 from \"./states/instructions-state3\";\r\nimport instructionsState4 from \"./states/instructions-state4\";\r\nimport gameOverState from \"./states/game-over-state\";\r\nimport assetLoadState from \"./states/asset-load-state\";\r\nimport fontLoadState from \"./states/font-load-state\";\r\nimport victoryState from \"./states/victory-state\";\r\n\r\nvar game = new Phaser.Game(640, 512, Phaser.AUTO, Phaser.AUTO, 'game', undefined, undefined, false);\r\ngame.state.add(\"Entry\", entryState(game));\r\ngame.state.add(\"About\", aboutState(game));\r\ngame.state.add(\"Instructions\", instructionsState(game));\r\ngame.state.add(\"Instructions2\", instructionsState2(game));\r\ngame.state.add(\"Instructions3\", instructionsState3(game));\r\ngame.state.add(\"Instructions4\", instructionsState4(game));\r\ngame.state.add(\"GameOver\", gameOverState(game));\r\ngame.state.add(\"AssetLoad\", assetLoadState(game));\r\ngame.state.add(\"FontLoad\", fontLoadState(game));\r\ngame.state.add(\"Victory\", victoryState(game));\r\ngame.state.start(\"FontLoad\");","import {FONT_COLOR} from \"../common/constants\";\r\nimport StateTransitionButton from \"../common/StateTransitionButton\";\r\nimport GitButton from \"../common/gitButton\";\r\nexport default function aboutState(game) {\r\n\r\n    let textCrawlStyle = { font: '15px Gloria Hallelujah', fill: FONT_COLOR, align: 'left', wordWrap: true, wordWrapWidth: game.width-60};\r\n    let textCrawl = 'About\\n\\n'\r\n                    + 'Original story, art, music, and gameplay developed by libjared, scottyseus, \\njronsomers, and endlessDreamHero  for'\r\n                    + ' Ludum Dare Jam 44.\\n\\n'\r\n                    + 'Check out the links below:\\n\\n';\r\n\r\n    return {\r\n        create: function() {\r\n            StateTransitionButton(game, 60, 30, '< Back', \"Entry\");\r\n            GitButton(game, 60, 250, '> scottyseus on GitHub <', \"https://github.com/scottyseus/due-process\");\r\n            GitButton(game, 60, 290, '> libjared on GitHub <', \"https://github.com/libjared\");\r\n            GitButton(game, 60, 330, \"> jronsomers GitHub\", \"https://github.com/jronSomers\");\r\n            GitButton(game, 60, 370, '> Ludum Dare page <', \"https://ldjam.com/events/ludum-dare/44/subs\");\r\n\r\n            const aboutText = game.add.text(60, 90, textCrawl, textCrawlStyle);\r\n        }\r\n    };\r\n};","export default function assetLoadState(game) {\r\n\r\n    function preload() {\r\n        game.load.image('ground', 'src/assets/ground.png');\r\n        game.load.image('groundTop', 'src/assets/groundTop.png');\r\n        game.load.spritesheet('shrek', 'src/assets/shrek.png', 126/3, 72);\r\n        game.load.spritesheet('donkey', 'src/assets/donkey.png', 192/4, 48);\r\n        game.load.spritesheet('unicorn', 'src/assets/unicorn.png', 92, 82);\r\n        game.load.spritesheet('gnome', 'src/assets/gnome.png', 30, 50);\r\n        game.load.spritesheet('fairy', 'src/assets/fairy.png', 56/4, 17);\r\n        game.load.spritesheet('phoenix', 'src/assets/phoenix.png', 56, 56);\r\n        game.load.spritesheet('imp', 'src/assets/imp.png', 32, 48);\r\n        game.load.spritesheet('goblinWarrior', 'src/assets/goblinWarrior.png', 52, 72);\r\n        game.load.image('tree1', 'src/assets/tree1.png');\r\n        game.load.image('tree2', 'src/assets/tree2.png');\r\n        game.load.image('tree3', 'src/assets/tree3.png');\r\n        game.load.image(\"berryBush\", \"src/assets/berryBush.png\");\r\n        game.load.image(\"store\", \"src/assets/store.png\");\r\n        game.load.image(\"forestBackground\", \"src/assets/forestBackground.png\");\r\n        game.load.image(\"storeBackground\", \"src/assets/storeBackground.png\");\r\n        game.load.spritesheet(\"chop\", \"src/assets/chop.png\", 68, 90);\r\n        game.load.spritesheet(\"bigfist\", \"src/assets/bigfist.png\", 90, 120);\r\n        game.load.spritesheet(\"net\", \"src/assets/net.png\", 110, 108);\r\n        game.load.image(\"sky\", \"src/assets/sky.png\");\r\n        game.load.image(\"heart\", \"src/assets/heart.png\");\r\n        game.load.spritesheet(\"coin\", \"src/assets/coin.png\", 128/8, 16);\r\n        game.load.image(\"swampBubble\", \"src/assets/swampBubble.png\");\r\n        game.load.image(\"fairieDust\", \"src/assets/fairieDust.png\");\r\n        \r\n\r\n        // icons\r\n        game.load.image(\"donkeyIcon\", \"src/assets/donkeyIcon.png\");\r\n        game.load.image(\"fairyIcon\", \"src/assets/fairyIcon.png\");\r\n        game.load.image(\"gnomeIcon\", \"src/assets/gnomeIcon.png\");\r\n        game.load.image(\"unicornIcon\", \"src/assets/unicornIcon.png\");\r\n        game.load.image(\"phoenixIcon\", \"src/assets/phoenixIcon.png\");\r\n        game.load.image(\"impIcon\", \"src/assets/impIcon.png\");\r\n        game.load.image(\"goblinWarriorIcon\", \"src/assets/goblinWarriorIcon.png\");\r\n        game.load.image(\"iconBag\", \"src/assets/iconBag.png\");\r\n        game.load.image(\"iconBagOverlay\", \"src/assets/iconBagOverlay.png\");\r\n\r\n        game.load.image(\"swampBubbleIcon\", \"src/assets/swampBubbleIcon.png\");\r\n        game.load.image(\"fairieDustIcon\", \"src/assets/fairieDustIcon.png\");\r\n        game.load.image(\"bigFistIcon\", \"src/assets/bigFistIcon.png\");\r\n        game.load.image(\"speedIcon\", \"src/assets/speedIcon.png\");\r\n        game.load.image(\"fartJarIcon\", \"src/assets/fartJarIcon.png\");\r\n\r\n        // sounds\r\n        game.load.audio(\"net\", \"src/assets/sound/net.wav\");\r\n        game.load.audio(\"purchase\", \"src/assets/sound/cashreg.wav\");\r\n        game.load.audio(\"denied\", \"src/assets/sound/denied.wav\");\r\n        game.load.audio(\"bubbleGet\", \"src/assets/sound/bubbleget.wav\");\r\n        game.load.audio(\"bubbleBounce\", \"src/assets/sound/bubblebounce.wav\");\r\n        game.load.audio(\"bubblePop\", \"src/assets/sound/bubblePop.wav\");\r\n        game.load.audio(\"fart\", \"src/assets/sound/fart.wav\");\r\n        game.load.audio(\"hit\", \"src/assets/sound/hit.wav\");\r\n        game.load.audio(\"hitBig\", \"src/assets/sound/hit2.wav\");\r\n        game.load.audio(\"loserFart\", \"src/assets/sound/loserFart.wav\"); \r\n    }\r\n\r\n    function create() {\r\n        game.state.start('Entry');\r\n    }\r\n\r\n    return {preload, create};\r\n\r\n}","const CREATURE_NAMES = {\r\n    DONKEY: \"donkey\",\r\n    FAIRY: \"fairy\",\r\n    GNOME: \"gnome\",\r\n    UNICORN: \"unicorn\",\r\n    PHOENIX: \"phoenix\",\r\n    IMP: \"imp\",\r\n    GOBLIN: \"goblinWarrior\"\r\n}\r\n\r\nlet BASE_ENEMY = {\r\n    turnProb: 0.02,\r\n    knockbackVelocityX: 200,\r\n    knockbackVelocityY: -200,\r\n    flier: false,\r\n    altitude: 0, // height above ground level\r\n    minDistance: 250, // minimum spawn distance from store\r\n};\r\n\r\nlet DONKEY = {\r\n    ...BASE_ENEMY,\r\n    name: CREATURE_NAMES.DONKEY,\r\n    price: 20,\r\n    baseSpeed: 200,\r\n    baseHealth: 3,\r\n    baseSpawnRate: 3600,\r\n    minDistance: 1200\r\n};\r\n\r\nlet FAIRY = {\r\n    ...BASE_ENEMY,\r\n    name: CREATURE_NAMES.FAIRY,\r\n    price: 10,\r\n    baseSpeed: 60,\r\n    baseHealth: 1,\r\n    baseSpawnRate: 2400,\r\n    flier: true,\r\n    altitude: 100,\r\n    knockbackVelocityY: 0,\r\n};\r\n\r\nlet UNICORN = {\r\n    ...BASE_ENEMY,\r\n    name: CREATURE_NAMES.UNICORN,\r\n    price: 40,\r\n    baseSpeed: 150,\r\n    baseHealth: 3,\r\n    baseSpawnRate: 4200,\r\n    minDistance: 2400\r\n};\r\n\r\nlet GNOME = {\r\n    ...BASE_ENEMY,\r\n    name: CREATURE_NAMES.GNOME,\r\n    price: 20,\r\n    baseSpeed: 100,\r\n    baseHealth: 2,\r\n    baseSpawnRate: 3600,\r\n    minDistance: 1200\r\n};\r\n\r\nlet PHOENIX = {\r\n    ...BASE_ENEMY,\r\n    name: CREATURE_NAMES.PHOENIX,\r\n    price: 60,\r\n    baseSpeed: 125,\r\n    baseHealth: 2,\r\n    baseSpawnRate: 4200,\r\n    altitude: 400,\r\n    flier: true,\r\n};\r\n\r\nlet IMP = {\r\n    ...BASE_ENEMY,\r\n    name: CREATURE_NAMES.IMP,\r\n    price: 10,\r\n    baseSpeed: 125,\r\n    baseHealth: 1,\r\n    baseSpawnRate: 2400,\r\n};\r\n\r\nlet GOBLIN = {\r\n    ...BASE_ENEMY,\r\n    name: CREATURE_NAMES.GOBLIN,\r\n    price: 40,\r\n    baseSpeed: 85,\r\n    baseHealth: 4,\r\n    baseSpawnRate: 4200,\r\n    minDistance: 2400\r\n};\r\n\r\nconst CREATURE_LIST = [DONKEY, FAIRY, GNOME, UNICORN, PHOENIX, IMP, GOBLIN];\r\nconst CREATURE_NAME_MAP = {};\r\n\r\nCREATURE_LIST.forEach((creature) => {\r\n    CREATURE_NAME_MAP[creature.name] = creature;\r\n});\r\n\r\nconst CreatureConstants = {\r\n    CREATURE_NAMES,\r\n    DONKEY,\r\n    UNICORN,\r\n    FAIRY,\r\n    GNOME,\r\n    PHOENIX,\r\n    IMP,\r\n    GOBLIN,\r\n    CREATURE_LIST,\r\n    CREATURE_NAME_MAP\r\n};\r\n\r\nexport default CreatureConstants;","import StateTransitionButton from \"../common/StateTransitionButton\";\r\nimport TitleText from '../common/TitleText';\r\nimport playState from \"./play-state\";\r\n\r\nconst TITLE_Y = 70;\r\n\r\nexport default function entryState(game) {\r\n    return {\r\n        preload: function() {\r\n        },\r\n\r\n        init: function() {\r\n        },\r\n \r\n        create: function() {\r\n            TitleText(game, game.width / 2, TITLE_Y, \"Shrek Unknown's\\nBattleSwamps\");\r\n\r\n            StateTransitionButton(game, 30,TITLE_Y + 72, \"Play\", \"Instructions\");\r\n            StateTransitionButton(game, 30, TITLE_Y + 72 * 2,'About', \"About\");\r\n        },\r\n\r\n        update: function() {\r\n            \r\n        }\r\n    }\r\n};","export default function fontLoadState(game) {\r\n\r\n    window.fontsLoaded = function() {\r\n        game.state.start('AssetLoad');\r\n    }\r\n\r\n    return {\r\n        preload: function() {\r\n            //  The Google WebFont Loader will look for this object, so create it before loading the script.\r\n            global.WebFontConfig = {\r\n\r\n                //  'active' means all requested fonts have finished loading\r\n                //  We set a 1 second delay before calling 'createText'.\r\n                //  For some reason if we don't the browser cannot render the text the first time it's created.\r\n                active: function() {\r\n                    game.time.events.add(Phaser.Timer.SECOND, fontsLoaded, this);\r\n                },\r\n\r\n                //  The Google Fonts we want to load (specify as many as you like in the array)\r\n                google: {\r\n                    families: ['Gloria Hallelujah']\r\n                }\r\n            };\r\n\r\n            //  Load the Google WebFont Loader script\r\n            game.load.script('webfont', '//ajax.googleapis.com/ajax/libs/webfont/1.4.7/webfont.js');\r\n        }\r\n    };\r\n\r\n}","import { FONT_COLOR } from \"../common/constants\";\r\nimport StateTransitionButton from '../common/StateTransitionButton';\r\nimport TitleText from \"../common/TitleText\";\r\nexport default function gameOverState(game) {\r\n\r\n    function create() {\r\n        TitleText(game, game.width/2, game.width/2, 'Game Over');\r\n        StateTransitionButton(game, 60, 30, '< Back', \"Entry\");\r\n    }\r\n    \r\n    return {create};\r\n}","import StateTransitionButton from \"../common/StateTransitionButton\";\r\nimport {FONT_COLOR, ButtonStyle, DescriptionStyle} from \"../common/constants\";\r\nexport default function instructionsState(game) {\r\n    let instructionsText = '\\n\\n Shrek needs more gold to buy back his swamp!\\n\\n'\r\n                         + 'The Royal Guards are paying a pretty penny in exchange\\n for mythical Creatures...\\n\\n'\r\n                         + \"What's an Orge to do? Go to the would-be-king to talk?\\n\\n...Nah rounding up these things seems way easier.\\n\\n\";\r\n    return {\r\n        create: function () {\r\n            StateTransitionButton(game, 60, 30, '< Back', \"Entry\");\r\n            let nextButton = StateTransitionButton(game, game.width - 60, 30, 'Next >', \"Instructions2\");\r\n            nextButton.anchor.setTo(1, 0);\r\n            let generatedText = game.add.text(60, 90, instructionsText, DescriptionStyle);\r\n        }\r\n    };\r\n}","import StateTransitionButton from \"../common/StateTransitionButton\";\r\nimport {FONT_COLOR, ButtonStyle, DescriptionStyle} from \"../common/constants\";\r\nexport default function instructionsState2(game) {\r\n\r\n    let donkeySprite;\r\n    let frame = 0;\r\n    let keyDescriptionMap = {\r\n        'ARROW KEYS': 'Movement*.',\r\n        'A': 'Attack creatures.',\r\n        'S': 'Capture creatures.',\r\n        'SPACEBAR': 'Open shoppe menu**.'\r\n    };\r\n\r\n\r\n    let instructionsText = '*The DOWN key performs a bounce only with the Swamp Bubble\\n  Power-up enabled.\\n**Shrek needs to be standing at the Shoppe.';\r\n    return {\r\n        create: function () {\r\n            StateTransitionButton(game, 60, 30, '< Back', \"Instructions\");\r\n            let nextButton = StateTransitionButton(game, game.width - 60, 30, 'Next >', \"Instructions3\");\r\n            nextButton.anchor.setTo(1, 0);\r\n\r\n            game.add.text(60, 90, \"CONTROLS:\", DescriptionStyle);\r\n            Object.keys(keyDescriptionMap).forEach((key, i) => {\r\n                game.add.text(60, 120 + (i * 18), key, DescriptionStyle);\r\n                game.add.text(240, 120 + (i * 18), keyDescriptionMap[key], DescriptionStyle);\r\n            });\r\n            game.add.text(60, 230, instructionsText, DescriptionStyle);\r\n\r\n            game.add.text(60, 320, \"COMBAT:\", DescriptionStyle);\r\n            let donkeyY = 350;\r\n            donkeySprite = game.add.sprite(90, donkeyY, \"donkey\");\r\n            donkeySprite.animations.add(\"donkeyWalk\", [0, 1, 2, 0], 12, true);\r\n            game.add.text(200, donkeyY, \"Attacking creatures damages them. Critically\\n\" +\r\n                                        \"damaged creatures can be captured with the\\n\" +\r\n                                        \"net. Creatures flash when critically damaged.\\n\" +\r\n                                        \"Hitting a critically damaged\\n\" +\r\n                                        \"creature destroys it.\", DescriptionStyle);\r\n        },\r\n        update: function() {\r\n            ++frame;\r\n            donkeySprite.alpha = frame % 4 >= 2 ? 0.1 : 1;\r\n            if(frame > 2000000000) {\r\n                frame = 0;\r\n            }\r\n        }\r\n    };\r\n}","import StateTransitionButton from \"../common/StateTransitionButton\";\r\nimport {FONT_COLOR, ButtonStyle, DescriptionStyle} from \"../common/constants\";\r\nimport playState from \"./play-state\";\r\nimport CreatureConstants from \"./creatureConstants\";\r\nexport default function instructionsState3(game) {\r\n    return {\r\n        create: function () {\r\n            StateTransitionButton(game, 60, 30, '< Back', \"Instructions2\");\r\n            game.state.add('Play', playState(game));\r\n            let nextButton = StateTransitionButton(game, game.width - 60, 30, 'Next >', \"Instructions4\");\r\n            nextButton.anchor.setTo(1, 0);\r\n            \r\n\r\n            let BAG_X = 60;\r\n            let BAG_Y = 90;\r\n\r\n            let bagSprite = game.add.sprite(BAG_X,BAG_Y,\"iconBag\");\r\n            bagSprite.alpha = 0.5;\r\n            let bagOverlaySprite = game.add.sprite(BAG_X,BAG_Y,\"iconBagOverlay\");\r\n\r\n            let row = 0;\r\n            CreatureConstants.CREATURE_LIST.forEach((creatureProps) => {\r\n                let creatureName = creatureProps.name;\r\n                let y = BAG_Y + bagSprite.height - 16 - (row * 23);\r\n                let x = BAG_X + 6;\r\n                let icon = game.add.image(x,y, creatureName + 'Icon');\r\n                let text = game.add.text(x + 16, y, ' x ' + 0, {font: 'Gloria Hallelujah', fill: FONT_COLOR, align: 'left', fontSize: '12px'});\r\n                text.anchor.setTo(0, 0.5);\r\n                text.fixedToCamera = true;\r\n                icon.anchor.setTo(0, 0.5);\r\n                ++row;\r\n            });\r\n            game.add.text(180, 180, \"The bag displays the number of creatures yet\\nto be sold.\", DescriptionStyle);\r\n\r\n            let COIN_Y = 340\r\n            let COIN_X = 60;\r\n            let coinSprite = game.add.sprite(COIN_X, COIN_Y, \"coin\");\r\n            coinSprite.animations.add('rotate', [0,1,2,3,4,5,6,7], 14, true);\r\n            coinSprite.animations.play('rotate');\r\n            game.add.text(COIN_X + 20, COIN_Y, ' x ' + 0, {font: 'Gloria Hallelujah', fill: FONT_COLOR, align: 'left', fontSize: '12px'});\r\n            game.add.text(180, COIN_Y, \"The coin indicates your current amount of gold.\", DescriptionStyle);\r\n\r\n            let HEART_Y = 400;\r\n            game.add.sprite(60, HEART_Y, 'heart');\r\n            game.add.text(180, HEART_Y, \"Your health is equal to the number of hearts.\", DescriptionStyle);\r\n        }\r\n    };\r\n}","import StateTransitionButton from \"../common/StateTransitionButton\";\r\nimport {ITEM_MAP, FONT_COLOR, ButtonStyle, DescriptionStyle} from \"../common/constants\";\r\nimport playState from \"./play-state\";\r\nimport CreatureConstants from \"./creatureConstants\";\r\nexport default function instructionsState3(game) {\r\n\r\n    return {\r\n        create: function () {\r\n            StateTransitionButton(game, 60, 30, '< Back', \"Instructions3\");\r\n            game.state.add('Play', playState(game));\r\n            let nextButton = StateTransitionButton(game, game.width - 60, 30, 'Play >', \"Play\");\r\n            nextButton.anchor.setTo(1, 0);\r\n            \r\n\r\n            let BAG_X = 60;\r\n            let BAG_Y = 90;\r\n\r\n            let storeSprite = game.add.sprite(BAG_X,BAG_Y,\"store\");\r\n            game.add.text(200, BAG_Y + storeSprite.height / 2, \"Press the space bar while standing in front\\n\" +\r\n                \"of the store to buy items and\\nsell creatures.\", DescriptionStyle);\r\n\r\n            let col = 0;\r\n            let ICON_X = 90;\r\n            let ICON_Y = BAG_Y + storeSprite.height +  80;\r\n            Object.keys(ITEM_MAP).forEach((itemName) => {\r\n                let itemProps = ITEM_MAP[itemName];\r\n                let y = ICON_Y;\r\n                let x = ICON_X + 18 * col;\r\n                let icon = game.add.image(x,y, itemProps.icon);\r\n                ++col;\r\n            });\r\n            game.add.text(200, ICON_Y, \"These icons at the top of your screen\\nindicate owned items. Except for Swamp Bubble,\\nall items can only be bought once.\", DescriptionStyle);\r\n        }\r\n    };\r\n}","import {ITEM_MAP, FONT_COLOR, MARGIN, DescriptionStyle} from \"../common/constants\";\r\nimport GenericButton from \"../common/GenericButton\";\r\nimport ItemButton from \"../common/ItemButton\";\r\nimport StoreMenu from \"./storeMenu\";\r\nimport CreatureConstants from \"./creatureConstants\";\r\n\r\nexport default function playState(game) {\r\n\r\n    const GRAVITY = 600*2;\r\n    const BOUNCE = 0;\r\n\r\n    const GOLD_TO_WIN = 800;\r\n    let hasBoughtBubble = false;\r\n\r\n    // locations\r\n    let GROUND_LEVEL;\r\n    let HEALTH_BAR_X = 10;\r\n    let HEALTH_BAR_Y = 10;\r\n    let COIN_STAT_X = 224;\r\n    let COIN_STAT_Y = 10;\r\n    let STORE_X;\r\n    let STORE_Y;\r\n    let STORE_RADIUS = 180;\r\n\r\n    let BAG_X = game.width - 82;\r\n    let BAG_Y = 10;\r\n\r\n    let ITEM_X = 324;\r\n    let ITEM_Y = 10;\r\n\r\n    // game stats\r\n    let level = 0;\r\n\r\n    // groups\r\n    let cursors;\r\n    let groundPlatform;\r\n\r\n    // characters\r\n    let shrek, swampBubble;\r\n    const SHREK_BASE_SPEED = 150;\r\n    const SHREK_BASE_JUMP_SPEED = 525;\r\n    const SHREK_KNOCKBACK_TIME = 45;\r\n    const SHREK_KNOCKBACK_SPEED = 200;\r\n    let actionSprites = {};\r\n    let actionArmFromRight = 14; // distance from shoulder socket to rightside of sprite frame\r\n    let actionSpriteProps = {'chop': {\r\n            speed: 30,\r\n            collisionCheckFunction: () => { checkChopCollision(false); }\r\n        }, \r\n        'net': {\r\n            speed: 12,\r\n            collisionCheckFunction: checkNetCollision\r\n        }, \r\n        'bigfist': {\r\n            speed: 18,\r\n            collisionCheckFunction: () => { checkChopCollision(true); }\r\n        }\r\n    };\r\n    let coinIcon, coinText, heartGroup, iconBag;\r\n    let creatureCountText = {};\r\n    let isShrekActing = false;\r\n    let doubleJumped = false;\r\n    let jumpKeyWasPressed = false;\r\n\r\n    let storeUI;\r\n    let choiceLabel;\r\n    let enemies = [];\r\n    let enemiesSold = 0;\r\n    let timeSinceEnemySpawn = {};\r\n    const CAPTURABLE_DURATION = 360;\r\n\r\n    let storePurchaseSound;\r\n    let storePurchaseDenied;\r\n    let netCaptureSound;\r\n    let bubbleGetSound;\r\n    let bubbleBounceSound;\r\n    let bubblePopSound;\r\n    let fartSound;\r\n    let hitSound;\r\n    let hitBigSound;\r\n    let loserFartSound;\r\n\r\n    // flags\r\n    let isShrekFacingLeft = true;\r\n    let bouncing = false;\r\n    let isStoreOpen = false;\r\n\r\n    // player stats\r\n    let gold = 0;\r\n    let inventory = {};\r\n    let inventoryDisplay = {};\r\n    let capturedCreatures = [];\r\n    let creatureCounts = {};\r\n    let health = 10;\r\n\r\n    // keys\r\n    let SPACE_BAR;\r\n    let ACTION_KEY;\r\n    let NET_KEY;\r\n\r\n    let emitterManager;\r\n    let fairieDustEmitter;\r\n\r\n    function preload() {\r\n        \r\n    }\r\n    \r\n    function create() {\r\n        GROUND_LEVEL = game.world.height - 64;\r\n        STORE_X = 640 * 5 + 450;\r\n        STORE_Y = GROUND_LEVEL - 64;\r\n\r\n        game.world.setBounds(0, 0, 6400, 512);\r\n        game.stage.disableVisibilityChange = true;\r\n        cursors = game.input.keyboard.createCursorKeys();\r\n        addBackgroundScenery();\r\n        level = getLevelFromEnemiesSold();\r\n        addEnemies();\r\n        addShrek();\r\n        addActionSprites();\r\n\r\n        //  We're going to be using physics, so enable the Arcade Physics system\r\n        game.physics.startSystem(Phaser.Physics.ARCADE);\r\n        game.camera.follow(shrek, Phaser.Camera.FOLLOW_LOCKON);\r\n\r\n        CreatureConstants.CREATURE_LIST.forEach((creatureProps) => {\r\n            creatureCounts[creatureProps.name] = 0;\r\n        });\r\n        // addForegroundScenery();\r\n        addStatOverlay();\r\n\r\n        SPACE_BAR = game.input.keyboard.addKey(Phaser.Keyboard.SPACEBAR);\r\n        SPACE_BAR.onUp.add(toggleStore, this);\r\n\r\n        ACTION_KEY = game.input.keyboard.addKey(Phaser.Keyboard.A);\r\n        ACTION_KEY.onUp.add(() => {\r\n            if (inventory[\"Big Onion\"] === 1)\r\n                animateAction('bigfist');\r\n            else\r\n                animateAction('chop');\r\n        }, this);\r\n        NET_KEY = game.input.keyboard.addKey(Phaser.Keyboard.S);\r\n        NET_KEY.onUp.add(() => {animateAction('net')}, this);\r\n        createInventory();\r\n        storePurchaseSound = game.add.audio(\"purchase\");\r\n        storePurchaseDenied = game.add.audio(\"denied\");\r\n        netCaptureSound = game.add.audio(\"net\");\r\n        bubbleGetSound = game.add.audio(\"bubbleGet\");\r\n        bubbleBounceSound = game.add.audio(\"bubbleBounce\");\r\n        bubblePopSound = game.add.audio(\"bubblePop\");\r\n        fartSound = game.add.audio(\"fart\");\r\n        hitSound = game.add.audio(\"hit\");\r\n        hitBigSound = game.add.audio(\"hitBig\");\r\n        loserFartSound = game.add.audio(\"loserFart\");\r\n\r\n        initSpawnTimeMap();\r\n    }\r\n    \r\n    \r\n    function update() {\r\n        level = getLevelFromEnemiesSold();\r\n        updateShrek();\r\n        updateEnemies();\r\n        updateShrekAction();\r\n        updateStatOverlay();\r\n    }\r\n\r\n    function updateShrekAction() {\r\n        Object.keys(actionSpriteProps).forEach((actionName) => {\r\n            const sprite = actionSprites[actionName].sprite;\r\n            if (sprite.alpha > 0.5) {\r\n                actionSpriteProps[actionName].collisionCheckFunction();\r\n            }    \r\n        });\r\n\r\n    }\r\n\r\n    function createInventory() {\r\n        const items = Object.keys(ITEM_MAP);\r\n        for (let i = 0; i < items.length; i++){ \r\n            inventory[items[i]] = 0;\r\n        }\r\n    }\r\n\r\n    function addBackgroundScenery() {\r\n\r\n        //  The groundPlatform group contains the ground and the 2 ledges we can jump on\r\n        groundPlatform = game.add.group();\r\n            \r\n        //  We will enable physics for any object that is created in this group\r\n        if (groundPlatform) {\r\n            groundPlatform.enableBody = true;\r\n        }\r\n\r\n\r\n        // Here we create the ground.\r\n        for(var i = 0; i < 65; ++i) {\r\n            var x = i * 256;\r\n            var y = GROUND_LEVEL;\r\n            var ground = groundPlatform.create(x, y, 'ground');\r\n            game.add.sprite(x, y - 32, 'groundTop');\r\n            ground.body.immovable = true;\r\n        }\r\n\r\n        // add the forest background\r\n        for(var i = 0; i < 10; ++i) {\r\n            var x = i * 640;\r\n            var y = game.world.height - 64 - 12- 320;\r\n            game.add.sprite(x, 0, 'sky');\r\n            if(i == 5) {\r\n                game.add.sprite(x, y, 'storeBackground');\r\n            } else {\r\n                game.add.sprite(x, y, 'forestBackground');\r\n            }\r\n        }\r\n        \r\n        let store = game.add.sprite(STORE_X, STORE_Y, \"store\");\r\n        store.scale.setTo(2);\r\n        store.anchor.setTo(0.5, 0.5);\r\n    }\r\n\r\n    function addShrek() {\r\n        shrek = game.add.sprite(0,0,'shrek');\r\n        shrek.anchor.setTo(0.5, 1);\r\n        shrek.x = STORE_X;\r\n        shrek.y = GROUND_LEVEL;\r\n        game.physics.arcade.enable(shrek);\r\n        shrek.body.bounce.y = BOUNCE;\r\n        shrek.body.gravity.y = GRAVITY;\r\n        shrek.body.collideWorldBounds = true;\r\n        shrek.animations.add('shrekWalk', [0, 1, 2], 10, false);\r\n        shrek.hitTimer = 0;\r\n\r\n        addSwampBubble();\r\n    }\r\n\r\n    function addSwampBubble() {\r\n        swampBubble = game.add.image(shrek.x, shrek.y, \"swampBubble\");\r\n        swampBubble.alpha = 0;\r\n        swampBubble.anchor.setTo(0.5, 1);\r\n    }\r\n\r\n    function addActionSprites() {\r\n\r\n        Object.keys(actionSpriteProps).forEach((spriteName) => {\r\n            let spriteProps = actionSpriteProps[spriteName];\r\n            let actionSprite = game.add.sprite(0, 0, spriteName);\r\n            actionSprite.alpha = 0;\r\n            let animationName = spriteName + 'Anim';\r\n            let actionAnim = actionSprite.animations.add(animationName, [0, 1, 2, 2, 2], spriteProps.speed, false);\r\n            actionAnim.onComplete.add(() => {\r\n                actionSprite.alpha = 0; \r\n                actionSprites[spriteName].collidedEnemies = []\r\n            }, this);\r\n            actionSprites[spriteName] = {\r\n                sprite: actionSprite,\r\n                animationName: animationName,\r\n                name: spriteName,\r\n                collidedEnemies: []\r\n            };\r\n        });\r\n    }\r\n\r\n    function addEnemies() {\r\n        for (let i = 0; i < 10; i++) {\r\n            spawnEnemy(CreatureConstants.FAIRY);\r\n            spawnEnemy(CreatureConstants.IMP);\r\n        }\r\n    }\r\n\r\n    function initSpawnTimeMap() {\r\n        CreatureConstants.CREATURE_LIST.forEach((creatureProps) => {\r\n            timeSinceEnemySpawn[creatureProps.name] = 0;\r\n        });\r\n    }\r\n\r\n    function spawnEnemy(enemyTemplate) {\r\n        let enemy = game.add.sprite(0, 0, enemyTemplate.name);\r\n\r\n        enemy.anchor.setTo(0.5, 1);\r\n\r\n        enemy.x = randomSpawnX(enemyTemplate);\r\n        enemy.y = GROUND_LEVEL - enemyTemplate.altitude;\r\n        game.physics.arcade.enable(enemy);\r\n        enemy.body.bounce.y = BOUNCE;\r\n        enemy.body.gravity.y = enemyTemplate.flier ? 0 : GRAVITY;\r\n        enemy.body.collideWorldBounds = true;\r\n        enemy.animations.add(enemyTemplate.name + 'Walk', [0, 1, 2, 0], 12, false);\r\n        enemy.direction = -1; // custom state\r\n        enemy.health = enemyTemplate.baseHealth + level;\r\n        enemy.name = enemyTemplate.name\r\n        enemy.template = enemyTemplate;\r\n        enemy.pauseTimer = 0;\r\n        enemy.capturableTimer = 0;\r\n        enemies.push(enemy);\r\n    }\r\n\r\n    function randomSpawnX(enemyTemplate) {\r\n        let rand = Math.random();\r\n        let denormalized = rand * ((game.world.width /2) - STORE_RADIUS - enemyTemplate.minDistance - 250);\r\n        let spawnX = rand > 0.5 ? denormalized : game.world.width - denormalized;\r\n        return spawnX\r\n    }\r\n\r\n    function addForegroundScenery() {\r\n        for(var i = 0; i < 12; ++i) {\r\n            let rand = Math.random();\r\n            let imageName;\r\n            if(rand < 0.33) {\r\n                imageName = 'tree1';\r\n            } else if(rand < 0.66) {\r\n                imageName = 'tree2';\r\n            } else {\r\n                imageName = 'tree3';\r\n            }\r\n            var n = new Date().getMilliseconds();\r\n            \r\n            let treeX, treeY;\r\n            treeX = (i*6400/40)\r\n\r\n            if(n % 2 == 0) {\r\n                treeX -= 13;\r\n                treeY = GROUND_LEVEL + 35;\r\n            } else {\r\n                treeX += 13;\r\n                treeY = GROUND_LEVEL + 45;\r\n            }\r\n\r\n            let treeImage = game.add.image(treeX, treeY, imageName);\r\n            treeImage.alpha = 0.75;\r\n            treeImage.anchor.setTo(0.5, 1);\r\n        }\r\n        game.add.sprite(150, game.world.height - 215, 'tree1');\r\n        game.add.sprite(400, game.world.height - 115, \"berryBush\");\r\n        game.add.sprite(500, game.world.height - 270, 'tree2');\r\n        game.add.sprite(800, game.world.height - 284, 'tree3');\r\n        game.add.sprite(100, game.world.height - 125, \"berryBush\");\r\n    }\r\n\r\n    function toggleStore() {\r\n        if(isStoreOpen) {\r\n            storeUI.destroy();\r\n            isStoreOpen = false;\r\n            return;\r\n        }\r\n        if (shrek.x <= STORE_X + STORE_RADIUS && shrek.x >= STORE_X - STORE_RADIUS && !isStoreOpen) {\r\n            createStore();\r\n            isStoreOpen = true;\r\n        }\r\n    \r\n    }\r\n\r\n    function createStore() {\r\n        storeUI = game.add.group();\r\n\r\n        // Then add the menu\r\n        let menuContainer = StoreMenu(game);\r\n        storeUI.add(menuContainer);\r\n\r\n        let sellButtonCoords = camera_izeCoordinates(game.width - (MARGIN * 2),\r\n            game.height - (MARGIN * 2));\r\n        let sellButton = GenericButton(game, sellButtonCoords.x, \r\n            sellButtonCoords.y, 'SELL CREATURES', () => {\r\n                capturedCreatures.forEach((creature, i) => {\r\n                    let creatureName = creature.name;\r\n                    gold += creature.price;\r\n                    enemiesSold++;\r\n                    delete capturedCreatures[i];\r\n                    storePurchaseSound.play();\r\n                    creatureCounts[creatureName] = 0;\r\n                    if(gold >= GOLD_TO_WIN && hasBoughtAllItems()) {\r\n                        game.state.start(\"Victory\");\r\n                    }\r\n                });\r\n                capturedCreatures = [];\r\n            });\r\n        sellButton.anchor.setTo(1, 0.5);\r\n        storeUI.add(sellButton);\r\n\r\n        let closeButtonCoords = camera_izeCoordinates(game.width - (MARGIN * 2), MARGIN * 2);\r\n        let closeButton = GenericButton(game, closeButtonCoords.x, \r\n            closeButtonCoords.y-32, 'X', () => {storeUI.destroy(); isStoreOpen = false;});\r\n        closeButton.anchor.setTo(0, 0);\r\n        storeUI.add(closeButton);\r\n        let y = MARGIN;\r\n        const items = Object.keys(ITEM_MAP);\r\n        let coords = camera_izeCoordinates(MARGIN * 2, y);\r\n        for(var i = 0; i < items.length; ++i) {\r\n            let itemName = items[i];\r\n            const itemDesc = ITEM_MAP[items[i]].descr;\r\n            let itemCost = ITEM_MAP[items[i]].cost;\r\n            let itemButton = ItemButton(game, coords.x, coords.y, itemName, () => {\r\n                // ensure player has enough currency to buy this item\r\n                if (validatePurchase(ITEM_MAP[itemName], itemName)) {\r\n                    inventory[itemName]+= 1;\r\n                    gold-= ITEM_MAP[itemName].cost;\r\n                    if (itemName === \"Swamp Bubble\") {\r\n                        bubbleGetSound.play();\r\n                        hasBoughtBubble = true;\r\n                    } else {\r\n                        storePurchaseSound.play();\r\n                    }\r\n                } else {\r\n                    storePurchaseDenied.play();\r\n                }\r\n            });\r\n            storeUI.add(itemButton);\r\n\r\n            let itemDescr = game.add.text(coords.x+25, coords.y+45, itemDesc + \" ($\" + itemCost  + \")\", DescriptionStyle);\r\n            storeUI.add(itemDescr);\r\n            coords.y += (MARGIN*3);\r\n        }\r\n    }\r\n\r\n    function validatePurchase(item, itemName) {\r\n        return item && item.cost <= gold && inventory[itemName] === 0;\r\n    }\r\n\r\n    function addStatOverlay() {\r\n        heartGroup = game.add.group();\r\n\r\n        // add coins\r\n        let coinCoords = camera_izeCoordinates(COIN_STAT_X, COIN_STAT_Y);\r\n        coinIcon = game.add.sprite(coinCoords.x, coinCoords.y,'coin');\r\n        coinIcon.animations.add('rotate', [0,1,2,3,4,5,6,7], 14, true);\r\n        coinIcon.animations.play('rotate');\r\n        coinIcon.anchor.setTo(0,0);\r\n        coinIcon.fixedToCamera = true;\r\n        \r\n        coinText = game.add.text(coinCoords.x + 20, coinCoords.y, ' x ' + gold + \"/\" + GOLD_TO_WIN, {font: 'Gloria Hallelujah', fill: FONT_COLOR, align: 'left', fontSize: '12px'});\r\n        coinText.fixedToCamera = true;\r\n\r\n        // add hearts\r\n        for(let i = 0; i < health; ++i) {\r\n            let coords = camera_izeCoordinates(HEALTH_BAR_X + 18 * i, HEALTH_BAR_Y);\r\n            let heart = game.add.sprite(coords.x, coords.y, 'heart');\r\n            heart.fixedToCamera = true;\r\n            heart.anchor.set(0,0);\r\n            heartGroup.add(heart);\r\n        }\r\n\r\n        // add captured creatures\r\n        let bagCoords = camera_izeCoordinates(BAG_X, BAG_Y)\r\n        iconBag = game.add.image(bagCoords.x, bagCoords.y, \"iconBag\");\r\n        iconBag.anchor.setTo(0,0);\r\n        iconBag.fixedToCamera = true;\r\n        iconBag.alpha = 0.7\r\n        let iconBagOverlay = game.add.image(bagCoords.x, bagCoords.y, \"iconBagOverlay\");\r\n        iconBagOverlay.anchor.setTo(0,0);\r\n        iconBagOverlay.fixedToCamera = true;\r\n        \r\n        let row = 0;\r\n        CreatureConstants.CREATURE_LIST.forEach((creatureProps) => {\r\n            let creatureName = creatureProps.name;\r\n            let y = BAG_Y + iconBag.height - 16 - (row * 23);\r\n            let x = BAG_X + 6;\r\n            let icon = game.add.image(x,y, creatureName + 'Icon');\r\n            let text = game.add.text(x + 16, y, ' x ' + creatureCounts[creatureName], {font: 'Gloria Hallelujah', fill: FONT_COLOR, align: 'left', fontSize: '12px'});\r\n            text.anchor.setTo(0, 0.5);\r\n            text.fixedToCamera = true;\r\n            creatureCountText[creatureName] = text;\r\n            icon.fixedToCamera = true;\r\n            icon.anchor.setTo(0, 0.5);\r\n            ++row;\r\n        });\r\n        \r\n    }\r\n\r\n    function updateStatOverlay() {\r\n        coinText.x = COIN_STAT_X + 20;\r\n        coinText.y = COIN_STAT_Y.y; \r\n        coinText.text = ' x ' + gold + '/' + GOLD_TO_WIN;\r\n\r\n        for(let i = 0; i < heartGroup.children.length; ++i) {\r\n            let heart = heartGroup.getChildAt(i);\r\n            if(i < health) {\r\n                heart.visible = true\r\n            } else {\r\n                heart.visible = false;\r\n            }\r\n        }\r\n\r\n        // creature count text\r\n        Object.keys(creatureCountText).forEach((creatureName) => {\r\n            creatureCountText[creatureName].text = ' x ' + creatureCounts[creatureName];\r\n        }); \r\n\r\n        // items\r\n        Object.keys(inventory).forEach((itemName) => {\r\n            if(inventory[itemName] < 1 || inventoryDisplay[itemName] || itemName === \"Swamp Bubble\") {\r\n                return;\r\n            }\r\n            let col = Object.keys(inventoryDisplay).length;\r\n            let itemIcon = game.add.image(ITEM_X + 18*col,ITEM_Y,ITEM_MAP[itemName].icon);\r\n            itemIcon.fixedToCamera = true;\r\n            itemIcon.anchor.setTo(0,0);\r\n            inventoryDisplay[itemName] = itemIcon;\r\n        });\r\n    }\r\n    \r\n    function updateShrek() {\r\n        if(inventory[\"Swamp Bubble\"] > 0) {\r\n            swampBubble.alpha = 0.6;\r\n        } else {\r\n            swampBubble.alpha = 0;\r\n        }\r\n\r\n        if(inventory[\"Fairie Dust\"] && !fairieDustEmitter) {\r\n            fairieDustEmitter = game.add.emitter(shrek.x, shrek.y-50, 200, 200);\r\n            fairieDustEmitter.makeParticles(\"fairieDust\");\r\n            fairieDustEmitter.flow(1000, 300, 1, -1);\r\n            fairieDustEmitter.alpha = .35;\r\n        }\r\n\r\n        if(isStoreOpen) {\r\n            game.physics.arcade.collide(shrek, groundPlatform);\r\n            shrek.body.velocity.x = 0;\r\n            return;\r\n        }\r\n        reanchorActionSprites();\r\n        if (shrek.hitTimer > 0) {\r\n            game.physics.arcade.collide(shrek, groundPlatform);\r\n            updateKnockedBackSprite(shrek);\r\n        } else {\r\n            updateShrekNormal();\r\n        }\r\n        swampBubble.x = shrek.x;\r\n        swampBubble.y = shrek.y;\r\n\r\n        if (fairieDustEmitter) {\r\n            fairieDustEmitter.x = shrek.x;\r\n            fairieDustEmitter.y = shrek.y-75;\r\n        }\r\n    }\r\n\r\n    function getShrekRunSpeed() {\r\n        return inventory[\"Speed\"] ? SHREK_BASE_SPEED * 2 : SHREK_BASE_SPEED;\r\n    }\r\n    \r\n\r\n\r\n    function updateShrekNormal() {\r\n\r\n        var isOnGround = game.physics.arcade.collide(shrek, groundPlatform);\r\n        //  Reset the players velocity (movement)\r\n        shrek.body.velocity.x = 0;\r\n        shrek.body.bounce.y = bouncing ? 0.7 : BOUNCE;\r\n\r\n        if (cursors.left.isDown)\r\n        {\r\n            if(!isShrekFacingLeft) {\r\n                flipShrek(); // flips shrek about the y axis\r\n                isShrekFacingLeft = true;\r\n            }\r\n            //  Move to the left\r\n            shrek.body.velocity.x = -getShrekRunSpeed();\r\n            shrek.animations.play('shrekWalk');\r\n        }\r\n        else if (cursors.right.isDown)\r\n        {\r\n            if(isShrekFacingLeft) {\r\n                flipShrek(); // flips shrek about the y axis\r\n                isShrekFacingLeft = false;\r\n            }\r\n            //  Move to the right\r\n            shrek.body.velocity.x = getShrekRunSpeed();\r\n            shrek.animations.play('shrekWalk');\r\n        } else {\r\n            shrek.frame = 0;\r\n        }\r\n\r\n        //  Allow the shrek to jump if they are touching the ground.\r\n        if (cursors.up.isDown) {\r\n            if(shrek.body.touching.down && isOnGround) {\r\n                shrek.body.velocity.y = -SHREK_BASE_JUMP_SPEED;\r\n            } else if(!doubleJumped && !jumpKeyWasPressed && inventory[\"Fart in a Jar\"] > 0) {\r\n                shrek.body.velocity.y = -SHREK_BASE_JUMP_SPEED;\r\n                doubleJumped = true;\r\n                fartSound.play();\r\n            }\r\n            jumpKeyWasPressed = true;\r\n        } else {\r\n            jumpKeyWasPressed = false;\r\n        }\r\n        // bounce logic\r\n        if (isOnGround) {\r\n            if (bouncing) {\r\n                bubbleBounceSound.play();\r\n            }\r\n            bouncing = false;\r\n            doubleJumped = false;\r\n        } else if(inventory[\"Fairie Dust\"]) {\r\n            shrek.body.gravity.y = GRAVITY / 2;\r\n        }\r\n        const currentDown = cursors.down.isDown;\r\n        if (currentDown && !lastDown && !isOnGround && bouncing === false && inventory[\"Swamp Bubble\"] === 1) {\r\n            shrek.body.velocity.y = 900*1.25;\r\n            bouncing = true;\r\n        }\r\n\r\n        enemies.forEach((enemy) => {\r\n            game.physics.arcade.overlap(shrek, enemy, onShrekHit, null, this);\r\n        });\r\n        lastDown = currentDown;\r\n    }\r\n\r\n    let lastDown = false;\r\n\r\n    function updateKnockedBackSprite(sprite) {\r\n        sprite.hitTimer--;\r\n        sprite.tint = sprite.hitTimer % 4 >= 2 ? '0xff6666' : '0xffffff';\r\n    }\r\n    \r\n    function updateCapturableEnemy(enemy) {\r\n        enemy.capturableTimer--;\r\n        enemy.alpha = enemy.capturableTimer % 4 >= 2 ? 0.1 : 1;\r\n    }\r\n\r\n    function updateEnemies() {\r\n        Object.keys(timeSinceEnemySpawn).forEach((enemyName) => {\r\n            let timeSinceSpawn = timeSinceEnemySpawn[enemyName]++;\r\n            let enemyProps = CreatureConstants.CREATURE_NAME_MAP[enemyName];\r\n            if(timeSinceSpawn > enemyProps.baseSpawnRate - (360 * level)) {\r\n                spawnEnemy(enemyProps);\r\n                timeSinceEnemySpawn[enemyName] = 0;\r\n            }\r\n        });\r\n        enemies.forEach((enemy) => {\r\n            var isOnGround = game.physics.arcade.collide(enemy, groundPlatform);\r\n\r\n            if(enemy.hitTimer > 0) {\r\n                updateKnockedBackSprite(enemy);\r\n                return;\r\n            }\r\n\r\n            if(enemy.health < 0 ) {\r\n                destroyEnemy(enemy);\r\n                return;\r\n            }\r\n\r\n            if(enemy.health === 0) {\r\n                updateCapturableEnemy(enemy);\r\n                // enemies are capturable only for a limited duration\r\n                if(enemy.capturableTimer === 0) {\r\n                    enemy.health = 1;\r\n                    enemy.alpha = 1;\r\n                }\r\n            }\r\n\r\n            if(enemy.pauseTimer > 0) {\r\n                enemy.pauseTimer--;\r\n                return;\r\n            }\r\n            let speed = getEnemySpeedFromLevel(enemy.template);\r\n            if(enemy.health === 0) {\r\n                speed /= 2;\r\n            }\r\n\r\n            if(enemy.x > STORE_X - STORE_RADIUS && enemy.x < STORE_X) {\r\n                enemy.body.velocity.x = -speed;\r\n                if(enemy.direction === 1) {\r\n                    flipSpriteDirection(enemy);\r\n                }\r\n                enemy.direction = -1;\r\n                return;\r\n            } else if(enemy.x < STORE_X + STORE_RADIUS && enemy.x > STORE_X) {\r\n                if(enemy.direction === -1) {\r\n                    flipSpriteDirection(enemy);\r\n                }\r\n                enemy.body.velocity.x = speed;\r\n                enemy.direction = 1;\r\n                return;\r\n            }\r\n\r\n            enemy.body.velocity.x = speed * enemy.direction;\r\n            enemy.animations.play(enemy.name + 'Walk');\r\n            if(Math.random() < enemy.template.turnProb) {\r\n                enemy.direction *= -1;\r\n                flipSpriteDirection(enemy);\r\n            }\r\n                //  Allow the enemy to jump if they are touching the ground.\r\n            if (enemy.body.touching.down && isOnGround) {\r\n                if(Math.random() * 1000 > 992) {\r\n                    enemy.body.velocity.y = -SHREK_BASE_JUMP_SPEED;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    function reanchorActionSprites() {\r\n        Object.keys(actionSprites).forEach(\r\n            (actionSpriteName) => anchorActionSprite(actionSprites[actionSpriteName].sprite));\r\n    }\r\n\r\n    function onShrekHit(shrek, enemy) {\r\n        enemy.body.velocity.x = 0;\r\n        enemy.body.velocity.y = 0;\r\n        enemy.pauseTimer = SHREK_KNOCKBACK_TIME / 2;\r\n        knockbackSprite(shrek, enemy);\r\n        if(inventory[\"Swamp Bubble\"] > 0) {\r\n            inventory[\"Swamp Bubble\"] = inventory[\"Swamp Bubble\"] - 1;\r\n            bubblePopSound.play();\r\n            return;\r\n        }\r\n        health--;\r\n        if(health < 1) {\r\n            loserFartSound.play();\r\n            game.state.start(\"GameOver\");\r\n        }\r\n    }\r\n\r\n    function knockbackSprite(sprite, adversary) {\r\n        sprite.hitTimer = SHREK_KNOCKBACK_TIME;\r\n        const template = sprite.template || {};\r\n        let kbX = template.knockbackVelocityX;\r\n        let kbY = template.knockbackVelocityY;\r\n        if (adversary === shrek && inventory[\"Big Onion\"] === 1) {\r\n            kbX *= 1;\r\n            kbY *= 5;\r\n        }\r\n        let velocityX = kbX !== undefined ? kbX : SHREK_KNOCKBACK_SPEED;\r\n        let velocityY = kbY !== undefined ? kbY : -SHREK_KNOCKBACK_SPEED;\r\n        sprite.body.velocity.x = (adversary.body.x > sprite.body.x ? -velocityX : velocityX);\r\n        sprite.body.velocity.y = velocityY;\r\n    }\r\n\r\n    function animateAction(actionSpriteName) {\r\n        if(isShrekActing) {\r\n            return;\r\n        }\r\n        isShrekActing = true;\r\n        let actionSprite = actionSprites[actionSpriteName].sprite;\r\n        let animationName = actionSprites[actionSpriteName].animationName;\r\n        actionSprite.alpha = 1;\r\n        let frameWidth = actionSprite.animations.currentFrame.width;\r\n        let xPercent = ((frameWidth) - actionArmFromRight) / (frameWidth);\r\n        actionSprite.anchor.setTo(xPercent, 0.5);\r\n        anchorActionSprite(actionSprite);\r\n        let anim = actionSprite.animations.play(animationName);\r\n        anim.onComplete.add(() => {isShrekActing = false;});\r\n    }\r\n\r\n    // flips sprite about the y-axis\r\n    function flipSpriteDirection(sprite) {\r\n        sprite.scale.x *= -1\r\n    }\r\n    \r\n    function flipShrek() {\r\n        flipSpriteDirection(shrek);\r\n        Object.keys(actionSprites).forEach(\r\n            (actionSpriteName) => flipSpriteDirection(actionSprites[actionSpriteName].sprite));\r\n    }\r\n\r\n    function anchorActionSprite(actionSprite) {\r\n        let armAnchor = getShrekActionAnchor();\r\n        actionSprite.x = armAnchor.anchorX;\r\n        actionSprite.y = armAnchor.anchorY;\r\n    }\r\n\r\n    function getShrekActionAnchor() {\r\n        let anchorX = isShrekFacingLeft? shrek.x - 17 : shrek.x + 17;\r\n        let anchorY = shrek.y - 52;\r\n        return {anchorX, anchorY};\r\n    }\r\n\r\n    function camera_izeCoordinates(x,y) {\r\n        return {\r\n            x: game.camera.x + x,\r\n            y: game.camera.y +y\r\n        };\r\n    }\r\n\r\n    function getEnemySpeedFromLevel(enemyTemplate) {\r\n        return enemyTemplate.baseSpeed + 20 * level;\r\n    }\r\n\r\n    function checkNetCollision() {\r\n        const net = actionSprites['net'];\r\n        const netSprite = net.sprite;\r\n        enemies.forEach((enemy) => {\r\n            if (net.collidedEnemies.length >= 1 || Object.keys(capturedCreatures).includes(enemy.name) || enemy.health > 0) {\r\n                return;\r\n            }\r\n            const foundCollision = Phaser.Rectangle.intersects(enemy.getBounds(), netSprite.getBounds());\r\n            if (foundCollision) {\r\n                net.collidedEnemies.push(enemy);\r\n                creatureCounts[enemy.name] += 1;\r\n                capturedCreatures.push(enemy.template);\r\n                destroyEnemy(enemy)\r\n                netCaptureSound.play();\r\n            }\r\n        });\r\n        \r\n    }\r\n\r\n    const checkChopCollision = (isBigFist) => {\r\n        const chop = isBigFist ? actionSprites['bigfist'] : actionSprites['chop'];\r\n        const chopSprite = chop.sprite;\r\n\r\n        enemies.forEach((enemy) => {\r\n            if (chop.collidedEnemies.includes(enemy)) {\r\n                return;\r\n            }\r\n            const foundCollision = Phaser.Rectangle.intersects(enemy.getBounds(), chopSprite.getBounds());\r\n            if (foundCollision) {\r\n                isBigFist ? hitBigSound.play() : hitSound.play();\r\n                chop.collidedEnemies.push(enemy);\r\n                const hadZeroHealth = enemy.health === 0;\r\n                const damageDealt = isBigFist ? 4 : 1;\r\n                enemy.health -= damageDealt;\r\n                knockbackSprite(enemy, shrek);\r\n\r\n                // at least one hit needs to make enemy capturable\r\n                if (!hadZeroHealth && enemy.health < 0) { \r\n                    enemy.health = 0; \r\n                }\r\n                if (enemy.health === 0) {\r\n                    enemy.capturableTimer = CAPTURABLE_DURATION * (isBigFist ? 3 : 1);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    function destroyEnemy(enemy) {\r\n        enemies.splice(enemies.indexOf(enemy), 1);\r\n        enemy.destroy();\r\n    }\r\n\r\n    function getLevelFromEnemiesSold() {\r\n        if(enemiesSold < 10) {\r\n            return 0;\r\n        } else if(enemiesSold < 20) {\r\n            return 1;\r\n        } else if(enemiesSold < 30) {\r\n            return 2;\r\n        } else if(enemiesSold < 50) {\r\n            return 3;\r\n        } else {\r\n            return 4;\r\n        }\r\n    }\r\n\r\n    function hasBoughtAllItems() {\r\n        for(let i = 0; i < Object.keys(inventory).length; ++i) {\r\n            let itemName = Object.keys(inventory)[i];\r\n            if(itemName === \"Swamp Bubble\") {\r\n                if(!hasBoughtBubble) {\r\n                    return false;\r\n                }\r\n            } else if(inventory[itemName] < 1) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    return {preload, create, update};\r\n}","import {MARGIN} from \"../common/constants\";\r\nexport default function StoreMenu(game) {\r\n\r\n    var menuContainer;\r\n    var width = game.width - MARGIN * 2 // example;\r\n    var height = game.height - MARGIN * 2 // example;\r\n\r\n    var bmd = game.add.bitmapData(width, height);\r\n     \r\n    bmd.ctx.beginPath();\r\n    bmd.ctx.rect(0, 0, width, height);\r\n    bmd.ctx.fillStyle = '#000000';\r\n    bmd.ctx.fill();\r\n    menuContainer = game.add.sprite(game.camera.x + (game.width/2), game.camera.y + (game.height/2), bmd);\r\n    menuContainer.anchor.setTo(0.5, 0.5);\r\n    menuContainer.bringToTop();\r\n    menuContainer.alpha = 0.75;  \r\n    return menuContainer;\r\n}","import {DescriptionStyle} from \"../common/constants\";\r\nimport StateTransitionButton from '../common/StateTransitionButton';\r\nimport TitleText from \"../common/TitleText\";\r\nexport default function victoryState(game) {\r\n\r\n    function create() {\r\n        TitleText(game, game.width/2, 90, 'Victory!');\r\n        StateTransitionButton(game, 60, 30, '< Back', \"Entry\");\r\n        game.add.text(60, 120, \"You can buy back your swamp! And all it took was the lives\\nof a few fairy tale creatures!\", DescriptionStyle);\r\n    }\r\n    \r\n    return {create};\r\n}"],"sourceRoot":""}