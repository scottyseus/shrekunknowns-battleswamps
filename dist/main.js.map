{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/common/GenericButton.js","webpack:///./src/common/ItemButton.js","webpack:///./src/common/StateTransitionButton.js","webpack:///./src/common/TitleText.js","webpack:///./src/common/constants.js","webpack:///./src/common/gitButton.js","webpack:///./src/index.js","webpack:///./src/states/about-state.js","webpack:///./src/states/asset-load-state.js","webpack:///./src/states/creatureConstants.js","webpack:///./src/states/entry-state.js","webpack:///./src/states/game-over-state.js","webpack:///./src/states/instructions-state.js","webpack:///./src/states/instructions-state2.js","webpack:///./src/states/instructions-state3.js","webpack:///./src/states/instructions-state4.js","webpack:///./src/states/play-state.js","webpack:///./src/states/storeMenu.js"],"names":["GenericButton","game","x","y","btnName","callback","genericButton","add","text","ButtonStyle","anchor","setTo","inputEnabled","events","onInputUp","onInputOver","alpha","onInputOut","ItemButton","itemButton","StateTransitionButton","state","length","i","start","titleStyle","BaseStyle","fontSize","align","TitleText","contents","set","FONT_COLOR","font","fill","DescriptionStyle","MARGIN","ITEM_MAP","icon","descr","cost","GitButton","link","window","open","Phaser","Game","AUTO","undefined","entryState","aboutState","instructionsState","instructionsState2","instructionsState3","instructionsState4","gameOverState","assetLoadState","textCrawlStyle","wordWrap","wordWrapWidth","width","textCrawl","create","aboutText","preload","load","image","spritesheet","audio","CREATURE_NAMES","DONKEY","FAIRY","GNOME","UNICORN","PHOENIX","IMP","GOBLIN","BASE_ENEMY","turnProb","knockbackVelocityX","knockbackVelocityY","flier","altitude","minDistance","name","price","baseSpeed","baseHealth","baseSpawnRate","CREATURE_LIST","CREATURE_NAME_MAP","forEach","creature","CreatureConstants","TITLE_Y","init","update","instructionsText","nextButton","generatedText","playState","BAG_X","BAG_Y","bagSprite","sprite","bagOverlaySprite","row","creatureProps","creatureName","height","fixedToCamera","COIN_Y","COIN_X","coinSprite","animations","play","HEART_Y","donkeySprite","frame","storeSprite","col","ICON_X","ICON_Y","Object","keys","itemName","itemProps","donkeyY","GRAVITY","BOUNCE","GROUND_LEVEL","HEALTH_BAR_X","HEALTH_BAR_Y","COIN_STAT_X","COIN_STAT_Y","STORE_X","STORE_Y","STORE_RADIUS","ITEM_X","ITEM_Y","level","cursors","groundPlatform","shrek","swampBubble","SHREK_BASE_SPEED","SHREK_BASE_JUMP_SPEED","SHREK_KNOCKBACK_TIME","SHREK_KNOCKBACK_SPEED","actionSprites","actionArmFromRight","actionSpriteProps","speed","collisionCheckFunction","checkChopCollision","checkNetCollision","coinIcon","coinText","heartGroup","iconBag","creatureCountText","isShrekActing","doubleJumped","jumpKeyWasPressed","storeUI","choiceLabel","enemies","enemiesSold","timeSinceEnemySpawn","CAPTURABLE_DURATION","storePurchaseSound","storePurchaseDenied","netCaptureSound","bubbleGetSound","bubbleBounceSound","bubblePopSound","fartSound","hitSound","hitBigSound","loserFartSound","isShrekFacingLeft","bouncing","isStoreOpen","gold","inventory","inventoryDisplay","capturedCreatures","creatureCounts","health","SPACE_BAR","ACTION_KEY","NET_KEY","emitterManager","fairieDustEmitter","world","setBounds","stage","disableVisibilityChange","input","keyboard","createCursorKeys","addBackgroundScenery","getLevelFromEnemiesSold","addEnemies","addShrek","addActionSprites","physics","startSystem","Physics","ARCADE","camera","follow","Camera","FOLLOW_LOCKON","addStatOverlay","addKey","Keyboard","SPACEBAR","onUp","toggleStore","A","animateAction","S","createInventory","initSpawnTimeMap","updateShrek","updateEnemies","updateShrekAction","updateStatOverlay","actionName","items","group","enableBody","ground","body","immovable","store","scale","arcade","enable","bounce","gravity","collideWorldBounds","hitTimer","addSwampBubble","spriteName","spriteProps","actionSprite","animationName","actionAnim","onComplete","collidedEnemies","spawnEnemy","enemyTemplate","enemy","randomSpawnX","direction","template","pauseTimer","capturableTimer","push","rand","Math","random","denormalized","spawnX","addForegroundScenery","imageName","n","Date","getMilliseconds","treeX","treeY","treeImage","destroy","createStore","menuContainer","StoreMenu","sellButtonCoords","camera_izeCoordinates","sellButton","closeButtonCoords","closeButton","coords","itemDesc","itemCost","validatePurchase","itemDescr","item","coinCoords","heart","bagCoords","iconBagOverlay","children","getChildAt","visible","itemIcon","emitter","makeParticles","flow","collide","velocity","reanchorActionSprites","updateKnockedBackSprite","updateShrekNormal","getShrekRunSpeed","isOnGround","left","isDown","flipShrek","right","up","touching","down","currentDown","lastDown","overlap","onShrekHit","tint","updateCapturableEnemy","enemyName","timeSinceSpawn","enemyProps","destroyEnemy","getEnemySpeedFromLevel","flipSpriteDirection","actionSpriteName","anchorActionSprite","knockbackSprite","adversary","kbX","kbY","velocityX","velocityY","frameWidth","currentFrame","xPercent","anim","armAnchor","getShrekActionAnchor","anchorX","anchorY","net","netSprite","includes","foundCollision","Rectangle","intersects","getBounds","isBigFist","chop","chopSprite","hadZeroHealth","damageDealt","splice","indexOf","bmd","bitmapData","ctx","beginPath","rect","fillStyle","bringToTop"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import {FONT_COLOR, ButtonStyle} from \"../common/constants\";\n\n// instance of the game, x coordinate, y coordinate, button display text, and state to move to\nconst GenericButton = (game, x, y, btnName, callback) => {\n    const genericButton = game.add.text(x, y, btnName, ButtonStyle);\n    genericButton.anchor.setTo(0,0);\n    genericButton.inputEnabled = true;\n    genericButton.events.onInputUp.add(callback);\n    genericButton.events.onInputOver.add((( ) => {\n        genericButton.alpha = .5;\n    }), this);\n    genericButton.events.onInputOut.add(() => {\n        genericButton.alpha = 1;\n    }, this);\n\n    return genericButton;\n};\n\nexport default GenericButton;","import {FONT_COLOR, ButtonStyle} from \"../common/constants\";\n\n// instance of the game, x coordinate, y coordinate, button display text, and state to move to\nconst ItemButton = (game, x, y, btnName, callback) => {\n    const itemButton = game.add.text(x, y, btnName, ButtonStyle);\n    /*itemButton.setTextBounds(x, y, 100, 100);\n    itemButton.style.align = \"left\";\n    itemButton.style.boundsAlignH = \"left\";\n    itemButton.style.boundsAlignV = \"top\";*/\n    itemButton.inputEnabled = true;\n    itemButton.events.onInputUp.add(callback);\n    itemButton.events.onInputOver.add((( ) => {\n        itemButton.alpha = .5;\n    }), this);\n    itemButton.events.onInputOut.add(() => {\n        itemButton.alpha = 1;\n    }, this);\n\n    return itemButton;\n};\n\nexport default ItemButton;","import {FONT_COLOR, ButtonStyle} from \"../common/constants\";\nimport GenericButton from \"./GenericButton\";\n\n// instance of the game, x coordinate, y coordinate, button display text, and state to move to\nconst StateTransitionButton = (game, x, y, btnName, ...state) => {\n    return GenericButton(game, x, y, btnName, () => {\n        if (state.length > 1) {\n            for(let i = 0; i < state.length; i++) {\n                game.state.start(state[i]);\n            }\n        } else {\n            game.state.start(state[0]);\n        }\n    });\n};\n\nexport default StateTransitionButton;","import {BaseStyle} from \"./constants\";\n\nlet titleStyle = {...BaseStyle, fontSize: '48px'};\ntitleStyle.align = 'center';\n\nexport default function TitleText(game, x, y, contents) {\n    let text = game.add.text(x, y, contents, titleStyle);\n    text.anchor.set(0.5);\n}","export const FONT_COLOR = \"#589b00\";\nexport const BaseStyle = {font: 'Comic Sans MS', fill: FONT_COLOR, align: 'left'};\nexport const ButtonStyle = { ...BaseStyle,  fontSize: '32px' };\nexport const DescriptionStyle = { ...BaseStyle, fontSize: '18px' };\nexport const MARGIN = 24;\nexport const ITEM_MAP = {\n    \"Speed\": {icon: \"speedIcon\" , descr: \"Doubles movement speed\", cost: 40},\n    \"Swamp Bubble\": {icon: \"swampBubbleIcon\" , descr: \"Takes one free hit & adds bounce ability\", cost: 60},\n    \"Fart in a Jar\": {icon: \"fartJarIcon\" , descr: \"Adds double-jump ability\", cost: 100},\n    \"Fairie Dust\": {icon: \"fairieDustIcon\" , descr: \"Slows fall speed\", cost: 220},\n    \"Big Onion\": {icon: \"bigFistIcon\" , descr: \"Higher damage and knock back\", cost: 300},\n};\n","import {FONT_COLOR, ButtonStyle} from \"../common/constants\";\nimport GenericButton from \"./GenericButton\";\n\nconst GitButton = (game, x, y, btnName, link) => {\n    GenericButton(game, x, y, btnName, () => {\n        window.open(link);\n    });\n};\n\nexport default GitButton;","import entryState from \"./states/entry-state\";\nimport aboutState from \"./states/about-state\";\nimport instructionsState from \"./states/instructions-state\";\nimport instructionsState2 from \"./states/instructions-state2\";\nimport instructionsState3 from \"./states/instructions-state3\";\nimport instructionsState4 from \"./states/instructions-state4\";\nimport gameOverState from \"./states/game-over-state\";\nimport assetLoadState from \"./states/asset-load-state\";\n\nvar game = new Phaser.Game(640, 512, Phaser.AUTO, Phaser.AUTO, 'game', undefined, undefined, false);\ngame.state.add(\"Entry\", entryState(game));\ngame.state.add(\"About\", aboutState(game));\ngame.state.add(\"Instructions\", instructionsState(game));\ngame.state.add(\"Instructions2\", instructionsState2(game));\ngame.state.add(\"Instructions3\", instructionsState3(game));\ngame.state.add(\"Instructions4\", instructionsState4(game));\ngame.state.add(\"GameOver\", gameOverState(game));\ngame.state.add(\"AssetLoad\", assetLoadState(game));\ngame.state.start(\"AssetLoad\");","import {FONT_COLOR} from \"../common/constants\";\nimport StateTransitionButton from \"../common/StateTransitionButton\";\nimport GitButton from \"../common/gitButton\";\nexport default function aboutState(game) {\n\n    let textCrawlStyle = { font: '15px Comic Sans MS', fill: FONT_COLOR, align: 'left', wordWrap: true, wordWrapWidth: game.width-60};\n    let textCrawl = 'About\\n\\n'\n                    + 'Original story, art, music, and gameplay developed by libjared, scottyseus, \\njronsomers, and endlessDreamHero  for'\n                    + ' Ludum Dare Jam 44.\\n\\n'\n                    + 'Check out the links below:\\n\\n';\n\n    return {\n        create: function() {\n            StateTransitionButton(game, 60, 30, '< Back', \"Entry\");\n            GitButton(game, 60, 250, '> scottyseus on GitHub <', \"https://github.com/scottyseus/due-process\");\n            GitButton(game, 60, 290, '> libjared on GitHub <', \"https://github.com/libjared\");\n            GitButton(game, 60, 330, \"> jronsomers GitHub\", \"https://github.com/jronSomers\");\n            GitButton(game, 60, 370, '> Ludum Dare page <', \"https://ldjam.com/events/ludum-dare/44/subs\");\n\n            const aboutText = game.add.text(60, 90, textCrawl, textCrawlStyle);\n        }\n    };\n};","export default function assetLoadState(game) {\n\n    function preload() {\n        game.load.image('ground', 'src/assets/ground.png');\n        game.load.image('groundTop', 'src/assets/groundTop.png');\n        game.load.spritesheet('shrek', 'src/assets/shrek.png', 126/3, 72);\n        game.load.spritesheet('donkey', 'src/assets/donkey.png', 192/4, 48);\n        game.load.spritesheet('unicorn', 'src/assets/unicorn.png', 92, 82);\n        game.load.spritesheet('gnome', 'src/assets/gnome.png', 30, 50);\n        game.load.spritesheet('fairy', 'src/assets/fairy.png', 56/4, 17);\n        game.load.spritesheet('phoenix', 'src/assets/phoenix.png', 56, 56);\n        game.load.spritesheet('imp', 'src/assets/imp.png', 32, 48);\n        game.load.spritesheet('goblinWarrior', 'src/assets/goblinWarrior.png', 52, 72);\n        game.load.image('tree1', 'src/assets/tree1.png');\n        game.load.image('tree2', 'src/assets/tree2.png');\n        game.load.image('tree3', 'src/assets/tree3.png');\n        game.load.image(\"berryBush\", \"src/assets/berryBush.png\");\n        game.load.image(\"store\", \"src/assets/store.png\");\n        game.load.image(\"forestBackground\", \"src/assets/forestBackground.png\");\n        game.load.image(\"storeBackground\", \"src/assets/storeBackground.png\");\n        game.load.spritesheet(\"chop\", \"src/assets/chop.png\", 68, 90);\n        game.load.spritesheet(\"bigfist\", \"src/assets/bigfist.png\", 90, 120);\n        game.load.spritesheet(\"net\", \"src/assets/net.png\", 110, 108);\n        game.load.image(\"sky\", \"src/assets/sky.png\");\n        game.load.image(\"heart\", \"src/assets/heart.png\");\n        game.load.spritesheet(\"coin\", \"src/assets/coin.png\", 128/8, 16);\n        game.load.image(\"swampBubble\", \"src/assets/swampBubble.png\");\n        game.load.image(\"fairieDust\", \"src/assets/fairieDust.png\");\n        \n\n        // icons\n        game.load.image(\"donkeyIcon\", \"src/assets/donkeyIcon.png\");\n        game.load.image(\"fairyIcon\", \"src/assets/fairyIcon.png\");\n        game.load.image(\"gnomeIcon\", \"src/assets/gnomeIcon.png\");\n        game.load.image(\"unicornIcon\", \"src/assets/unicornIcon.png\");\n        game.load.image(\"phoenixIcon\", \"src/assets/phoenixIcon.png\");\n        game.load.image(\"impIcon\", \"src/assets/impIcon.png\");\n        game.load.image(\"goblinWarriorIcon\", \"src/assets/goblinWarriorIcon.png\");\n        game.load.image(\"iconBag\", \"src/assets/iconBag.png\");\n        game.load.image(\"iconBagOverlay\", \"src/assets/iconBagOverlay.png\");\n\n        game.load.image(\"swampBubbleIcon\", \"src/assets/swampBubbleIcon.png\");\n        game.load.image(\"fairieDustIcon\", \"src/assets/fairieDustIcon.png\");\n        game.load.image(\"bigFistIcon\", \"src/assets/bigFistIcon.png\");\n        game.load.image(\"speedIcon\", \"src/assets/speedIcon.png\");\n        game.load.image(\"fartJarIcon\", \"src/assets/fartJarIcon.png\");\n\n        // sounds\n        game.load.audio(\"net\", \"src/assets/sound/net.wav\");\n        game.load.audio(\"purchase\", \"src/assets/sound/cashreg.wav\");\n        game.load.audio(\"denied\", \"src/assets/sound/denied.wav\");\n        game.load.audio(\"bubbleGet\", \"src/assets/sound/bubbleget.wav\");\n        game.load.audio(\"bubbleBounce\", \"src/assets/sound/bubblebounce.wav\");\n        game.load.audio(\"bubblePop\", \"src/assets/sound/bubblePop.wav\");\n        game.load.audio(\"fart\", \"src/assets/sound/fart.wav\");\n        game.load.audio(\"hit\", \"src/assets/sound/hit.wav\");\n        game.load.audio(\"hitBig\", \"src/assets/sound/hit2.wav\");\n        game.load.audio(\"loserFart\", \"src/assets/sound/loserFart.wav\"); \n    }\n\n    function create() {\n        game.state.start('Entry');\n    }\n\n    return {preload, create};\n\n}","const CREATURE_NAMES = {\n    DONKEY: \"donkey\",\n    FAIRY: \"fairy\",\n    GNOME: \"gnome\",\n    UNICORN: \"unicorn\",\n    PHOENIX: \"phoenix\",\n    IMP: \"imp\",\n    GOBLIN: \"goblinWarrior\"\n}\n\nlet BASE_ENEMY = {\n    turnProb: 0.02,\n    knockbackVelocityX: 200,\n    knockbackVelocityY: -200,\n    flier: false,\n    altitude: 0, // height above ground level\n    minDistance: 250, // minimum spawn distance from store\n};\n\nlet DONKEY = {\n    ...BASE_ENEMY,\n    name: CREATURE_NAMES.DONKEY,\n    price: 20,\n    baseSpeed: 200,\n    baseHealth: 3,\n    baseSpawnRate: 3600,\n    minDistance: 1200\n};\n\nlet FAIRY = {\n    ...BASE_ENEMY,\n    name: CREATURE_NAMES.FAIRY,\n    price: 10,\n    baseSpeed: 60,\n    baseHealth: 1,\n    baseSpawnRate: 2400,\n    flier: true,\n    altitude: 100,\n    knockbackVelocityY: 0,\n};\n\nlet UNICORN = {\n    ...BASE_ENEMY,\n    name: CREATURE_NAMES.UNICORN,\n    price: 40,\n    baseSpeed: 150,\n    baseHealth: 3,\n    baseSpawnRate: 4200,\n    minDistance: 2400\n};\n\nlet GNOME = {\n    ...BASE_ENEMY,\n    name: CREATURE_NAMES.GNOME,\n    price: 20,\n    baseSpeed: 100,\n    baseHealth: 2,\n    baseSpawnRate: 3600,\n    minDistance: 1200\n};\n\nlet PHOENIX = {\n    ...BASE_ENEMY,\n    name: CREATURE_NAMES.PHOENIX,\n    price: 60,\n    baseSpeed: 125,\n    baseHealth: 2,\n    baseSpawnRate: 4200,\n    altitude: 400,\n    flier: true,\n};\n\nlet IMP = {\n    ...BASE_ENEMY,\n    name: CREATURE_NAMES.IMP,\n    price: 10,\n    baseSpeed: 125,\n    baseHealth: 1,\n    baseSpawnRate: 2400,\n};\n\nlet GOBLIN = {\n    ...BASE_ENEMY,\n    name: CREATURE_NAMES.GOBLIN,\n    price: 40,\n    baseSpeed: 85,\n    baseHealth: 4,\n    baseSpawnRate: 4200,\n    minDistance: 2400\n};\n\nconst CREATURE_LIST = [DONKEY, FAIRY, GNOME, UNICORN, PHOENIX, IMP, GOBLIN];\nconst CREATURE_NAME_MAP = {};\n\nCREATURE_LIST.forEach((creature) => {\n    CREATURE_NAME_MAP[creature.name] = creature;\n});\n\nconst CreatureConstants = {\n    CREATURE_NAMES,\n    DONKEY,\n    UNICORN,\n    FAIRY,\n    GNOME,\n    PHOENIX,\n    IMP,\n    GOBLIN,\n    CREATURE_LIST,\n    CREATURE_NAME_MAP\n};\n\nexport default CreatureConstants;","import StateTransitionButton from \"../common/StateTransitionButton\";\nimport TitleText from '../common/TitleText';\nimport playState from \"./play-state\";\n\nconst TITLE_Y = 70;\n\nexport default function entryState(game) {\n    return {\n        preload: function() {\n        },\n\n        init: function() {\n        },\n \n        create: function() {\n            TitleText(game, game.width / 2, TITLE_Y, \"Shrek Unknown's\\nBattleSwamps\");\n\n            StateTransitionButton(game, 30,TITLE_Y + 72, \"Play\", \"Instructions\");\n            StateTransitionButton(game, 30, TITLE_Y + 72 * 2,'About', \"About\");\n        },\n\n        update: function() {\n            \n        }\n    }\n};","import { FONT_COLOR } from \"../common/constants\";\nimport StateTransitionButton from '../common/StateTransitionButton';\nimport TitleText from \"../common/TitleText\";\nexport default function gameOverState(game) {\n\n    function create() {\n        TitleText(game, game.width/2, game.width/2, 'Game Over');\n        StateTransitionButton(game, 60, 30, '< Back', \"Entry\");\n    }\n    \n    return {create};\n}","import StateTransitionButton from \"../common/StateTransitionButton\";\nimport {FONT_COLOR, ButtonStyle, DescriptionStyle} from \"../common/constants\";\nexport default function instructionsState(game) {\n    let instructionsText = '\\n\\n Shrek needs more gold to buy back his swamp!\\n\\n'\n                         + 'The Royal Guards are paying a pretty penny in exchange\\n for mythical Creatures...\\n\\n'\n                         + \"What's an Orge to do? Go to the would-be-king to talk?\\n\\n...Nah rounding up these things seems way easier.\\n\\n\";\n    return {\n        create: function () {\n            StateTransitionButton(game, 60, 30, '< Back', \"Entry\");\n            let nextButton = StateTransitionButton(game, game.width - 60, 30, 'Next >', \"Instructions2\");\n            nextButton.anchor.setTo(1, 0);\n            let generatedText = game.add.text(60, 90, instructionsText, DescriptionStyle);\n        }\n    };\n}","import StateTransitionButton from \"../common/StateTransitionButton\";\nimport {FONT_COLOR, ButtonStyle, DescriptionStyle} from \"../common/constants\";\nexport default function instructionsState2(game) {\n    let instructionsText = 'Controls:\\nMove left with left arrow key.\\nMove right with right arrow key.\\nJump with up arrow key.\\nFall fast* with down arrow key.\\n'\n                         + 'Attack creatures with \\\"A\\\" key.\\nUse net to catch creatures with \\\"S\\\" key.\\nOpen the Shoppe with Spacebar**.\\n\\nCreatures can not be caught utill they are weak enough.\\nHit creatures so that way they can be catchable.'\n                         + '\\n\\n*Swamp Bubble Power-up only.\\n**Shrek needs to be standing at the Shoppe.';\n    return {\n        create: function () {\n            StateTransitionButton(game, 60, 30, '< Back', \"Instructions\");\n            let nextButton = StateTransitionButton(game, game.width - 60, 30, 'Next >', \"Instructions3\");\n            nextButton.anchor.setTo(1, 0);\n            let generatedText = game.add.text(60, 90, instructionsText, DescriptionStyle);\n        }\n    };\n}","import StateTransitionButton from \"../common/StateTransitionButton\";\nimport {FONT_COLOR, ButtonStyle, DescriptionStyle} from \"../common/constants\";\nimport playState from \"./play-state\";\nimport CreatureConstants from \"./creatureConstants\";\nexport default function instructionsState3(game) {\n    return {\n        create: function () {\n            StateTransitionButton(game, 60, 30, '< Back', \"Instructions2\");\n            game.state.add('Play', playState(game));\n            let nextButton = StateTransitionButton(game, game.width - 60, 30, 'Next >', \"Instructions4\");\n            nextButton.anchor.setTo(1, 0);\n            \n\n            let BAG_X = 60;\n            let BAG_Y = 90;\n\n            let bagSprite = game.add.sprite(BAG_X,BAG_Y,\"iconBag\");\n            bagSprite.alpha = 0.5;\n            let bagOverlaySprite = game.add.sprite(BAG_X,BAG_Y,\"iconBagOverlay\");\n\n            let row = 0;\n            CreatureConstants.CREATURE_LIST.forEach((creatureProps) => {\n                let creatureName = creatureProps.name;\n                let y = BAG_Y + bagSprite.height - 16 - (row * 23);\n                let x = BAG_X + 6;\n                let icon = game.add.image(x,y, creatureName + 'Icon');\n                let text = game.add.text(x + 16, y, ' x ' + 0, {font: 'Comic Sans MS', fill: FONT_COLOR, align: 'left', fontSize: '12px'});\n                text.anchor.setTo(0, 0.5);\n                text.fixedToCamera = true;\n                icon.anchor.setTo(0, 0.5);\n                ++row;\n            });\n            game.add.text(180, 180, \"The bag to the left displays the number of\\ncreatures yet to be sold.\", DescriptionStyle);\n\n            let COIN_Y = 340\n            let COIN_X = 60;\n            let coinSprite = game.add.sprite(COIN_X, COIN_Y, \"coin\");\n            coinSprite.animations.add('rotate', [0,1,2,3,4,5,6,7], 14, true);\n            coinSprite.animations.play('rotate');\n            game.add.text(COIN_X + 20, COIN_Y, ' x ' + 0, {font: 'Comic Sans MS', fill: FONT_COLOR, align: 'left', fontSize: '12px'});\n            game.add.text(180, COIN_Y, \"The coin indicates your current amount of gold.\", DescriptionStyle);\n\n            let HEART_Y = 400;\n            game.add.sprite(60, HEART_Y, 'heart');\n            game.add.text(180, HEART_Y, \"Your health is equal to the number of hearts.\", DescriptionStyle);\n        }\n    };\n}","import StateTransitionButton from \"../common/StateTransitionButton\";\nimport {ITEM_MAP, FONT_COLOR, ButtonStyle, DescriptionStyle} from \"../common/constants\";\nimport playState from \"./play-state\";\nimport CreatureConstants from \"./creatureConstants\";\nexport default function instructionsState3(game) {\n    let donkeySprite;\n    let frame = 0;\n\n    return {\n        create: function () {\n            StateTransitionButton(game, 60, 30, '< Back', \"Instructions3\");\n            game.state.add('Play', playState(game));\n            let nextButton = StateTransitionButton(game, game.width - 60, 30, 'Play >', \"Play\");\n            nextButton.anchor.setTo(1, 0);\n            \n\n            let BAG_X = 60;\n            let BAG_Y = 90;\n\n            let storeSprite = game.add.sprite(BAG_X,BAG_Y,\"store\");\n            game.add.text(200, BAG_Y + storeSprite.height / 2, \"Press the space bar while standing in front\\n\" +\n                \"of the store to buy items and\\nsell creatures.\", DescriptionStyle);\n\n            let col = 0;\n            let ICON_X = 90;\n            let ICON_Y = BAG_Y + storeSprite.height +  80;\n            Object.keys(ITEM_MAP).forEach((itemName) => {\n                let itemProps = ITEM_MAP[itemName];\n                let y = ICON_Y;\n                let x = ICON_X + 18 * col;\n                let icon = game.add.image(x,y, itemProps.icon);\n                ++col;\n            });\n            game.add.text(200, ICON_Y, \"These icons at the top of your screen\\nindicate owned items. Except for Swamp Bubble, all\\nitems can only be bought once.\", DescriptionStyle);\n\n            let donkeyY = ICON_Y + 120;\n            donkeySprite = game.add.sprite(90, donkeyY, \"donkey\");\n            donkeySprite.animations.add(\"donkeyWalk\", [0, 1, 2, 0], 12, true);\n            game.add.text(200, donkeyY, \"Critically damaged enemies can be captured\\nwith the net. Enemies flash when\\ncritically damaged. Hitting a critically damaged\\nenemy destroys it.\", DescriptionStyle);\n        },\n        update: function() {\n            ++frame;\n            donkeySprite.alpha = frame % 4 >= 2 ? 0.1 : 1;\n            if(frame > 2000000000) {\n                frame = 0;\n            }\n        }\n    };\n}","import {ITEM_MAP, FONT_COLOR, MARGIN, DescriptionStyle} from \"../common/constants\";\nimport GenericButton from \"../common/GenericButton\";\nimport ItemButton from \"../common/ItemButton\";\nimport StoreMenu from \"./storeMenu\";\nimport CreatureConstants from \"./creatureConstants\";\n\nexport default function playState(game) {\n\n    const GRAVITY = 600*2;\n    const BOUNCE = 0;\n\n\n\n    // locations\n    let GROUND_LEVEL;\n    let HEALTH_BAR_X = 10;\n    let HEALTH_BAR_Y = 10;\n    let COIN_STAT_X = 224;\n    let COIN_STAT_Y = 10;\n    let STORE_X;\n    let STORE_Y;\n    let STORE_RADIUS = 180;\n\n    let BAG_X = game.width - 82;\n    let BAG_Y = 10;\n\n    let ITEM_X = 324;\n    let ITEM_Y = 10;\n\n    // game stats\n    let level = 0;\n\n    // groups\n    let cursors;\n    let groundPlatform;\n\n    // characters\n    let shrek, swampBubble;\n    const SHREK_BASE_SPEED = 150;\n    const SHREK_BASE_JUMP_SPEED = 525;\n    const SHREK_KNOCKBACK_TIME = 45;\n    const SHREK_KNOCKBACK_SPEED = 200;\n    let actionSprites = {};\n    let actionArmFromRight = 14; // distance from shoulder socket to rightside of sprite frame\n    let actionSpriteProps = {'chop': {\n            speed: 30,\n            collisionCheckFunction: () => { checkChopCollision(false); }\n        }, \n        'net': {\n            speed: 12,\n            collisionCheckFunction: checkNetCollision\n        }, \n        'bigfist': {\n            speed: 18,\n            collisionCheckFunction: () => { checkChopCollision(true); }\n        }\n    };\n    let coinIcon, coinText, heartGroup, iconBag;\n    let creatureCountText = {};\n    let isShrekActing = false;\n    let doubleJumped = false;\n    let jumpKeyWasPressed = false;\n\n    let storeUI;\n    let choiceLabel;\n    let enemies = [];\n    let enemiesSold = 0;\n    let timeSinceEnemySpawn = {};\n    const CAPTURABLE_DURATION = 360;\n\n    let storePurchaseSound;\n    let storePurchaseDenied;\n    let netCaptureSound;\n    let bubbleGetSound;\n    let bubbleBounceSound;\n    let bubblePopSound;\n    let fartSound;\n    let hitSound;\n    let hitBigSound;\n    let loserFartSound;\n\n    // flags\n    let isShrekFacingLeft = true;\n    let bouncing = false;\n    let isStoreOpen = false;\n\n    // player stats\n    let gold = 0;\n    let inventory = {};\n    let inventoryDisplay = {};\n    let capturedCreatures = [];\n    let creatureCounts = {};\n    let health = 10;\n\n    // keys\n    let SPACE_BAR;\n    let ACTION_KEY;\n    let NET_KEY;\n\n    let emitterManager;\n    let fairieDustEmitter;\n\n    function preload() {\n        \n    }\n    \n    function create() {\n        GROUND_LEVEL = game.world.height - 64;\n        STORE_X = 640 * 5 + 450;\n        STORE_Y = GROUND_LEVEL - 64;\n\n        game.world.setBounds(0, 0, 6400, 512);\n        game.stage.disableVisibilityChange = true;\n        cursors = game.input.keyboard.createCursorKeys();\n        addBackgroundScenery();\n        level = getLevelFromEnemiesSold();\n        addEnemies();\n        addShrek();\n        addActionSprites();\n\n        //  We're going to be using physics, so enable the Arcade Physics system\n        game.physics.startSystem(Phaser.Physics.ARCADE);\n        game.camera.follow(shrek, Phaser.Camera.FOLLOW_LOCKON);\n\n        CreatureConstants.CREATURE_LIST.forEach((creatureProps) => {\n            creatureCounts[creatureProps.name] = 0;\n        });\n        // addForegroundScenery();\n        addStatOverlay();\n\n        SPACE_BAR = game.input.keyboard.addKey(Phaser.Keyboard.SPACEBAR);\n        SPACE_BAR.onUp.add(toggleStore, this);\n\n        ACTION_KEY = game.input.keyboard.addKey(Phaser.Keyboard.A);\n        ACTION_KEY.onUp.add(() => {\n            if (inventory[\"Big Onion\"] === 1)\n                animateAction('bigfist');\n            else\n                animateAction('chop');\n        }, this);\n        NET_KEY = game.input.keyboard.addKey(Phaser.Keyboard.S);\n        NET_KEY.onUp.add(() => {animateAction('net')}, this);\n        createInventory();\n        storePurchaseSound = game.add.audio(\"purchase\");\n        storePurchaseDenied = game.add.audio(\"denied\");\n        netCaptureSound = game.add.audio(\"net\");\n        bubbleGetSound = game.add.audio(\"bubbleGet\");\n        bubbleBounceSound = game.add.audio(\"bubbleBounce\");\n        bubblePopSound = game.add.audio(\"bubblePop\");\n        fartSound = game.add.audio(\"fart\");\n        hitSound = game.add.audio(\"hit\");\n        hitBigSound = game.add.audio(\"hitBig\");\n        loserFartSound = game.add.audio(\"loserFart\");\n\n        initSpawnTimeMap();\n    }\n    \n    \n    function update() {\n        level = getLevelFromEnemiesSold();\n        updateShrek();\n        updateEnemies();\n        updateShrekAction();\n        updateStatOverlay();\n    }\n\n    function updateShrekAction() {\n        Object.keys(actionSpriteProps).forEach((actionName) => {\n            const sprite = actionSprites[actionName].sprite;\n            if (sprite.alpha > 0.5) {\n                actionSpriteProps[actionName].collisionCheckFunction();\n            }    \n        });\n\n    }\n\n    function createInventory() {\n        const items = Object.keys(ITEM_MAP);\n        for (let i = 0; i < items.length; i++){ \n            inventory[items[i]] = 0;\n        }\n    }\n\n    function addBackgroundScenery() {\n\n        //  The groundPlatform group contains the ground and the 2 ledges we can jump on\n        groundPlatform = game.add.group();\n            \n        //  We will enable physics for any object that is created in this group\n        if (groundPlatform) {\n            groundPlatform.enableBody = true;\n        }\n\n\n        // Here we create the ground.\n        for(var i = 0; i < 65; ++i) {\n            var x = i * 256;\n            var y = GROUND_LEVEL;\n            var ground = groundPlatform.create(x, y, 'ground');\n            game.add.sprite(x, y - 32, 'groundTop');\n            ground.body.immovable = true;\n        }\n\n        // add the forest background\n        for(var i = 0; i < 10; ++i) {\n            var x = i * 640;\n            var y = game.world.height - 64 - 12- 320;\n            game.add.sprite(x, 0, 'sky');\n            if(i == 5) {\n                game.add.sprite(x, y, 'storeBackground');\n            } else {\n                game.add.sprite(x, y, 'forestBackground');\n            }\n        }\n        \n        let store = game.add.sprite(STORE_X, STORE_Y, \"store\");\n        store.scale.setTo(2);\n        store.anchor.setTo(0.5, 0.5);\n    }\n\n    function addShrek() {\n        shrek = game.add.sprite(0,0,'shrek');\n        shrek.anchor.setTo(0.5, 1);\n        shrek.x = STORE_X;\n        shrek.y = GROUND_LEVEL;\n        game.physics.arcade.enable(shrek);\n        shrek.body.bounce.y = BOUNCE;\n        shrek.body.gravity.y = GRAVITY;\n        shrek.body.collideWorldBounds = true;\n        shrek.animations.add('shrekWalk', [0, 1, 2], 10, false);\n        shrek.hitTimer = 0;\n\n        addSwampBubble();\n    }\n\n    function addSwampBubble() {\n        swampBubble = game.add.image(shrek.x, shrek.y, \"swampBubble\");\n        swampBubble.alpha = 0;\n        swampBubble.anchor.setTo(0.5, 1);\n    }\n\n    function addActionSprites() {\n\n        Object.keys(actionSpriteProps).forEach((spriteName) => {\n            let spriteProps = actionSpriteProps[spriteName];\n            let actionSprite = game.add.sprite(0, 0, spriteName);\n            actionSprite.alpha = 0;\n            let animationName = spriteName + 'Anim';\n            let actionAnim = actionSprite.animations.add(animationName, [0, 1, 2, 2, 2], spriteProps.speed, false);\n            actionAnim.onComplete.add(() => {\n                actionSprite.alpha = 0; \n                actionSprites[spriteName].collidedEnemies = []\n            }, this);\n            actionSprites[spriteName] = {\n                sprite: actionSprite,\n                animationName: animationName,\n                name: spriteName,\n                collidedEnemies: []\n            };\n        });\n    }\n\n    function addEnemies() {\n        for (let i = 0; i < 10; i++) {\n            spawnEnemy(CreatureConstants.FAIRY);\n            spawnEnemy(CreatureConstants.IMP);\n        }\n    }\n\n    function initSpawnTimeMap() {\n        CreatureConstants.CREATURE_LIST.forEach((creatureProps) => {\n            timeSinceEnemySpawn[creatureProps.name] = 0;\n        });\n    }\n\n    function spawnEnemy(enemyTemplate) {\n        let enemy = game.add.sprite(0, 0, enemyTemplate.name);\n\n        enemy.anchor.setTo(0.5, 1);\n\n        enemy.x = randomSpawnX(enemyTemplate);\n        enemy.y = GROUND_LEVEL - enemyTemplate.altitude;\n        game.physics.arcade.enable(enemy);\n        enemy.body.bounce.y = BOUNCE;\n        enemy.body.gravity.y = enemyTemplate.flier ? 0 : GRAVITY;\n        enemy.body.collideWorldBounds = true;\n        enemy.animations.add(enemyTemplate.name + 'Walk', [0, 1, 2, 0], 12, false);\n        enemy.direction = -1; // custom state\n        enemy.health = enemyTemplate.baseHealth + level;\n        enemy.name = enemyTemplate.name\n        enemy.template = enemyTemplate;\n        enemy.pauseTimer = 0;\n        enemy.capturableTimer = 0;\n        enemies.push(enemy);\n    }\n\n    function randomSpawnX(enemyTemplate) {\n        let rand = Math.random();\n        let denormalized = rand * ((game.world.width /2) - STORE_RADIUS - enemyTemplate.minDistance - 250);\n        let spawnX = rand > 0.5 ? denormalized : game.world.width - denormalized;\n        return spawnX\n    }\n\n    function addForegroundScenery() {\n        for(var i = 0; i < 12; ++i) {\n            let rand = Math.random();\n            let imageName;\n            if(rand < 0.33) {\n                imageName = 'tree1';\n            } else if(rand < 0.66) {\n                imageName = 'tree2';\n            } else {\n                imageName = 'tree3';\n            }\n            var n = new Date().getMilliseconds();\n            \n            let treeX, treeY;\n            treeX = (i*6400/40)\n\n            if(n % 2 == 0) {\n                treeX -= 13;\n                treeY = GROUND_LEVEL + 35;\n            } else {\n                treeX += 13;\n                treeY = GROUND_LEVEL + 45;\n            }\n\n            let treeImage = game.add.image(treeX, treeY, imageName);\n            treeImage.alpha = 0.75;\n            treeImage.anchor.setTo(0.5, 1);\n        }\n        game.add.sprite(150, game.world.height - 215, 'tree1');\n        game.add.sprite(400, game.world.height - 115, \"berryBush\");\n        game.add.sprite(500, game.world.height - 270, 'tree2');\n        game.add.sprite(800, game.world.height - 284, 'tree3');\n        game.add.sprite(100, game.world.height - 125, \"berryBush\");\n    }\n\n    function toggleStore() {\n        if(isStoreOpen) {\n            storeUI.destroy();\n            isStoreOpen = false;\n            return;\n        }\n        if (shrek.x <= STORE_X + STORE_RADIUS && shrek.x >= STORE_X - STORE_RADIUS && !isStoreOpen) {\n            createStore();\n            isStoreOpen = true;\n        }\n    \n    }\n\n    function createStore() {\n        storeUI = game.add.group();\n\n        // Then add the menu\n        let menuContainer = StoreMenu(game);\n        storeUI.add(menuContainer);\n\n        let sellButtonCoords = camera_izeCoordinates(game.width - (MARGIN * 2),\n            game.height - (MARGIN * 2));\n        let sellButton = GenericButton(game, sellButtonCoords.x, \n            sellButtonCoords.y, 'SELL CREATURES', () => {\n                capturedCreatures.forEach((creature, i) => {\n                    let creatureName = creature.name;\n                    gold += creature.price;\n                    enemiesSold++;\n                    delete capturedCreatures[i];\n                    storePurchaseSound.play();\n                    creatureCounts[creatureName] = 0;\n                    \n                });\n                capturedCreatures = [];\n            });\n        sellButton.anchor.setTo(1, 0.5);\n        storeUI.add(sellButton);\n\n        let closeButtonCoords = camera_izeCoordinates(game.width - (MARGIN * 2), MARGIN * 2);\n        let closeButton = GenericButton(game, closeButtonCoords.x, \n            closeButtonCoords.y-32, 'X', () => {storeUI.destroy(); isStoreOpen = false;});\n        closeButton.anchor.setTo(0, 0);\n        storeUI.add(closeButton);\n        let y = MARGIN;\n        const items = Object.keys(ITEM_MAP);\n        let coords = camera_izeCoordinates(MARGIN * 2, y);\n        for(var i = 0; i < items.length; ++i) {\n            let itemName = items[i];\n            const itemDesc = ITEM_MAP[items[i]].descr;\n            let itemCost = ITEM_MAP[items[i]].cost;\n            let itemButton = ItemButton(game, coords.x, coords.y, itemName, () => {\n                // ensure player has enough currency to buy this item\n                if (validatePurchase(ITEM_MAP[itemName], itemName)) {\n                    inventory[itemName]+= 1;\n                    gold-= ITEM_MAP[itemName].cost;\n                    if (itemName === \"Swamp Bubble\") {\n                        bubbleGetSound.play();\n                    } else {\n                        storePurchaseSound.play();\n                    }\n                } else {\n                    storePurchaseDenied.play();\n                }\n            });\n            storeUI.add(itemButton);\n\n            let itemDescr = game.add.text(coords.x+25, coords.y+45, itemDesc + \" ($\" + itemCost  + \")\", DescriptionStyle);\n            storeUI.add(itemDescr);\n            coords.y += (MARGIN*3);\n        }\n    }\n\n    function validatePurchase(item, itemName) {\n        return item && item.cost <= gold && inventory[itemName] === 0;\n    }\n\n    function addStatOverlay() {\n        heartGroup = game.add.group();\n\n        // add coins\n        let coinCoords = camera_izeCoordinates(COIN_STAT_X, COIN_STAT_Y);\n        coinIcon = game.add.sprite(coinCoords.x, coinCoords.y,'coin');\n        coinIcon.animations.add('rotate', [0,1,2,3,4,5,6,7], 14, true);\n        coinIcon.animations.play('rotate');\n        coinIcon.anchor.setTo(0,0);\n        coinIcon.fixedToCamera = true;\n        \n        coinText = game.add.text(coinCoords.x + 20, coinCoords.y, ' x ' + gold, {font: 'Comic Sans MS', fill: FONT_COLOR, align: 'left', fontSize: '12px'});\n        coinText.fixedToCamera = true;\n\n        // add hearts\n        for(let i = 0; i < health; ++i) {\n            let coords = camera_izeCoordinates(HEALTH_BAR_X + 18 * i, HEALTH_BAR_Y);\n            let heart = game.add.sprite(coords.x, coords.y, 'heart');\n            heart.fixedToCamera = true;\n            heart.anchor.set(0,0);\n            heartGroup.add(heart);\n        }\n\n        // add captured creatures\n        let bagCoords = camera_izeCoordinates(BAG_X, BAG_Y)\n        iconBag = game.add.image(bagCoords.x, bagCoords.y, \"iconBag\");\n        iconBag.anchor.setTo(0,0);\n        iconBag.fixedToCamera = true;\n        iconBag.alpha = 0.7\n        let iconBagOverlay = game.add.image(bagCoords.x, bagCoords.y, \"iconBagOverlay\");\n        iconBagOverlay.anchor.setTo(0,0);\n        iconBagOverlay.fixedToCamera = true;\n        \n        let row = 0;\n        CreatureConstants.CREATURE_LIST.forEach((creatureProps) => {\n            let creatureName = creatureProps.name;\n            let y = BAG_Y + iconBag.height - 16 - (row * 23);\n            let x = BAG_X + 6;\n            let icon = game.add.image(x,y, creatureName + 'Icon');\n            let text = game.add.text(x + 16, y, ' x ' + creatureCounts[creatureName], {font: 'Comic Sans MS', fill: FONT_COLOR, align: 'left', fontSize: '12px'});\n            text.anchor.setTo(0, 0.5);\n            text.fixedToCamera = true;\n            creatureCountText[creatureName] = text;\n            icon.fixedToCamera = true;\n            icon.anchor.setTo(0, 0.5);\n            ++row;\n        });\n        \n    }\n\n    function updateStatOverlay() {\n        coinText.x = COIN_STAT_X + 20;\n        coinText.y = COIN_STAT_Y.y; \n        coinText.text = ' x ' + gold;\n\n        for(let i = 0; i < heartGroup.children.length; ++i) {\n            let heart = heartGroup.getChildAt(i);\n            if(i < health) {\n                heart.visible = true\n            } else {\n                heart.visible = false;\n            }\n        }\n\n        // creature count text\n        Object.keys(creatureCountText).forEach((creatureName) => {\n            creatureCountText[creatureName].text = ' x ' + creatureCounts[creatureName];\n        }); \n\n        // items\n        Object.keys(inventory).forEach((itemName) => {\n            if(inventory[itemName] < 1 || inventoryDisplay[itemName] || itemName === \"Swamp Bubble\") {\n                return;\n            }\n            let col = Object.keys(inventoryDisplay).length;\n            let itemIcon = game.add.image(ITEM_X + 18*col,ITEM_Y,ITEM_MAP[itemName].icon);\n            itemIcon.fixedToCamera = true;\n            itemIcon.anchor.setTo(0,0);\n            inventoryDisplay[itemName] = itemIcon;\n        });\n    }\n    \n    function updateShrek() {\n        if(inventory[\"Swamp Bubble\"] > 0) {\n            swampBubble.alpha = 0.6;\n        } else {\n            swampBubble.alpha = 0;\n        }\n\n        if(inventory[\"Fairie Dust\"] && !fairieDustEmitter) {\n            fairieDustEmitter = game.add.emitter(shrek.x, shrek.y-50, 200, 200);\n            fairieDustEmitter.makeParticles(\"fairieDust\");\n            fairieDustEmitter.flow(1000, 300, 1, -1);\n            fairieDustEmitter.alpha = .35;\n        }\n\n        if(isStoreOpen) {\n            game.physics.arcade.collide(shrek, groundPlatform);\n            shrek.body.velocity.x = 0;\n            return;\n        }\n        reanchorActionSprites();\n        if (shrek.hitTimer > 0) {\n            game.physics.arcade.collide(shrek, groundPlatform);\n            updateKnockedBackSprite(shrek);\n        } else {\n            updateShrekNormal();\n        }\n        swampBubble.x = shrek.x;\n        swampBubble.y = shrek.y;\n\n        if (fairieDustEmitter) {\n            fairieDustEmitter.x = shrek.x;\n            fairieDustEmitter.y = shrek.y-75;\n        }\n    }\n\n    function getShrekRunSpeed() {\n        return inventory[\"Speed\"] ? SHREK_BASE_SPEED * 2 : SHREK_BASE_SPEED;\n    }\n    \n\n\n    function updateShrekNormal() {\n\n        var isOnGround = game.physics.arcade.collide(shrek, groundPlatform);\n        //  Reset the players velocity (movement)\n        shrek.body.velocity.x = 0;\n        shrek.body.bounce.y = bouncing ? 0.7 : BOUNCE;\n\n        if (cursors.left.isDown)\n        {\n            if(!isShrekFacingLeft) {\n                flipShrek(); // flips shrek about the y axis\n                isShrekFacingLeft = true;\n            }\n            //  Move to the left\n            shrek.body.velocity.x = -getShrekRunSpeed();\n            shrek.animations.play('shrekWalk');\n        }\n        else if (cursors.right.isDown)\n        {\n            if(isShrekFacingLeft) {\n                flipShrek(); // flips shrek about the y axis\n                isShrekFacingLeft = false;\n            }\n            //  Move to the right\n            shrek.body.velocity.x = getShrekRunSpeed();\n            shrek.animations.play('shrekWalk');\n        } else {\n            shrek.frame = 0;\n        }\n\n        //  Allow the shrek to jump if they are touching the ground.\n        if (cursors.up.isDown) {\n            if(shrek.body.touching.down && isOnGround) {\n                shrek.body.velocity.y = -SHREK_BASE_JUMP_SPEED;\n            } else if(!doubleJumped && !jumpKeyWasPressed && inventory[\"Fart in a Jar\"] > 0) {\n                shrek.body.velocity.y = -SHREK_BASE_JUMP_SPEED;\n                doubleJumped = true;\n                fartSound.play();\n            }\n            jumpKeyWasPressed = true;\n        } else {\n            jumpKeyWasPressed = false;\n        }\n        // bounce logic\n        if (isOnGround) {\n            if (bouncing) {\n                bubbleBounceSound.play();\n            }\n            bouncing = false;\n            doubleJumped = false;\n        } else if(inventory[\"Fairie Dust\"]) {\n            shrek.body.gravity.y = GRAVITY / 2;\n        }\n        const currentDown = cursors.down.isDown;\n        if (currentDown && !lastDown && !isOnGround && bouncing === false && inventory[\"Swamp Bubble\"] === 1) {\n            shrek.body.velocity.y = 900*1.25;\n            bouncing = true;\n        }\n\n        enemies.forEach((enemy) => {\n            game.physics.arcade.overlap(shrek, enemy, onShrekHit, null, this);\n        });\n        lastDown = currentDown;\n    }\n\n    let lastDown = false;\n\n    function updateKnockedBackSprite(sprite) {\n        sprite.hitTimer--;\n        sprite.tint = sprite.hitTimer % 4 >= 2 ? '0xff6666' : '0xffffff';\n    }\n    \n    function updateCapturableEnemy(enemy) {\n        enemy.capturableTimer--;\n        enemy.alpha = enemy.capturableTimer % 4 >= 2 ? 0.1 : 1;\n    }\n\n    function updateEnemies() {\n        Object.keys(timeSinceEnemySpawn).forEach((enemyName) => {\n            let timeSinceSpawn = timeSinceEnemySpawn[enemyName]++;\n            let enemyProps = CreatureConstants.CREATURE_NAME_MAP[enemyName];\n            if(timeSinceSpawn > enemyProps.baseSpawnRate - (360 * level)) {\n                spawnEnemy(enemyProps);\n                timeSinceEnemySpawn[enemyName] = 0;\n            }\n        });\n        enemies.forEach((enemy) => {\n            var isOnGround = game.physics.arcade.collide(enemy, groundPlatform);\n\n            if(enemy.hitTimer > 0) {\n                updateKnockedBackSprite(enemy);\n                return;\n            }\n\n            if(enemy.health < 0 ) {\n                destroyEnemy(enemy);\n                return;\n            }\n\n            if(enemy.health === 0) {\n                updateCapturableEnemy(enemy);\n                // enemies are capturable only for a limited duration\n                if(enemy.capturableTimer === 0) {\n                    enemy.health = 1;\n                    enemy.alpha = 1;\n                }\n            }\n\n            if(enemy.pauseTimer > 0) {\n                enemy.pauseTimer--;\n                return;\n            }\n            let speed = getEnemySpeedFromLevel(enemy.template);\n            if(enemy.health === 0) {\n                speed /= 2;\n            }\n\n            if(enemy.x > STORE_X - STORE_RADIUS && enemy.x < STORE_X) {\n                enemy.body.velocity.x = -speed;\n                if(enemy.direction === 1) {\n                    flipSpriteDirection(enemy);\n                }\n                enemy.direction = -1;\n                return;\n            } else if(enemy.x < STORE_X + STORE_RADIUS && enemy.x > STORE_X) {\n                if(enemy.direction === -1) {\n                    flipSpriteDirection(enemy);\n                }\n                enemy.body.velocity.x = speed;\n                enemy.direction = 1;\n                return;\n            }\n\n            enemy.body.velocity.x = speed * enemy.direction;\n            enemy.animations.play(enemy.name + 'Walk');\n            if(Math.random() < enemy.template.turnProb) {\n                enemy.direction *= -1;\n                flipSpriteDirection(enemy);\n            }\n                //  Allow the enemy to jump if they are touching the ground.\n            if (enemy.body.touching.down && isOnGround) {\n                if(Math.random() * 1000 > 992) {\n                    enemy.body.velocity.y = -SHREK_BASE_JUMP_SPEED;\n                }\n            }\n        });\n    }\n\n    function reanchorActionSprites() {\n        Object.keys(actionSprites).forEach(\n            (actionSpriteName) => anchorActionSprite(actionSprites[actionSpriteName].sprite));\n    }\n\n    function onShrekHit(shrek, enemy) {\n        enemy.body.velocity.x = 0;\n        enemy.body.velocity.y = 0;\n        enemy.pauseTimer = SHREK_KNOCKBACK_TIME / 2;\n        knockbackSprite(shrek, enemy);\n        if(inventory[\"Swamp Bubble\"] > 0) {\n            inventory[\"Swamp Bubble\"] = inventory[\"Swamp Bubble\"] - 1;\n            bubblePopSound.play();\n            return;\n        }\n        health--;\n        if(health < 1) {\n            loserFartSound.play();\n            game.state.start(\"GameOver\");\n        }\n    }\n\n    function knockbackSprite(sprite, adversary) {\n        sprite.hitTimer = SHREK_KNOCKBACK_TIME;\n        const template = sprite.template || {};\n        let kbX = template.knockbackVelocityX;\n        let kbY = template.knockbackVelocityY;\n        if (adversary === shrek && inventory[\"Big Onion\"] === 1) {\n            kbX *= 1;\n            kbY *= 5;\n        }\n        let velocityX = kbX !== undefined ? kbX : SHREK_KNOCKBACK_SPEED;\n        let velocityY = kbY !== undefined ? kbY : -SHREK_KNOCKBACK_SPEED;\n        sprite.body.velocity.x = (adversary.body.x > sprite.body.x ? -velocityX : velocityX);\n        sprite.body.velocity.y = velocityY;\n    }\n\n    function animateAction(actionSpriteName) {\n        if(isShrekActing) {\n            return;\n        }\n        isShrekActing = true;\n        let actionSprite = actionSprites[actionSpriteName].sprite;\n        let animationName = actionSprites[actionSpriteName].animationName;\n        actionSprite.alpha = 1;\n        let frameWidth = actionSprite.animations.currentFrame.width;\n        let xPercent = ((frameWidth) - actionArmFromRight) / (frameWidth);\n        actionSprite.anchor.setTo(xPercent, 0.5);\n        anchorActionSprite(actionSprite);\n        let anim = actionSprite.animations.play(animationName);\n        anim.onComplete.add(() => {isShrekActing = false;});\n    }\n\n    // flips sprite about the y-axis\n    function flipSpriteDirection(sprite) {\n        sprite.scale.x *= -1\n    }\n    \n    function flipShrek() {\n        flipSpriteDirection(shrek);\n        Object.keys(actionSprites).forEach(\n            (actionSpriteName) => flipSpriteDirection(actionSprites[actionSpriteName].sprite));\n    }\n\n    function anchorActionSprite(actionSprite) {\n        let armAnchor = getShrekActionAnchor();\n        actionSprite.x = armAnchor.anchorX;\n        actionSprite.y = armAnchor.anchorY;\n    }\n\n    function getShrekActionAnchor() {\n        let anchorX = isShrekFacingLeft? shrek.x - 17 : shrek.x + 17;\n        let anchorY = shrek.y - 52;\n        return {anchorX, anchorY};\n    }\n\n    function camera_izeCoordinates(x,y) {\n        return {\n            x: game.camera.x + x,\n            y: game.camera.y +y\n        };\n    }\n\n    function getEnemySpeedFromLevel(enemyTemplate) {\n        return enemyTemplate.baseSpeed + 20 * level;\n    }\n\n    function checkNetCollision() {\n        const net = actionSprites['net'];\n        const netSprite = net.sprite;\n        enemies.forEach((enemy) => {\n            if (net.collidedEnemies.length >= 1 || Object.keys(capturedCreatures).includes(enemy.name) || enemy.health > 0) {\n                return;\n            }\n            const foundCollision = Phaser.Rectangle.intersects(enemy.getBounds(), netSprite.getBounds());\n            if (foundCollision) {\n                net.collidedEnemies.push(enemy);\n                creatureCounts[enemy.name] += 1;\n                capturedCreatures.push(enemy.template);\n                destroyEnemy(enemy)\n                netCaptureSound.play();\n            }\n        });\n        \n    }\n\n    const checkChopCollision = (isBigFist) => {\n        const chop = isBigFist ? actionSprites['bigfist'] : actionSprites['chop'];\n        const chopSprite = chop.sprite;\n\n        enemies.forEach((enemy) => {\n            if (chop.collidedEnemies.includes(enemy)) {\n                return;\n            }\n            const foundCollision = Phaser.Rectangle.intersects(enemy.getBounds(), chopSprite.getBounds());\n            if (foundCollision) {\n                isBigFist ? hitBigSound.play() : hitSound.play();\n                chop.collidedEnemies.push(enemy);\n                const hadZeroHealth = enemy.health === 0;\n                const damageDealt = isBigFist ? 4 : 1;\n                enemy.health -= damageDealt;\n                knockbackSprite(enemy, shrek);\n\n                // at least one hit needs to make enemy capturable\n                if (!hadZeroHealth && enemy.health < 0) { \n                    enemy.health = 0; \n                }\n                if (enemy.health === 0) {\n                    enemy.capturableTimer = CAPTURABLE_DURATION * (isBigFist ? 3 : 1);\n                }\n            }\n        });\n    }\n\n    function destroyEnemy(enemy) {\n        enemies.splice(enemies.indexOf(enemy), 1);\n        enemy.destroy();\n    }\n\n    function getLevelFromEnemiesSold() {\n        if(enemiesSold < 10) {\n            return 0;\n        } else if(enemiesSold < 20) {\n            return 1;\n        } else if(enemiesSold < 30) {\n            return 2;\n        } else if(enemiesSold < 50) {\n            return 3;\n        } else {\n            return 4;\n        }\n    }\n\n    return {preload, create, update};\n}","import {MARGIN} from \"../common/constants\";\nexport default function StoreMenu(game) {\n\n    var menuContainer;\n    var width = game.width - MARGIN * 2 // example;\n    var height = game.height - MARGIN * 2 // example;\n\n    var bmd = game.add.bitmapData(width, height);\n     \n    bmd.ctx.beginPath();\n    bmd.ctx.rect(0, 0, width, height);\n    bmd.ctx.fillStyle = '#000000';\n    bmd.ctx.fill();\n    menuContainer = game.add.sprite(game.camera.x + (game.width/2), game.camera.y + (game.height/2), bmd);\n    menuContainer.anchor.setTo(0.5, 0.5);\n    menuContainer.bringToTop();\n    menuContainer.alpha = 0.75;  \n    return menuContainer;\n}"],"sourceRoot":""}